<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>奥利奥の麦旋风</title>
  
  <subtitle>Twitter竟传出热门巨瓜！！</subtitle>
  <link href="https://chenlinbb.github.io/atom.xml" rel="self"/>
  
  <link href="https://chenlinbb.github.io/"/>
  <updated>2024-07-17T15:58:49.425Z</updated>
  <id>https://chenlinbb.github.io/</id>
  
  <author>
    <name>Chenlin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>1.Shell编程-基础</title>
    <link href="https://chenlinbb.github.io/archives/31b0d93.html"/>
    <id>https://chenlinbb.github.io/archives/31b0d93.html</id>
    <published>2024-07-17T15:58:40.340Z</published>
    <updated>2024-07-17T15:58:49.425Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="shell的基本概述"><a href="#shell的基本概述" class="headerlink" title="shell的基本概述"></a>shell的基本概述</h1><h2 id="为什么要使用shell？"><a href="#为什么要使用shell？" class="headerlink" title="为什么要使用shell？"></a>为什么要使用shell？</h2><ol><li>安装操作系统(CentOS)自动化安装操作系统(kickstart cobbler)底层shell</li><li>初始化优化操作系统<ol><li>ntp时间同步</li><li>更改默认yum源</li><li>ssh优化</li><li>关闭Selinux</li><li>关闭/开启 防火墙(C6:iptables C7:firewalld)</li><li>安装基础服务(wget vim lrzsz net-tools unzip gzip…)</li><li>优化文件描述符</li><li>优化字符集</li></ol></li><li>安装服务<ol><li>Nginx</li><li>PHP</li><li>MySQL</li><li>Redis</li><li>MHA</li><li>Rsync</li><li>NFS</li><li>MongoDB</li><li>Zabbix</li></ol></li><li>启动 服务（系统默认的shell脚本） </li><li>脚本实现自动化代码上线 </li><li>监控服务（使用shell）</li><li>结合定时任务使用shell</li><li>重复性工作写入脚本<ol><li>日志切割</li><li>日志分析</li><li>数据统计</li><li>机器巡检</li><li>数据备份</li></ol></li></ol><h2 id="shell的编程和基础知识"><a href="#shell的编程和基础知识" class="headerlink" title="shell的编程和基础知识"></a>shell的编程和基础知识</h2><ol><li>熟练使用vim编辑器</li><li>熟悉ssh终端（Xshell、CRT）</li><li>熟练掌握linux常用命令</li><li>熟练掌握linux正则表达式及三剑客命令</li></ol><h2 id="如何写好shell的编程"><a href="#如何写好shell的编程" class="headerlink" title="如何写好shell的编程"></a>如何写好shell的编程</h2><ol><li>环境变量</li><li>条件表达式</li><li>流程控制语句</li><li>循环</li><li>数组</li><li>函数</li></ol><p>学习shell三部曲：</p><ol><li>先读懂shell</li><li>再修改shell</li><li>自己写shell</li></ol><p>找一本合适的教材、或者自己认真做的较为全面的笔记<br>大忌：不可拿来主义，可以模仿，但是要自己嚼烂了在吃下<br>学完shell 可解决企业中大部分脚本问题</p><h2 id="什么是shell"><a href="#什么是shell" class="headerlink" title="什么是shell"></a>什么是shell</h2><p>交互式shell</p><p>交互式模式就是shell等待你的输入，并且执行你提交的命令。<br>这种模式被称作交互式是因为shell与用户进行交互，也是大多数用户非常熟悉的：登录、执行一些命令、签退。当你签退后，shell也终止了。</p><p>非交互式shell</p><p>非交互式模式下，shell不与你进行交互，而是读取存放在文件中的命令，并且执行它们。<br>当它读到文件的结尾，shell也就终止了。</p><h2 id="什么是shell脚本"><a href="#什么是shell脚本" class="headerlink" title="什么是shell脚本"></a>什么是shell脚本</h2><p>把在命令行执行的命令放在一个文件里统一执行，称为Shell脚本 包含若干个linux命令、循环语句，条件语句等。</p><h2 id="shell脚本规范"><a href="#shell脚本规范" class="headerlink" title="shell脚本规范"></a>shell脚本规范</h2><ol><li><p>目录统一</p></li><li><p>shell脚本的结尾要以.sh结尾</p></li><li><p>脚本的开头需要有解释器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br></pre></td></tr></table></figure></li><li><p>脚本中需要有作者信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#Author: _ChenlinHe_</span></span><br><span class="line"><span class="comment">#Date: _1999-12-31_</span></span><br><span class="line"><span class="comment">#Name: _Print Message_</span></span><br></pre></td></tr></table></figure></li><li><p>必须要加注释（开发规范，运维规范…）</p></li><li><p>shell中的文字尽量使用英文</p></li><li><p>成对的符号和语句一次性书写完</p></li></ol><h2 id="自定义一个vim模板"><a href="#自定义一个vim模板" class="headerlink" title="自定义一个vim模板"></a>自定义一个vim模板</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先编辑一个模板文件，该模板文件可以叫任何名字</span></span><br><span class="line">vim /usr/share/vim/vimfiles/template.hcl</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#Author: _ChenlinHe_</span></span><br><span class="line"><span class="comment">#Date: _1999-12-31_</span></span><br><span class="line"><span class="comment">#Name: _Print Message_</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 写完之后，我们需要修改一下vim的配置文件</span></span><br><span class="line">vim /etc/vimrc</span><br><span class="line">autocmd BufNewFile *.spec 0r /usr/share/vim/vimfiles/template.spec</span><br><span class="line"><span class="comment">## 在第28行，autocmd自动保存模板文件，修改一下，因为我们是要写shell脚本的模板</span></span><br><span class="line"><span class="comment">## 所以我们要把*.spec 修改成*.sh</span></span><br><span class="line"><span class="comment">## 然后将后面的模板文件改成你定义的模板文件名</span></span><br><span class="line">autocmd BufNewFile *.sh 0r /usr/share/vim/vimfiles/template.hcl</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 接下来，我们编辑所有只要以sh结尾的文件，都会带有作者信息</span></span><br><span class="line">vim test_hcl.sh</span><br></pre></td></tr></table></figure><h2 id="脚本的执行方式"><a href="#脚本的执行方式" class="headerlink" title="脚本的执行方式"></a>脚本的执行方式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行脚本的方式</span></span><br><span class="line"><span class="comment">## sh + 脚本文件</span></span><br><span class="line">sh test.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">## bash + 脚本文件</span></span><br><span class="line">bash test.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">## ./脚本文件</span></span><br><span class="line">./test.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">## 脚本文件绝对路径</span></span><br><span class="line">/root/test.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">## . + 脚本文件</span></span><br><span class="line">. test.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">## source + 脚本文件</span></span><br><span class="line"><span class="built_in">source</span> test.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注释：</span></span><br><span class="line">. 和 <span class="built_in">source</span> 都是在父shell下执行的</span><br><span class="line">sh ， bash ， 相对路径 ， 绝对路径都是在子shell下执行的</span><br></pre></td></tr></table></figure><h1 id="开发语言中程序代码的分类"><a href="#开发语言中程序代码的分类" class="headerlink" title="开发语言中程序代码的分类"></a>开发语言中程序代码的分类</h1><h2 id="编译型"><a href="#编译型" class="headerlink" title="编译型"></a>编译型</h2><p>写完后，需要编译才能运行。开发书写的代码，无法直接运行，需要编译（Java、C语言、等）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑代码</span></span><br><span class="line">vim hello.c</span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"> </span><br><span class="line">void <span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 编译成二进制文件</span></span><br><span class="line">gcc hello.c -o hello.bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看文件属性</span></span><br><span class="line">file hello.bin</span><br><span class="line">hello.bin: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), <span class="keyword">for</span> GNU/Linux 2.6.32, BuildID[sha1]=c248ed9f695c05ece7d46731556e86eb0ac6bc11, not stripped</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 运行脚本</span></span><br><span class="line">./hello.bin</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><h2 id="解释型"><a href="#解释型" class="headerlink" title="解释型"></a>解释型</h2><p>书写完成，通过命令解释器运行。书写完成后，使用对应的命令解释器（shell、python、等）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑代码</span></span><br><span class="line">vim hello.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看文件属性</span></span><br><span class="line">file hello.sh</span><br><span class="line">hello.sh: Bourne-Again shell script, ASCII text executable</span><br><span class="line"><span class="comment"># 运行脚本</span></span><br><span class="line">sh hello.sh</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;shell的基本概述&quot;&gt;&lt;a href=&quot;#shell的基本概述&quot; class=&quot;headerlink&quot; title=&quot;shell的基本概述&quot;&gt;&lt;/a&gt;shell的基本概述&lt;/h1&gt;&lt;h2 id=&quot;为什么要使用shell？&quot;&gt;&lt;a hre</summary>
      
    
    
    
    <category term="Shell编程" scheme="https://chenlinbb.github.io/categories/Shell%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="自动化运维" scheme="https://chenlinbb.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/"/>
    
    <category term="Shell编程" scheme="https://chenlinbb.github.io/tags/Shell%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Shell脚本" scheme="https://chenlinbb.github.io/tags/Shell%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>9.Kibana深入-日志图形展示</title>
    <link href="https://chenlinbb.github.io/archives/5e178ae3.html"/>
    <id>https://chenlinbb.github.io/archives/5e178ae3.html</id>
    <published>2024-07-17T15:51:58.162Z</published>
    <updated>2024-07-17T15:52:07.279Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="Kibana创建区域图"><a href="#Kibana创建区域图" class="headerlink" title="Kibana创建区域图"></a>Kibana创建区域图</h1><p>Kibana支持多重图从展示功能，需要日志是json格式的支持。</p><h2 id="Kibana区域图"><a href="#Kibana区域图" class="headerlink" title="Kibana区域图"></a>Kibana区域图</h2><p>打开浏览器，访问：<a href="http://10.0.0.54:5601/">http://10.0.0.54:5601</a></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549521583383.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549522610978.jpg" alt="img"></p><p>选择一个日志</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549541238562.jpg" alt="img"></p><p>添加一个<code>X轴</code></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549546929568.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549547507138.jpg" alt="img"></p><p>再次点击<code>Vlsualize</code>即可看见刚才创建的图形</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549548140754.jpg" alt="img"></p><h1 id="Kibana创建数据表"><a href="#Kibana创建数据表" class="headerlink" title="Kibana创建数据表"></a>Kibana创建数据表</h1><h2 id="Kibana数据表"><a href="#Kibana数据表" class="headerlink" title="Kibana数据表"></a>Kibana数据表</h2><p>点击图中 <code>+号</code> 即可再次画图。</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549548975502.jpg" alt="img"></p><p>选择<code>Data table</code> 数据表</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549550023672.jpg" alt="img"></p><p>选择日志</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549550443772.jpg" alt="img"></p><p>添加行</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549550980114.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549552174899.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549553259903.jpg" alt="img"></p><p>保存</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549554428771.jpg" alt="img"></p><h1 id="Kibana创建热图"><a href="#Kibana创建热图" class="headerlink" title="Kibana创建热图"></a>Kibana创建热图</h1><h2 id="热图举例"><a href="#热图举例" class="headerlink" title="热图举例"></a>热图举例</h2><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549591344556.jpg" alt="img"></p><h2 id="Kibana热图"><a href="#Kibana热图" class="headerlink" title="Kibana热图"></a>Kibana热图</h2><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549556186472.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549556404085.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549556656571.jpg" alt="img"></p><p>颜色随意选择</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549557903794.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549558315788.jpg" alt="img"></p><h1 id="Kibana创建折线图"><a href="#Kibana创建折线图" class="headerlink" title="Kibana创建折线图"></a>Kibana创建折线图</h1><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549558787180.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549559070811.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549559343878.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549560151536.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549561236040.jpg" alt="img"></p><h1 id="Kibana创建MarkDown"><a href="#Kibana创建MarkDown" class="headerlink" title="Kibana创建MarkDown"></a>Kibana创建MarkDown</h1><h2 id="Kibana-Mark-Down"><a href="#Kibana-Mark-Down" class="headerlink" title="Kibana Mark Down"></a>Kibana Mark Down</h2><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549564376665.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549570038365.jpg" alt="img"></p><h1 id="Kibana创建饼图"><a href="#Kibana创建饼图" class="headerlink" title="Kibana创建饼图"></a>Kibana创建饼图</h1><h2 id="Kibana饼图"><a href="#Kibana饼图" class="headerlink" title="Kibana饼图"></a>Kibana饼图</h2><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549572734444.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549573396953.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549573662638.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549574900936.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549575417096.jpg" alt="img"></p><h1 id="Kibana创建条形图"><a href="#Kibana创建条形图" class="headerlink" title="Kibana创建条形图"></a>Kibana创建条形图</h1><h2 id="Kibana条形图"><a href="#Kibana条形图" class="headerlink" title="Kibana条形图"></a>Kibana条形图</h2><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549578350562.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549578842645.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549579099913.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549579924599.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549580429327.jpg" alt="img"></p><h1 id="Kibana创建度量图"><a href="#Kibana创建度量图" class="headerlink" title="Kibana创建度量图"></a>Kibana创建度量图</h1><h2 id="Kibana度量图"><a href="#Kibana度量图" class="headerlink" title="Kibana度量图"></a>Kibana度量图</h2><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549582135871.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549582399513.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549582611905.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549582882697.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549583197250.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549586202662.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549586525785.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549587365868.jpg" alt="img"></p><h1 id="Kibana创建标签云"><a href="#Kibana创建标签云" class="headerlink" title="Kibana创建标签云"></a>Kibana创建标签云</h1><h2 id="标签云举例"><a href="#标签云举例" class="headerlink" title="标签云举例"></a>标签云举例</h2><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549589478170.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549589288208.jpg" alt="img"></p><h2 id="Kibana标签云"><a href="#Kibana标签云" class="headerlink" title="Kibana标签云"></a>Kibana标签云</h2><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549591992222.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549592272803.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549592544572.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549593181067.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549593891141.jpg" alt="img"></p><h1 id="Kibana聚合图形"><a href="#Kibana聚合图形" class="headerlink" title="Kibana聚合图形"></a>Kibana聚合图形</h1><h2 id="聚合图形"><a href="#聚合图形" class="headerlink" title="聚合图形"></a>聚合图形</h2><p>创建一个<code>Dashboard</code></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549595128426.jpg" alt="img"></p><p>一开始什么都没有的时候，它会告诉你<code>Dashboard</code>是空的，点击<code>Add</code>添加。</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549595731228.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549597054295.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549598008177.jpg" alt="img"></p><p>再次点击<code>Dashboard</code>就可以看见刚才创建的聚合图形了。</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549598346480.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549599098408.jpg" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;Kibana创建区域图&quot;&gt;&lt;a href=&quot;#Kibana创建区域图&quot; class=&quot;headerlink&quot; title=&quot;Kibana创建区域图&quot;&gt;&lt;/a&gt;Kibana创建区域图&lt;/h1&gt;&lt;p&gt;Kibana支持多重图从展示功能，需要日志</summary>
      
    
    
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/categories/ELK%E9%9B%86%E7%BE%A4/"/>
    
    
    <category term="自动化运维" scheme="https://chenlinbb.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/"/>
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/tags/ELK%E9%9B%86%E7%BE%A4/"/>
    
    <category term="日志收集" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/"/>
    
    <category term="日志分析" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>8.Filebeat深入收集日志</title>
    <link href="https://chenlinbb.github.io/archives/550b6709.html"/>
    <id>https://chenlinbb.github.io/archives/550b6709.html</id>
    <published>2024-07-17T15:51:58.160Z</published>
    <updated>2024-07-17T15:52:07.278Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="Filebeat介绍及部署"><a href="#Filebeat介绍及部署" class="headerlink" title="Filebeat介绍及部署"></a>Filebeat介绍及部署</h1><h2 id="Filebeat介绍"><a href="#Filebeat介绍" class="headerlink" title="Filebeat介绍"></a>Filebeat介绍</h2><p>Filebeat附带预构建的模块，这些模块包含收集、解析、充实和可视化各种日志文件格式数据所需的配置，每个Filebeat模块由一个或多个文件集组成，这些文件集包含摄取节点管道、Elasticsearch模板、Filebeat勘探者配置和Kibana仪表盘。</p><p>Filebeat模块很好的入门，它是轻量级单用途的日志收集工具，用于在没有安装java的服务器上专门收集日志，可以将日志转发到logstash、elasticsearch或redis等场景中进行下一步处理。</p><h2 id="Filebeat和Logstash使用内存对比"><a href="#Filebeat和Logstash使用内存对比" class="headerlink" title="Filebeat和Logstash使用内存对比"></a>Filebeat和Logstash使用内存对比</h2><p><strong>Logstash内存占用</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ps -ef |  grep -v grep |    grep logstash  | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span></span><br><span class="line">12628</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /proc/12628/status | grep -i vm</span><br><span class="line">VmPeak:  6252788 kB</span><br><span class="line">VmSize:  6189252 kB</span><br><span class="line">VmLck:         0 kB</span><br><span class="line">VmHWM:    661168 kB</span><br><span class="line">VmRSS:    661168 kB</span><br><span class="line">VmData:  6027136 kB</span><br><span class="line">VmStk:        88 kB</span><br><span class="line">VmExe:         4 kB</span><br><span class="line">VmLib:     16648 kB</span><br><span class="line">VmPTE:      1888 kB</span><br><span class="line">VmSwap:        0 kB</span><br></pre></td></tr></table></figure><p><strong>Filebeat内存占用</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span>  /proc/12750/status  /proc/12751/status |  grep -i vm </span><br><span class="line">VmPeak:    11388 kB</span><br><span class="line">VmSize:    11388 kB</span><br><span class="line">VmLck:         0 kB</span><br><span class="line">VmHWM:       232 kB</span><br><span class="line">VmRSS:       232 kB</span><br><span class="line">VmData:    10424 kB</span><br><span class="line">VmStk:        88 kB</span><br><span class="line">VmExe:       864 kB</span><br><span class="line">VmLib:         0 kB</span><br><span class="line">VmPTE:        16 kB</span><br><span class="line">VmSwap:        0 kB</span><br><span class="line"></span><br><span class="line">VmPeak:    25124 kB</span><br><span class="line">VmSize:    25124 kB</span><br><span class="line">VmLck:         0 kB</span><br><span class="line">VmHWM:     15144 kB</span><br><span class="line">VmRSS:     15144 kB</span><br><span class="line">VmData:    15496 kB</span><br><span class="line">VmStk:        88 kB</span><br><span class="line">VmExe:      4796 kB</span><br><span class="line">VmLib:         0 kB</span><br><span class="line">VmPTE:        68 kB</span><br><span class="line">VmSwap:        0 kB</span><br></pre></td></tr></table></figure><h2 id="Filebeat部署"><a href="#Filebeat部署" class="headerlink" title="Filebeat部署"></a>Filebeat部署</h2><p>官方文档:<a href="https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-configuration-details.html">https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-configuration-details.html</a></p><p>官网下载地址:<a href="https://www.elastic.co/downloads/beats/filebeat">https://www.elastic.co/downloads/beats/filebeat</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载Filebeat安装包</span></span><br><span class="line">wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-5.3.2-x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装Filebeat</span></span><br><span class="line">yum localinstall -y filebeat-5.3.2-x86_64.rpm</span><br></pre></td></tr></table></figure><h1 id="Filebeat收集单类型日志到本地文件"><a href="#Filebeat收集单类型日志到本地文件" class="headerlink" title="Filebeat收集单类型日志到本地文件"></a>Filebeat收集单类型日志到本地文件</h1><h2 id="配置Filebeat"><a href="#配置Filebeat" class="headerlink" title="配置Filebeat"></a>配置Filebeat</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑Filebeat配置文件</span></span><br><span class="line">vim /etc/filebeat/filebeat.yml</span><br><span class="line">filebeat.prospectors:</span><br><span class="line">- input_type: <span class="built_in">log</span></span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/nginx/www.xxx.com_access_json.log</span><br><span class="line">    - /var/log/nginx/xxx.xxx.com_access_json.log</span><br><span class="line"><span class="comment">## 不收集的行</span></span><br><span class="line">  exclude_lines: [<span class="string">&quot;^DBG&quot;</span>,<span class="string">&quot;^$&quot;</span>]</span><br><span class="line"><span class="comment">## 日志类型</span></span><br><span class="line">  document_type: ngx_log</span><br><span class="line"></span><br><span class="line">output.file:</span><br><span class="line">  path: <span class="string">&quot;/tmp&quot;</span></span><br><span class="line">  filename: <span class="string">&quot;filebeat.txt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Filebeat(CentOS6)</span></span><br><span class="line">/etc/init.d/filebeat start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Filebeat(CentOS7)</span></span><br><span class="line">systemctl start filebeat</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测进程</span></span><br><span class="line">ps -ef|grep filebeat</span><br><span class="line">root      10881      1  0 01:06 pts/1    00:00:00 /usr/share/filebeat/bin/filebeat-god -r / -n -p /var/run/filebeat.pid -- /usr/share/filebeat/bin/filebeat -c /etc/filebeat/filebeat.yml -path.home /usr/share/filebeat -path.config /etc/filebeat -path.data /var/lib/filebeat -path.logs /var/log/filebeat</span><br><span class="line">root      10882  10881  0 01:06 pts/1    00:00:00 /usr/share/filebeat/bin/filebeat -c /etc/filebeat/filebeat.yml -path.home /usr/share/filebeat -path.config /etc/filebeat -path.data /var/lib/filebeat -path.logs /var/log/filebeat</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看文件</span></span><br><span class="line">ll /tmp</span><br></pre></td></tr></table></figure><h1 id="Filebeat收集单类型多个日志到Logstash"><a href="#Filebeat收集单类型多个日志到Logstash" class="headerlink" title="Filebeat收集单类型多个日志到Logstash"></a>Filebeat收集单类型多个日志到Logstash</h1><h2 id="配置Filebeat-1"><a href="#配置Filebeat-1" class="headerlink" title="配置Filebeat"></a>配置Filebeat</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑Filebeat配置文件</span></span><br><span class="line">vim /etc/filebeat/filebeat.yml</span><br><span class="line">filebeat.prospectors:</span><br><span class="line">- input_type: <span class="built_in">log</span></span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/nginx/www.xxx.com_access_json.log</span><br><span class="line">    - /var/log/nginx/xxx.xxx.com_access_json.log</span><br><span class="line">  exclude_lines: [<span class="string">&quot;^DBG&quot;</span>,<span class="string">&quot;^$&quot;</span>]</span><br><span class="line">  document_type: ngx_log</span><br><span class="line"></span><br><span class="line">output.logstash:</span><br><span class="line">  <span class="comment">## logstash 服务器地址，可以是多个</span></span><br><span class="line">  hosts: [<span class="string">&quot;10.0.0.83:6666&quot;</span>]</span><br><span class="line">  <span class="comment">## 是否开启输出至logstash，默认即为true</span></span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  <span class="comment">## 工作线程数</span></span><br><span class="line">  worker: 1</span><br><span class="line">  <span class="comment">## 压缩级别</span></span><br><span class="line">  compression_level: 3</span><br><span class="line">  <span class="comment">## 多个输出的时候开启负载</span></span><br><span class="line"><span class="comment">#  loadbalance: true</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 重启Filebeat</span></span><br><span class="line">/etc/init.d/filebeat stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除文件</span></span><br><span class="line"><span class="built_in">rm</span> -f /var/lib/filebeat/registry</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动filebeat</span></span><br><span class="line">/etc/init.d/filebeat start</span><br></pre></td></tr></table></figure><h2 id="配置Logstash输出到ES"><a href="#配置Logstash输出到ES" class="headerlink" title="配置Logstash输出到ES"></a>配置Logstash输出到ES</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入Logstash配置文件目录</span></span><br><span class="line"><span class="built_in">cd</span> /etc/logstash/conf.d/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑Logstash配置文件</span></span><br><span class="line">vim beats.conf</span><br><span class="line">input &#123;</span><br><span class="line">beats &#123;</span><br><span class="line">port =&gt; 6666</span><br><span class="line">codec =&gt; <span class="string">&quot;json&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">elasticsearch &#123;</span><br><span class="line">hosts =&gt; [<span class="string">&quot;10.0.0.81:9200&quot;</span>]</span><br><span class="line">index =&gt; <span class="string">&quot;%&#123;type&#125;-%&#123;+YYYY.MM.dd&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 启动Logstash</span></span><br><span class="line">/usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/beats.conf &amp;</span><br></pre></td></tr></table></figure><h2 id="验证数据"><a href="#验证数据" class="headerlink" title="验证数据"></a>验证数据</h2><p>打开浏览器，访问：<a href="http://10.0.0.81:9100/">http://10.0.0.81:9100/</a></p><h1 id="Filebeat收集单类型多个日志到Redis"><a href="#Filebeat收集单类型多个日志到Redis" class="headerlink" title="Filebeat收集单类型多个日志到Redis"></a>Filebeat收集单类型多个日志到Redis</h1><h2 id="配置Filebeat-2"><a href="#配置Filebeat-2" class="headerlink" title="配置Filebeat"></a>配置Filebeat</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑Filebeat配置文件</span></span><br><span class="line">vim /etc/filebeat/filebeat.yml</span><br><span class="line">filebeat.prospectors:</span><br><span class="line">- input_type: <span class="built_in">log</span></span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/nginx/www.xxx.com_access_json.log</span><br><span class="line"></span><br><span class="line">  <span class="comment">## 不收集的行</span></span><br><span class="line">  exclude_lines: [<span class="string">&quot;^DBG&quot;</span>,<span class="string">&quot;^$&quot;</span>]</span><br><span class="line">  <span class="comment">## 日志类型</span></span><br><span class="line">  document_type: ngx_www_log</span><br><span class="line"></span><br><span class="line">output.redis:</span><br><span class="line">  hosts: [<span class="string">&quot;10.0.0.52:6379&quot;</span>]</span><br><span class="line">  <span class="comment">## Redis中的key名称</span></span><br><span class="line">  key: <span class="string">&quot;nginx_log&quot;</span></span><br><span class="line">  <span class="comment">## 使用1库</span></span><br><span class="line">  db: 0</span><br><span class="line">  <span class="comment">## 设置超时时间</span></span><br><span class="line">  <span class="built_in">timeout</span>: 5</span><br><span class="line">  <span class="comment">## redis密码</span></span><br><span class="line">  password: hcl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启Filebeat</span></span><br><span class="line">/etc/init.d/filebeat stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除文件</span></span><br><span class="line"><span class="built_in">rm</span> -f /var/lib/filebeat/registry</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动filebeat</span></span><br><span class="line">/etc/init.d/filebeat start</span><br></pre></td></tr></table></figure><h1 id="Filebeat收集多类型日志到Redis"><a href="#Filebeat收集多类型日志到Redis" class="headerlink" title="Filebeat收集多类型日志到Redis"></a>Filebeat收集多类型日志到Redis</h1><h2 id="配置Filebeat-3"><a href="#配置Filebeat-3" class="headerlink" title="配置Filebeat"></a>配置Filebeat</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改Filebeat配置文件</span></span><br><span class="line">vim /etc/filebeat/filebeat.yml</span><br><span class="line">filebeat.prospectors:</span><br><span class="line">- input_type: <span class="built_in">log</span></span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/nginx/www.xxx.com_access_json.log</span><br><span class="line">  <span class="comment">## 不收集的行</span></span><br><span class="line">  exclude_lines: [<span class="string">&quot;^DBG&quot;</span>,<span class="string">&quot;^$&quot;</span>]</span><br><span class="line">  <span class="comment">## 日志类型</span></span><br><span class="line">  document_type: ngx_log</span><br><span class="line"> </span><br><span class="line">- input_type: <span class="built_in">log</span></span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/nginx/xxx.xxx.com_access_json.log</span><br><span class="line">  <span class="comment">## 不收集的行</span></span><br><span class="line">  exclude_lines: [<span class="string">&quot;^DBG&quot;</span>,<span class="string">&quot;^$&quot;</span>]</span><br><span class="line">  <span class="comment">## 日志类型</span></span><br><span class="line">  document_type: tc_log</span><br><span class="line"></span><br><span class="line">output.redis:</span><br><span class="line">  hosts: [<span class="string">&quot;10.0.0.52:6379&quot;</span>]</span><br><span class="line">  <span class="comment">## Redis中的key名称</span></span><br><span class="line">  key: <span class="string">&quot;nginx_www_xxx_log&quot;</span></span><br><span class="line">  <span class="comment">## 使用1库</span></span><br><span class="line">  db: 1</span><br><span class="line">  <span class="comment">## 设置超时时间</span></span><br><span class="line">  <span class="built_in">timeout</span>: 5</span><br><span class="line">  <span class="comment">## redis密码</span></span><br><span class="line">  password: hcl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启Filebeat</span></span><br><span class="line">/etc/init.d/filebeat stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除文件</span></span><br><span class="line"><span class="built_in">rm</span> -f /var/lib/filebeat/registry</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动filebeat</span></span><br><span class="line">/etc/init.d/filebeat start</span><br></pre></td></tr></table></figure><p>两个日志放入redis同一个key中会混乱，但是输出到ES时可以根据type区分成两个分片，</p><h2 id="使用Logstash将filebeat放入redis的数据输出到ES"><a href="#使用Logstash将filebeat放入redis的数据输出到ES" class="headerlink" title="使用Logstash将filebeat放入redis的数据输出到ES"></a>使用Logstash将filebeat放入redis的数据输出到ES</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑Logstash配置文件</span></span><br><span class="line">vim /etc/logstash/conf.d/filebeat_redis_to_es.conf</span><br><span class="line">input &#123;</span><br><span class="line">redis &#123;</span><br><span class="line">host =&gt; <span class="string">&quot;10.0.0.52&quot;</span></span><br><span class="line">port =&gt; <span class="string">&quot;6379&quot;</span></span><br><span class="line">db =&gt; <span class="string">&quot;1&quot;</span></span><br><span class="line">key =&gt; <span class="string">&quot;nginx_www_xxx_log&quot;</span></span><br><span class="line">data_type =&gt; <span class="string">&quot;list&quot;</span></span><br><span class="line">password =&gt; <span class="string">&quot;hcl&quot;</span></span><br><span class="line">codec  =&gt; <span class="string">&quot;json&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">elasticsearch &#123;</span><br><span class="line">hosts =&gt; [<span class="string">&quot;10.0.0.81:9200&quot;</span>]</span><br><span class="line">index =&gt; <span class="string">&quot;%&#123;type&#125;-%&#123;+YYYY.MM.dd&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#启动Logstash</span></span><br><span class="line">/usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/beats_redis_es.conf &amp;</span><br></pre></td></tr></table></figure><h2 id="验证数据-1"><a href="#验证数据-1" class="headerlink" title="验证数据"></a>验证数据</h2><p>打开浏览器，访问：<a href="http://10.0.0.81:9100/">http://10.0.0.81:9100/</a></p><h1 id="Filebeat收集多类型日志输出到多个目标"><a href="#Filebeat收集多类型日志输出到多个目标" class="headerlink" title="Filebeat收集多类型日志输出到多个目标"></a>Filebeat收集多类型日志输出到多个目标</h1><h2 id="配置Filebeat-4"><a href="#配置Filebeat-4" class="headerlink" title="配置Filebeat"></a>配置Filebeat</h2><p>我们将nginx日志 tomcat日志同时输出到<code>Redis</code>和<code>本地文件</code>中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑filebeat配置文件</span></span><br><span class="line">vim /etc/filebeat/filebeat.yml</span><br><span class="line">filebeat.prospectors:</span><br><span class="line">- input_type: <span class="built_in">log</span></span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/nginx/www.xxx.com_access_json.log</span><br><span class="line">  <span class="comment">## 不收集的行</span></span><br><span class="line">  exclude_lines: [<span class="string">&quot;^DBG&quot;</span>,<span class="string">&quot;^$&quot;</span>]</span><br><span class="line">  <span class="comment">## 日志类型</span></span><br><span class="line">  document_type: ngx_log</span><br><span class="line"></span><br><span class="line">- input_type: <span class="built_in">log</span></span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/nginx/xxx.xxx.com_access_json.log</span><br><span class="line">  <span class="comment">## 不收集的行</span></span><br><span class="line">  exclude_lines: [<span class="string">&quot;^DBG&quot;</span>,<span class="string">&quot;^$&quot;</span>]</span><br><span class="line">  <span class="comment">## 日志类型</span></span><br><span class="line">  document_type: tc_log</span><br><span class="line"> </span><br><span class="line">output.redis:</span><br><span class="line">  <span class="comment">## redis 服务器地址，可以是多个</span></span><br><span class="line">  hosts: [<span class="string">&quot;10.0.0.52:6379&quot;</span>]</span><br><span class="line">  key: <span class="string">&quot;tn&quot;</span></span><br><span class="line">  db: 2</span><br><span class="line">  <span class="built_in">timeout</span>: 5</span><br><span class="line">  password: zls</span><br><span class="line"> </span><br><span class="line">output.file:</span><br><span class="line">  path: <span class="string">&quot;/tmp&quot;</span></span><br><span class="line">  filename: <span class="string">&quot;hcl.txt&quot;</span></span><br><span class="line">  <span class="comment">## 工作线程数</span></span><br><span class="line">  worker: 1</span><br><span class="line">  <span class="comment">## 压缩级别</span></span><br><span class="line">  compression_level: 3</span><br><span class="line">  <span class="comment">## 多个输出的时候开启负载</span></span><br><span class="line">  loadbalance: <span class="literal">true</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 重启Filebeat</span></span><br><span class="line">/etc/init.d/filebeat stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除文件</span></span><br><span class="line"><span class="built_in">rm</span> -f /var/lib/filebeat/registry</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动filebeat</span></span><br><span class="line">/etc/init.d/filebeat start</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;Filebeat介绍及部署&quot;&gt;&lt;a href=&quot;#Filebeat介绍及部署&quot; class=&quot;headerlink&quot; title=&quot;Filebeat介绍及部署&quot;&gt;&lt;/a&gt;Filebeat介绍及部署&lt;/h1&gt;&lt;h2 id=&quot;Filebeat</summary>
      
    
    
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/categories/ELK%E9%9B%86%E7%BE%A4/"/>
    
    
    <category term="自动化运维" scheme="https://chenlinbb.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/"/>
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/tags/ELK%E9%9B%86%E7%BE%A4/"/>
    
    <category term="日志收集" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/"/>
    
    <category term="日志分析" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>7.Logstash结合Redis搭建集群</title>
    <link href="https://chenlinbb.github.io/archives/e18db17f.html"/>
    <id>https://chenlinbb.github.io/archives/e18db17f.html</id>
    <published>2024-07-17T15:51:58.159Z</published>
    <updated>2024-07-17T15:52:07.273Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="Logstash将日志写入Redis"><a href="#Logstash将日志写入Redis" class="headerlink" title="Logstash将日志写入Redis"></a>Logstash将日志写入Redis</h1><h2 id="为什么要使用Redis"><a href="#为什么要使用Redis" class="headerlink" title="为什么要使用Redis"></a>为什么要使用Redis</h2><p>在企业中，日志规模的量级远远超出我们的想象，这就是为什么会有一家公司日志易专门做日志收集，给大型金融公司收集日志，比如银行，因为你有可能看到，1秒钟好几千万的日志量，往服务器写入，那么企业中的集群，架构都不是单台的，而是多台的，一台如果是1千万，那么5台的量级，10台的量级，我们要对他们进行收集，进行分析，难免会在网络传输过程中，丢数据。</p><p>日志是什么？<br>日志对于企业来说，有什么作用？<br>用户使用我们的产品，体验如何？<br>用户的客诉，我们能拿出什么样的数据来说话？<br>…</p><p>一系列的问题，都和日志相关，如果至关重要的那个数据丢失了，那么公司的损失可不仅仅是一条日志那么简单。如果我们不知道，用户对我们产品最感兴趣的地方在哪，那么产品的寿命也就越来越短。如果被攻击了，恶意攻击的IP源我们都找不到，那么或许就不是产品的寿命越来越短，而是这个企业存在的寿命，越来越短。</p><p>一个大规模日志量级的企业想要做到数据的安全性，数据的一致性，我们需要消息队列：<code>Redis</code>, <code>Kafka</code>，在ELK5版本中，建议使用<code>Redis</code>来做消息队列，<code>Kafka</code>能不能用？也能，只不过会有一些不必要的坑，需要我们去爬。在ELK6版本中，开始使用<code>Kafka</code>来做消息队列。</p><p>接下来就开始将Logstash收集到的日志，输出到Redis中。</p><h2 id="加入redis的结构流程图"><a href="#加入redis的结构流程图" class="headerlink" title="加入redis的结构流程图"></a>加入redis的结构流程图</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230510000926296.png" alt="image-20230510000926296"></p><h2 id="Redis部署"><a href="#Redis部署" class="headerlink" title="Redis部署"></a>Redis部署</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载</span></span><br><span class="line">wget http://download.redis.io/releases/redis-3.2.12.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar xf redis-3.2.12.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移动到指定目录</span></span><br><span class="line"><span class="built_in">mv</span> redis-3.2.12 /application/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 做软链接</span></span><br><span class="line"><span class="built_in">ln</span> -s /application/redis-3.2.12 /application/redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入redis目录</span></span><br><span class="line"><span class="built_in">cd</span> /application/redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加环境变量</span></span><br><span class="line">vim /etc/profile.d/redis.sh</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/application/redis/src:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取并执行环境变量</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建配置文件存放目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /data/6379</span><br><span class="line"></span><br><span class="line"><span class="comment">#编辑redis配置文件</span></span><br><span class="line">vim /data/6379/redis.conf</span><br><span class="line">port 6379</span><br><span class="line">daemonize <span class="built_in">yes</span></span><br><span class="line">pidfile /data/6379/redis.pid</span><br><span class="line">logfile <span class="string">&quot;/data/6379/redis.log&quot;</span></span><br><span class="line">dbfilename dump.rdb</span><br><span class="line"><span class="built_in">dir</span> /data/6379</span><br><span class="line">protected-mode no</span><br><span class="line">requirepass  hcl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动redis</span></span><br><span class="line">redis-server /data/6379/redis.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查端口</span></span><br><span class="line">netstat -lntup | grep 6379</span><br></pre></td></tr></table></figure><h2 id="Logstash收集日志输出至Redis"><a href="#Logstash收集日志输出至Redis" class="headerlink" title="Logstash收集日志输出至Redis"></a>Logstash收集日志输出至Redis</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑Logstash配置文件</span></span><br><span class="line">vim /etc/logstash/conf.d/nginx_redis.conf</span><br><span class="line">input &#123;</span><br><span class="line">file &#123;</span><br><span class="line"><span class="built_in">type</span> =&gt; <span class="string">&quot;www.xxx.com_access&quot;</span></span><br><span class="line">path =&gt; <span class="string">&quot;/var/log/nginx/www.xxx.com_access_json.log&quot;</span></span><br><span class="line">start_position =&gt; <span class="string">&quot;end&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">file &#123;</span><br><span class="line"><span class="built_in">type</span> =&gt; <span class="string">&quot;xxx.xxx.com_access&quot;</span></span><br><span class="line">path =&gt; <span class="string">&quot;/var/log/nginx/xxx.xxx.com_access_json.log&quot;</span></span><br><span class="line">start_position =&gt; <span class="string">&quot;end&quot;</span></span><br><span class="line">codec =&gt; json</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line"><span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">&quot;www.xxx.com_access&quot;</span> &#123;</span><br><span class="line">redis &#123;</span><br><span class="line">data_type =&gt; <span class="string">&quot;list&quot;</span></span><br><span class="line">key =&gt; <span class="string">&quot;nginx_log&quot;</span></span><br><span class="line">host =&gt; <span class="string">&quot;10.0.0.52&quot;</span></span><br><span class="line">port =&gt; <span class="string">&quot;6379&quot;</span></span><br><span class="line">db =&gt; <span class="string">&quot;14&quot;</span></span><br><span class="line">password =&gt; <span class="string">&quot;hcl&quot;</span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">&quot;xxx.xxx.com_access&quot;</span> &#123;</span><br><span class="line">redis &#123;</span><br><span class="line">data_type =&gt; <span class="string">&quot;list&quot;</span></span><br><span class="line">key =&gt; <span class="string">&quot;nginx1_log&quot;</span></span><br><span class="line">host =&gt; <span class="string">&quot;10.0.0.52&quot;</span></span><br><span class="line">port =&gt; <span class="string">&quot;6379&quot;</span></span><br><span class="line">db =&gt; <span class="string">&quot;15&quot;</span></span><br><span class="line">password =&gt; <span class="string">&quot;hcl&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Logstash</span></span><br><span class="line">/usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/nginx_redis.conf &amp;</span><br></pre></td></tr></table></figure><h2 id="验证Redis数据"><a href="#验证Redis数据" class="headerlink" title="验证Redis数据"></a>验证Redis数据</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 连接redis</span></span><br><span class="line">redis-cli -a hcl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在0库中查看所有key</span></span><br><span class="line">127.0.0.1:6379&gt; KEYS *</span><br><span class="line">(empty list or <span class="built_in">set</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看tomcat_log的长度（日志的条数）</span></span><br><span class="line">127.0.0.1:6379&gt; LLEN tomcat_log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换15库</span></span><br><span class="line">127.0.0.1:6379&gt; SELECT 15</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在15库中查看所有key</span></span><br><span class="line">127.0.0.1:6379[15]&gt; KEYS *</span><br><span class="line">1) <span class="string">&quot;nginx_log&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看nginx_log的长度（日志的条数）</span></span><br><span class="line">127.0.0.1:6379[15]&gt; LLEN nginx_log</span><br><span class="line">(<span class="built_in">integer</span>) 6</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 演示Logstash如何取走一条nginx日志</span></span><br><span class="line">127.0.0.1:6379[15]&gt; LPOP nginx_log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 再次查看长度</span></span><br><span class="line">127.0.0.1:6379&gt; Llen nginx_log</span><br><span class="line">(<span class="built_in">integer</span>) 7</span><br></pre></td></tr></table></figure><h2 id="Logstash从Redis中取出日志输出到ES"><a href="#Logstash从Redis中取出日志输出到ES" class="headerlink" title="Logstash从Redis中取出日志输出到ES"></a>Logstash从Redis中取出日志输出到ES</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑Logstash配置文件</span></span><br><span class="line">vim /etc/logstash/conf.d/ngx_redis.conf</span><br><span class="line">input &#123;</span><br><span class="line">redis &#123;</span><br><span class="line">data_type =&gt; <span class="string">&quot;list&quot;</span></span><br><span class="line">key =&gt; <span class="string">&quot;nginx_log&quot;</span></span><br><span class="line">host =&gt; <span class="string">&quot;10.0.0.52&quot;</span></span><br><span class="line">port =&gt; <span class="string">&quot;6379&quot;</span></span><br><span class="line">db =&gt; <span class="string">&quot;14&quot;</span></span><br><span class="line">password =&gt; <span class="string">&quot;hcl&quot;</span></span><br><span class="line">codec =&gt; <span class="string">&quot;json&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">redis &#123;</span><br><span class="line">data_type =&gt; <span class="string">&quot;list&quot;</span></span><br><span class="line">key =&gt; <span class="string">&quot;nginx1_log&quot;</span></span><br><span class="line">host =&gt; <span class="string">&quot;10.0.0.52&quot;</span></span><br><span class="line">port =&gt; <span class="string">&quot;6379&quot;</span></span><br><span class="line">db =&gt; <span class="string">&quot;15&quot;</span></span><br><span class="line">password =&gt; <span class="string">&quot;hcl&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line"><span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">&quot;www.xxx.com_access&quot;</span> &#123;</span><br><span class="line">elasticsearch &#123;</span><br><span class="line">hosts =&gt; [<span class="string">&quot;10.0.0.51:9200&quot;</span>]</span><br><span class="line">index =&gt; <span class="string">&quot;www.xxx.com-%&#123;+YYYY.MM.dd&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">&quot;xxx.xxx.com_access&quot;</span> &#123;</span><br><span class="line">elasticsearch &#123;</span><br><span class="line">hosts =&gt; [<span class="string">&quot;10.0.0.51:9200&quot;</span>]</span><br><span class="line">index =&gt; <span class="string">&quot;xxx.xxx.com-%&#123;+YYYY.MM.dd&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Logstash</span></span><br><span class="line">/usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/ngx_redis.conf &amp;</span><br></pre></td></tr></table></figure><h2 id="验证Logstash中的数据是否被取出"><a href="#验证Logstash中的数据是否被取出" class="headerlink" title="验证Logstash中的数据是否被取出"></a>验证Logstash中的数据是否被取出</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 连接Redis</span></span><br><span class="line">redis-cli -a hcl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有key</span></span><br><span class="line">127.0.0.1:6379&gt; KEYS *</span><br><span class="line">(empty list or <span class="built_in">set</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换1库</span></span><br><span class="line">127.0.0.1:6379&gt; SELECT 1</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有key</span></span><br><span class="line">127.0.0.1:6379[1]&gt; KEYS *</span><br><span class="line">(empty list or <span class="built_in">set</span>)</span><br></pre></td></tr></table></figure><h2 id="在ES中查看数据"><a href="#在ES中查看数据" class="headerlink" title="在ES中查看数据"></a>在ES中查看数据</h2><p>打开浏览器，访问：<a href="http://10.0.0.81:9100/">http://10.0.0.81:9100/</a></p><h2 id="将ES索引添加到Kibana中"><a href="#将ES索引添加到Kibana中" class="headerlink" title="将ES索引添加到Kibana中"></a>将ES索引添加到Kibana中</h2><p>打开浏览器，访问：<a href="http://10.0.0.83:5601/">http://10.0.0.83:5601</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;Logstash将日志写入Redis&quot;&gt;&lt;a href=&quot;#Logstash将日志写入Redis&quot; class=&quot;headerlink&quot; title=&quot;Logstash将日志写入Redis&quot;&gt;&lt;/a&gt;Logstash将日志写入Redis&lt;</summary>
      
    
    
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/categories/ELK%E9%9B%86%E7%BE%A4/"/>
    
    
    <category term="自动化运维" scheme="https://chenlinbb.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/"/>
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/tags/ELK%E9%9B%86%E7%BE%A4/"/>
    
    <category term="日志收集" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/"/>
    
    <category term="日志分析" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>6.Logstash深入收集多类型日志</title>
    <link href="https://chenlinbb.github.io/archives/4fcc462d.html"/>
    <id>https://chenlinbb.github.io/archives/4fcc462d.html</id>
    <published>2024-07-17T15:51:58.158Z</published>
    <updated>2024-07-17T15:52:07.276Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="Logstash收集java日志并输出到ES中"><a href="#Logstash收集java日志并输出到ES中" class="headerlink" title="Logstash收集java日志并输出到ES中"></a>Logstash收集java日志并输出到ES中</h1><p>因为我们现在需要用Logstash收集tomcat日志，所以我们暂时将tomcat安装到Logstash所在机器，也就是db03：10.0.0.83这台机器，收集tomcat访问日志以及tomcat错误日志进行实时统计，在企业中，tomcat机器肯定不是单台，而是一个集群的形式，那么我们每台tomcat上都需要安装一个Logstash，然后将收集到的日志输出给Elasticsearch进行分析。</p><h2 id="将tomcat日志改成json格式"><a href="#将tomcat日志改成json格式" class="headerlink" title="将tomcat日志改成json格式"></a>将tomcat日志改成json格式</h2><p>在企业中，我们看到tomcat日志遇到异常(exception)一条日志可能是几行或者十几行甚至几十行，组成的，那么，我们需要将多行日志变成一行日志，来收集。</p><p>这里我们有几种方式可以实现：</p><ol><li><p>将日志改成Json格式</p><ul><li><p>企业中，java日志格式并不能随意改成json格式，因为将日志改成Json格式，查看起来会很难受，有些开发人员不希望将日志格式改成Json，所以需要跟开发人员进行沟通。将tomcat日志格式改成Json格式的两种方式：</p><ol><li><p>开发自己更改，通过程序代码，或者log4j</p></li><li><p>运维修改tomcat的server配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑tomcat配置文件</span></span><br><span class="line">vim conf/server.xml</span><br><span class="line">        &lt;Valve className=<span class="string">&quot;org.apache.catalina.valves.AccessLogValve&quot;</span> directory=<span class="string">&quot;logs&quot;</span></span><br><span class="line">               prefix=<span class="string">&quot;tomcat_access_log&quot;</span> suffix=<span class="string">&quot;.log&quot;</span></span><br><span class="line">               pattern=<span class="string">&quot;&#123;&amp;quot;clientip&amp;quot;:&amp;quot;%h&amp;quot;,&amp;quot;ClientUser&amp;quot;:&amp;quot;%l&amp;quot;,&amp;quot;authenticated&amp;quot;:&amp;quot;%u&amp;quot;,&amp;quot;AccessTime&amp;quot;:&amp;quot;%t&amp;quot;,&amp;quot;method&amp;quot;:&amp;quot;%r&amp;quot;,&amp;quot;status&amp;quot;:&amp;quot;%s&amp;quot;,&amp;quot;SendBytes&amp;quot;:&amp;quot;%b&amp;quot;,&amp;quot;Query?string&amp;quot;:&amp;quot;%q&amp;quot;,&amp;quot;partner&amp;quot;:&amp;quot;%&#123;Referer&#125;i&amp;quot;,&amp;quot;AgentVersion&amp;quot;:&amp;quot;%&#123;User-Agent&#125;i&amp;quot;&#125;&quot;</span>/&gt; </span><br></pre></td></tr></table></figure></li></ol></li></ul></li><li><p>通过Logstash其他模块来收集例：multiline多行匹配</p><ul><li><p>以下是tomcat日志文件中exception展示</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/03/15540049620924.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/03/15540286619880.jpg" alt="img"></p></li></ul></li></ol><h2 id="安装tomcat"><a href="#安装tomcat" class="headerlink" title="安装tomcat"></a>安装tomcat</h2><p><strong>安装JDK环境</strong></p><ul><li><p>二进制安装JDK</p><p>下载地址: <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解压JDK安装包</span></span><br><span class="line">tar xf jdk-8u121-linux-x64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将JDK安装包移动到安装目录下</span></span><br><span class="line"><span class="built_in">mv</span> jdk1.8.0_121 /usr/local/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 做软链接(方便日后升级)</span></span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/jdk1.8.0_121 /usr/local/jdk1.8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加环境变量</span></span><br><span class="line">vim /etc/profile.d/jdk1.8.sh</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/local/jdk1.8</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/jre/lib/rt.jar:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载环境变量</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否加载成功</span></span><br><span class="line">java -version</span><br><span class="line">java version <span class="string">&quot;1.8.0_121&quot;</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_121-b13)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)</span><br></pre></td></tr></table></figure></li><li><p>yum安装JDK</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y java</span><br></pre></td></tr></table></figure></li></ul><p><strong>安装tomcat</strong></p><ul><li><p>二进制安装tomcat</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解压tomcat安装包</span></span><br><span class="line">tar xf apache-tomcat-8.0.38.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将安装包移动到安装路径并改名</span></span><br><span class="line"><span class="built_in">mv</span> apache-tomcat-8.0.38 /usr/local/tomcat-8.0.38</span><br><span class="line"></span><br><span class="line"><span class="comment"># 做软链接</span></span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/tomcat-8.0.38 /usr/local/tomcat</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入tomcat站点目录</span></span><br><span class="line"><span class="built_in">cd</span> /usr/local/tomcat/webapps/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新项目目录</span></span><br><span class="line"><span class="built_in">mkdir</span> webdir</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写一个测试页面到站点目录下的index.html文件中</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;test tomcat&#x27;</span> &gt; webdir/index.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入tomcat程序目录</span></span><br><span class="line"><span class="built_in">cd</span> /usr/local/tomcat/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动tomcat</span></span><br><span class="line">./catalina.sh start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测tomcat端口是否启动</span></span><br><span class="line">netstat -lntup|grep 8080</span><br><span class="line">tcp        0      0 :::8080          :::*            LISTEN      12569/java</span><br></pre></td></tr></table></figure></li><li><p>yum安装tomcat</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装tomcat</span></span><br><span class="line">yum install -y tomcat</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建文件</span></span><br><span class="line"><span class="built_in">mkdir</span> /usr/share/tomcat/webapps/ROOT</span><br><span class="line">vim /usr/share/tomcat/webapps/ROOT/index.jsp</span><br><span class="line"><span class="built_in">test</span> tomcat</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动tomcat</span></span><br><span class="line">systemctl start tomcat</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查端口</span></span><br><span class="line">netstat -lntup</span><br><span class="line">      tcp6       0      0 :::8080           :::*          LISTEN      23350/java </span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查日志</span></span><br><span class="line">ll /var/log/tomcat/</span><br><span class="line">total 12</span><br><span class="line">-rw-r--r-- 1 tomcat tomcat 4366 Feb 15 09:29 catalina.2023-02-15.log</span><br><span class="line">-rw-rw---- 1 tomcat tomcat   28 Nov 17  2020 catalina.out</span><br><span class="line">-rw-r--r-- 1 tomcat tomcat    0 Feb 15 09:29 host-manager.2023-02-15.log</span><br><span class="line">-rw-r--r-- 1 tomcat tomcat    0 Feb 15 09:29 localhost.2023-02-15.log</span><br><span class="line">-rw-r--r-- 1 tomcat tomcat    0 Feb 15 09:29 localhost_access_log.2023-02-15.txt</span><br><span class="line">-rw-r--r-- 1 tomcat tomcat    0 Feb 15 09:29 manager.2023-02-15.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问浏览器</span></span><br><span class="line">10.0.0.83:8080</span><br></pre></td></tr></table></figure></li><li><p>访问页面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 访问浏览器</span></span><br><span class="line">10.0.0.83:8080</span><br></pre></td></tr></table></figure><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230508092024972.png" alt="image-20230508092024972"></p></li></ul><h2 id="修改tomcat日志格式"><a href="#修改tomcat日志格式" class="headerlink" title="修改tomcat日志格式"></a>修改tomcat日志格式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑server配置文件</span></span><br><span class="line">vim /usr/local/tomcat/conf/server.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在138行，添加如下内容</span></span><br><span class="line">&lt;Valve className=<span class="string">&quot;org.apache.catalina.valves.AccessLogValve&quot;</span> directory=<span class="string">&quot;logs&quot;</span></span><br><span class="line">               prefix=<span class="string">&quot;tomcat_access_log&quot;</span> suffix=<span class="string">&quot;.log&quot;</span></span><br><span class="line">               pattern=<span class="string">&quot;&#123;&amp;quot;clientip&amp;quot;:&amp;quot;%h&amp;quot;,&amp;quot;ClientUser&amp;quot;:&amp;quot;%l&amp;quot;,&amp;quot;authenticated&amp;quot;:&amp;quot;%u&amp;quot;,&amp;quot;AccessTime&amp;quot;:&amp;quot;%t&amp;quot;,&amp;quot;method&amp;quot;:&amp;quot;%r&amp;quot;,&amp;quot;status&amp;quot;:&amp;quot;%s&amp;quot;,&amp;quot;SendBytes&amp;quot;:&amp;quot;%b&amp;quot;,&amp;quot;Query?string&amp;quot;:&amp;quot;%q&amp;quot;,&amp;quot;partner&amp;quot;:&amp;quot;%&#123;Referer&#125;i&amp;quot;,&amp;quot;AgentVersion&amp;quot;:&amp;quot;%&#123;User-Agent&#125;i&amp;quot;&#125;&quot;</span>/&gt; </span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入tomcat程序目录</span></span><br><span class="line"><span class="built_in">cd</span> /usr/local/tomcat/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止tomcat</span></span><br><span class="line">./catalina.sh stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动tomcat</span></span><br><span class="line">./catalina.sh start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入tomcat日志目录</span></span><br><span class="line"><span class="built_in">cd</span> /usr/local/tomcat/logs/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看新生成的tomcat日志</span></span><br><span class="line">ll</span><br><span class="line">总用量 40</span><br><span class="line">-rw-r--r-- 1 root root 14601 3月  31 10:10 tomcat_access_log.2019-03-31.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实时跟进日志</span></span><br><span class="line"><span class="built_in">tail</span> -f tomcat_access_log.2019-03-31.log</span><br></pre></td></tr></table></figure><h2 id="验证Json格式"><a href="#验证Json格式" class="headerlink" title="验证Json格式"></a>验证Json格式</h2><p>复制一条日志，打开浏览器，访问：<a href="http://www.kjson.com/">http://www.kjson.com/</a></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/03/15540371275740.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/03/15540371609809.jpg" alt="img"></p><h2 id="配置Logstash收集tomcat日志输出到ES中"><a href="#配置Logstash收集tomcat日志输出到ES中" class="headerlink" title="配置Logstash收集tomcat日志输出到ES中"></a>配置Logstash收集tomcat日志输出到ES中</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑Logstash配置文件</span></span><br><span class="line">vim /etc/logstash/conf.d/tomcat_es.conf</span><br><span class="line"><span class="comment">## 输入插件</span></span><br><span class="line">input &#123;</span><br><span class="line">  <span class="comment">## 文件模块</span></span><br><span class="line">  file &#123;</span><br><span class="line">    <span class="comment">## 文件路径</span></span><br><span class="line">    path =&gt; <span class="string">&quot;/usr/local/tomcat/logs/tomcat_access_log.2023-02-15.log&quot;</span></span><br><span class="line">    <span class="comment">## 从结束位置点开始收集</span></span><br><span class="line">    start_position =&gt; <span class="string">&quot;end&quot;</span></span><br><span class="line">    <span class="comment">## 日志类型</span></span><br><span class="line">    <span class="built_in">type</span> =&gt; <span class="string">&quot;tomct_access_log&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">## 输出插件</span></span><br><span class="line">output &#123;</span><br><span class="line">    <span class="comment">## ES模块</span></span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">      <span class="comment">## 主机信息</span></span><br><span class="line">      hosts =&gt; [<span class="string">&quot;10.0.0.81:9200&quot;</span>]</span><br><span class="line">      <span class="comment">## 索引名称，也就是日志名称</span></span><br><span class="line">      index =&gt; <span class="string">&quot;tomcat_access-%&#123;+YYYY.MM.dd&#125;&quot;</span></span><br><span class="line">      <span class="comment">## 输出成json格式</span></span><br><span class="line">      codec =&gt; <span class="string">&quot;json&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动Logstash</span></span><br><span class="line">/usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/tomcat_es.conf &amp;</span><br></pre></td></tr></table></figure><p><strong>启动成功，如下图所示：</strong></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/03/15540397538317.jpg" alt="img"></p><p>打开浏览器，访问：<a href="http://10.0.0.81:9100/">http://10.0.0.81:9100/</a> 查看是否生成日志，如果没有，则访问tomcat页面。</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/03/15540398725816.jpg" alt="img"></p><h2 id="解析json格式"><a href="#解析json格式" class="headerlink" title="解析json格式"></a>解析json格式</h2><p><strong>将tomcat日志索引添加到Kibana中</strong></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15546874084216.jpg" alt="img"></p><p>查看日志内容，不难发现，即便是用了Json格式的，所有日志在message中还是 一坨 看起来很麻烦，并不是以<code>KEY：VALUE</code>的形式展示出来的。</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15546874463040.jpg" alt="img"></p><p>所以，我们需要获取到message中的<code>KEY：VALUE</code>将他解析成键值对的形式，展现出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在Logstash的配置文件中，添加filter过滤规则</span></span><br><span class="line">filter &#123;</span><br><span class="line">        json &#123;</span><br><span class="line">            <span class="built_in">source</span> =&gt; <span class="string">&quot;message&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新启动Logstash</span></span><br><span class="line">/usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/tomcat_es.conf &amp;</span><br></pre></td></tr></table></figure><p>再次查看日志内容</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15546879305853.jpg" alt="img"></p><h2 id="删除多余的message"><a href="#删除多余的message" class="headerlink" title="删除多余的message"></a>删除多余的message</h2><p>两条日志对比，可以看出修改后的Logstash日志，前面多出很多KEY，虽然还message里还是有一坨，但是message中的所有Json已经被解析出来变成了<code>KEY：VALUE</code>的形式，当然我们也可以取消message的显示，操作如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将Logstash中的filter规则添加一行，remove_field，删除列 message</span></span><br><span class="line">filter &#123;</span><br><span class="line">        json &#123;</span><br><span class="line">            <span class="built_in">source</span> =&gt; <span class="string">&quot;message&quot;</span></span><br><span class="line">            remove_field =&gt; [<span class="string">&quot;message&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新启动Logstash</span></span><br><span class="line">/usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/tomcat_es.conf &amp;</span><br></pre></td></tr></table></figure><p>再次查看日志，可以看到message已经没有了，但是所有的KEY：VALUE都还在。</p><p>为什么要这么做呢，一定要展示成Json格式呢？</p><p>因为，如果我们想要Kibana画图，那么必须用KEY：VALUE的形式，获取值，来画图。</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15546885423323.jpg" alt="img"></p><p><strong>最终配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">vim tomcat_file_es_json.conf</span><br><span class="line"></span><br><span class="line">input&#123;</span><br><span class="line">        file&#123;</span><br><span class="line">                <span class="built_in">type</span> =&gt; <span class="string">&#x27;tomcat_access_log&#x27;</span></span><br><span class="line">                path =&gt; <span class="string">&#x27;/var/log/tomcat/localhost_access_log.*.txt&#x27;</span></span><br><span class="line">                start_position =&gt; <span class="string">&#x27;end&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter&#123;</span><br><span class="line">        json&#123;</span><br><span class="line">                <span class="built_in">source</span> =&gt; <span class="string">&#x27;message&#x27;</span></span><br><span class="line">                remove_field =&gt; [<span class="string">&quot;message&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output&#123;</span><br><span class="line">        elasticsearch&#123;</span><br><span class="line">                hosts =&gt; [<span class="string">&quot;10.0.0.81:9200&quot;</span>]</span><br><span class="line">                index =&gt; <span class="string">&quot;%&#123;type&#125;-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">                codec =&gt; <span class="string">&#x27;json&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Logstash收集nginx日志并输出到ES中"><a href="#Logstash收集nginx日志并输出到ES中" class="headerlink" title="Logstash收集nginx日志并输出到ES中"></a>Logstash收集nginx日志并输出到ES中</h1><h2 id="源码安装nginx"><a href="#源码安装nginx" class="headerlink" title="源码安装nginx"></a>源码安装nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装nginx依赖包</span></span><br><span class="line">yum install -y gcc gcc-c++ automake pcre-devel zlib-devel openssl-devel</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载nginx安装包</span></span><br><span class="line">wget http://nginx.org/download/nginx-1.10.3.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar xf nginx-1.10.3.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入nginx安装目录</span></span><br><span class="line"><span class="built_in">cd</span> nginx-1.10.3/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成编译文件</span></span><br><span class="line">./configure  --prefix=/usr/local/nginx-1.10.3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 做软链接</span></span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/nginx-1.10.3 /usr/local/nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测nginx语法</span></span><br><span class="line">/usr/local/nginx/sbin/nginx -t</span><br><span class="line">nginx: the configuration file /usr/local/nginx-1.10.3/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /usr/local/nginx-1.10.3/conf/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动nginx</span></span><br><span class="line">/usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure><h2 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 简化nginx配置文件</span></span><br><span class="line">grep -Ev <span class="string">&#x27;#|^$&#x27;</span> /usr/local/nginx/conf/nginx.conf.default  &gt; /usr/local/nginx/conf/nginx.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑nginx主配置文件</span></span><br><span class="line">vim /usr/local/nginx/conf/nginx.conf</span><br><span class="line">user nginx;</span><br><span class="line">worker_processes auto;</span><br><span class="line">error_log /var/log/nginx/error.log;</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line"></span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    log_format  main  <span class="string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 4096;</span><br><span class="line"></span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑www网页配置文件</span></span><br><span class="line">vim /etc/nginx/conf.d/www.conf</span><br><span class="line">server&#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name www.xxx.com;</span><br><span class="line">        root /code;</span><br><span class="line">        index index.html;</span><br><span class="line">        access_log /var/log/nginx/www.xxx.com_access_json.log json;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑xxx网页配置文件</span></span><br><span class="line">vim /etc/nginx/conf.d/xxx.conf</span><br><span class="line">server&#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name xxx.xxx.com;</span><br><span class="line">        root /code1;</span><br><span class="line">        index index.html;</span><br><span class="line">        access_log /var/log/nginx/xxx.xxx.com_access_json.log json;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建nginx站点目录</span></span><br><span class="line"><span class="built_in">mkdir</span> /code</span><br><span class="line"><span class="built_in">mkdir</span> /code1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写测试页面</span></span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">test</span> nginx &gt; /code/index.html</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">test</span> nginx1 &gt; /code1/index.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载nginx</span></span><br><span class="line">/usr/local/nginx/sbin/nginx -s reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开浏览器，访问：http://10.0.0.83/</span></span><br></pre></td></tr></table></figure><h2 id="修改nginx日志格式为Json"><a href="#修改nginx日志格式为Json" class="headerlink" title="修改nginx日志格式为Json"></a>修改nginx日志格式为Json</h2><p>之前我们讲了tomcat日志，在企业中，修改格式需要与开发商量，但是nginx我们不需要，如果需要原来的格式日志，我们可以将日志输出两份，一份 main格式，一份Json格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑nginx日志，添加日志格式，源main格式和Json格式</span></span><br><span class="line">vim /usr/local/nginx/conf/nginx.conf</span><br><span class="line">user nginx;</span><br><span class="line">worker_processes auto;</span><br><span class="line">error_log /var/log/nginx/error.log;</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line"></span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    <span class="comment">## main格式日志</span></span><br><span class="line">    log_format  main  <span class="string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;</span><br><span class="line">    <span class="comment"># access_log  /var/log/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## Json格式日志</span></span><br><span class="line">    log_format json <span class="string">&#x27;&#123;&quot;@timestamp&quot;:&quot;$time_iso8601&quot;,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;host&quot;:&quot;$server_addr&quot;,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;clientip&quot;:&quot;$remote_addr&quot;,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;size&quot;:$body_bytes_sent,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;responsetime&quot;:$request_time,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;upstreamtime&quot;:&quot;$upstream_response_time&quot;,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;upstreamhost&quot;:&quot;$upstream_addr&quot;,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;http_host&quot;:&quot;$host&quot;,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;url&quot;:&quot;$uri&quot;,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;domain&quot;:&quot;$host&quot;,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;xff&quot;:&quot;$http_x_forwarded_for&quot;,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;referer&quot;:&quot;$http_referer&quot;,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;status&quot;:&quot;$status&quot;&#125;&#x27;</span>;</span><br><span class="line">    <span class="comment"># access_log  /var/log/access_json.log  json;</span></span><br><span class="line"></span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 4096;</span><br><span class="line"></span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测nginx配置文件语法</span></span><br><span class="line">/usr/local/nginx/sbin/nginx -t</span><br><span class="line">nginx: the configuration file /usr/local/nginx-1.10.3/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /usr/local/nginx-1.10.3/conf/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载nginx</span></span><br><span class="line">/usr/local/nginx/sbin/nginx -s reload</span><br></pre></td></tr></table></figure><p>打开浏览器，访问：<a href="http://10.0.0.83/">http://10.0.0.83/</a> 查看日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看目录中日志</span></span><br><span class="line">ll /usr/local/nginx/logs/</span><br><span class="line">总用量 24</span><br><span class="line"><span class="comment">## 修改后的Json格式日志</span></span><br><span class="line">-rw-r--r-- 1 root root 1280 4月   8 10:47 access_json.log</span><br><span class="line"><span class="comment">## 源main格式日志</span></span><br><span class="line">-rw-r--r-- 1 root root 5286 4月   8 10:47 access.log</span><br><span class="line">-rw-r--r-- 1 root root 4218 4月   8 10:46 error.log</span><br><span class="line">-rw-r--r-- 1 root root    5 4月   8 10:20 nginx.pid</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 查看Json格式日志</span></span><br><span class="line"><span class="built_in">cat</span> access_json.log</span><br><span class="line">&#123;<span class="string">&quot;@timestamp&quot;</span>:<span class="string">&quot;2019-04-08T10:47:41+08:00&quot;</span>,<span class="string">&quot;host&quot;</span>:<span class="string">&quot;10.0.0.53&quot;</span>,<span class="string">&quot;clientip&quot;</span>:<span class="string">&quot;10.0.0.1&quot;</span>,<span class="string">&quot;size&quot;</span>:0,<span class="string">&quot;responsetime&quot;</span>:0.000,<span class="string">&quot;upstreamtime&quot;</span>:<span class="string">&quot;-&quot;</span>,<span class="string">&quot;upstreamhost&quot;</span>:<span class="string">&quot;-&quot;</span>,<span class="string">&quot;http_host&quot;</span>:<span class="string">&quot;10.0.0.53&quot;</span>,<span class="string">&quot;url&quot;</span>:<span class="string">&quot;/index.html&quot;</span>,<span class="string">&quot;domain&quot;</span>:<span class="string">&quot;10.0.0.53&quot;</span>,<span class="string">&quot;xff&quot;</span>:<span class="string">&quot;-&quot;</span>,<span class="string">&quot;referer&quot;</span>:<span class="string">&quot;-&quot;</span>,<span class="string">&quot;status&quot;</span>:<span class="string">&quot;304&quot;</span>&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 查看main格式日志</span></span><br><span class="line"><span class="built_in">cat</span> access.log</span><br><span class="line">10.0.0.1 - - [08/Apr/2019:10:29:11 +0800] <span class="string">&quot;GET / HTTP/1.1&quot;</span> 404 571 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.86 Safari/537.36&quot;</span></span><br></pre></td></tr></table></figure><h2 id="通过Logstash收集nginx日志输出到ES中"><a href="#通过Logstash收集nginx日志输出到ES中" class="headerlink" title="通过Logstash收集nginx日志输出到ES中"></a>通过Logstash收集nginx日志输出到ES中</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑logstash配置文件</span></span><br><span class="line">vim /etc/logstash/conf.d/nginx_es.conf</span><br><span class="line">input &#123;</span><br><span class="line">file &#123;</span><br><span class="line"><span class="built_in">type</span> =&gt; <span class="string">&quot;www_nginx_access&quot;</span></span><br><span class="line">path =&gt; <span class="string">&quot;/var/log/nginx/www.xxx.com_access_json.log&quot;</span></span><br><span class="line">start_position =&gt; <span class="string">&quot;beginning&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">file &#123;</span><br><span class="line"><span class="built_in">type</span> =&gt; <span class="string">&quot;xxx_nginx_access&quot;</span></span><br><span class="line">path =&gt; <span class="string">&quot;/var/log/nginx/xxx.xxx.com_access_json.log&quot;</span></span><br><span class="line">start_position =&gt; <span class="string">&quot;beginning&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter&#123;</span><br><span class="line">        json&#123;</span><br><span class="line">                <span class="built_in">source</span> =&gt; <span class="string">&#x27;message&#x27;</span></span><br><span class="line">                remove_field =&gt; [<span class="string">&quot;message&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">elasticsearch &#123;</span><br><span class="line">hosts =&gt; [<span class="string">&quot;10.0.0.81:9200&quot;</span>]</span><br><span class="line">index =&gt; <span class="string">&quot;nginx_access-%&#123;+YYYY.MM.dd&#125;&quot;</span></span><br><span class="line">codec =&gt; json</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测Logstash语法</span></span><br><span class="line">/usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/nginx_es.conf -t</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Logstash</span></span><br><span class="line">/usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/nginx_es.conf &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开浏览器，访问：http://10.0.0.81:9100/</span></span><br></pre></td></tr></table></figure><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230508205727643.png" alt="image-20230508205727643"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230508205731891.png" alt="image-20230508205731891"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230508205736758.png" alt="image-20230508205736758"></p><h1 id="Logstash通过TCP-UDP收集日志并输出到ES中"><a href="#Logstash通过TCP-UDP收集日志并输出到ES中" class="headerlink" title="Logstash通过TCP/UDP收集日志并输出到ES中"></a>Logstash通过TCP/UDP收集日志并输出到ES中</h1><p>通过logstash的tcp/udp插件收集日志，通常用于在向elasticsearch日志补录丢失的部分日志，可以将丢失的日志通过一个TCP端口直接写入到elasticsearch服务器。</p><h2 id="配置Logstash"><a href="#配置Logstash" class="headerlink" title="配置Logstash"></a>配置Logstash</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入Logstash配置文件目录</span></span><br><span class="line"><span class="built_in">cd</span> /etc/logstash/conf.d/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑Logstash配置文件</span></span><br><span class="line">vim tcp.conf</span><br><span class="line">input &#123;</span><br><span class="line">  tcp &#123;</span><br><span class="line">    port =&gt; 1234</span><br><span class="line">    <span class="built_in">type</span> =&gt; <span class="string">&quot;tcplog&quot;</span></span><br><span class="line">    mode =&gt; <span class="string">&quot;server&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">output &#123;</span><br><span class="line">  stdout &#123;</span><br><span class="line">    codec =&gt; rubydebug</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动Logstash</span></span><br><span class="line">/usr/share/logstash/bin/logstash -f  /etc/logstash/conf.d/tcp.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测端口是否启动成功</span></span><br><span class="line">netstat -lntup</span><br><span class="line">tcp        0      0 :::1234            :::*             LISTEN      8656/java</span><br></pre></td></tr></table></figure><h2 id="使用nc传输日志"><a href="#使用nc传输日志" class="headerlink" title="使用nc传输日志"></a>使用nc传输日志</h2><p>NetCat简称nc，在网络工具中有瑞士军刀美誉，其功能实用，是一个简单、可靠的网络工具，可通过TCP或UDP协议传输读写数据，另外还具有很多其他功能。</p><p><strong>在其它服务器安装nc命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用yum安装nc</span></span><br><span class="line">yum install -y nc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用nc传输数据</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;test nc&quot;</span> | nc 10.0.0.83 1234</span><br></pre></td></tr></table></figure><p><strong>通过nc发送一个文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将/etc/passwd文件当成日志文件传送</span></span><br><span class="line">nc 10.0.0.83 1234 &lt; /etc/passwd</span><br></pre></td></tr></table></figure><p>结果如下，我们不难发现，Logstash会将传送来的日志文件 一行一行 读取，收集成日志</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15546940909203.jpg" alt="img"></p><h2 id="通过伪设备的方式发送日志"><a href="#通过伪设备的方式发送日志" class="headerlink" title="通过伪设备的方式发送日志"></a>通过伪设备的方式发送日志</h2><p>在类Unix操作系统中，设备节点并不一定要对应物理设备。没有这种对应关系的设备是伪设备。操作系统运用了它们提供的多种功能，tcp只是dev下面众多伪设备当中的一种设备。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 发送伪设备数据</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;测试设备&quot;</span>  &gt; /dev/tcp/10.0.0.83/1234</span><br></pre></td></tr></table></figure><h2 id="将输出改成ES"><a href="#将输出改成ES" class="headerlink" title="将输出改成ES"></a>将输出改成ES</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑logstash配置文件</span></span><br><span class="line">vim tcp.conf</span><br><span class="line">input &#123;</span><br><span class="line">  tcp &#123;</span><br><span class="line">    port =&gt; 1234</span><br><span class="line">    <span class="built_in">type</span> =&gt; <span class="string">&quot;tcplog&quot;</span></span><br><span class="line">    mode =&gt; <span class="string">&quot;server&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    hosts =&gt; [<span class="string">&quot;10.0.0.51:9200&quot;</span>]</span><br><span class="line">    index =&gt;  <span class="string">&quot;tcp_log-%&#123;+YYYY.MM.dd&#125;&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Logstash</span></span><br><span class="line">/usr/share/logstash/bin/logstash -f  /etc/logstash/conf.d/tcp.conf &amp;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 测试数据</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;测试设备1&quot;</span>  &gt; /dev/tcp/10.0.0.53/1234</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;测试设备2&quot;</span>  &gt; /dev/tcp/10.0.0.53/1234</span><br></pre></td></tr></table></figure><p>打开浏览器，访问：<a href="http://10.0.0.51:9100/">http://10.0.0.51:9100/</a></p><h2 id="将ES索引添加到Kibana中"><a href="#将ES索引添加到Kibana中" class="headerlink" title="将ES索引添加到Kibana中"></a>将ES索引添加到Kibana中</h2><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15546950391574.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15546950642404.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15546951024691.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15546951535314.jpg" alt="img"></p><h1 id="Logstash配合rsyslog收集haproxy日志并输出到ES中"><a href="#Logstash配合rsyslog收集haproxy日志并输出到ES中" class="headerlink" title="Logstash配合rsyslog收集haproxy日志并输出到ES中"></a>Logstash配合rsyslog收集haproxy日志并输出到ES中</h1><h2 id="rsyslog详解"><a href="#rsyslog详解" class="headerlink" title="rsyslog详解"></a>rsyslog详解</h2><ul><li>在centos 6及之前的版本叫做syslog，centos 7开始叫做rsyslog，根据官方的介绍，rsyslog(2013年版本)可以达到每秒转发百万条日志的级别，官方网址：<a href="http://www.rsyslog.com/">http://www.rsyslog.com/</a></li><li>rsyslog是linux系统中用来实现日志功能的服务，默认已经安装，并且自动启用。</li><li>作用：<ul><li>主要用来采集日志，不生产日志</li></ul></li><li>特性：<ol><li>支持输出日志到各种数据库，如 MySQL，PostgreSQL，MongoDB ElasticSearch，等等；</li><li>通过 RELP + TCP 实现数据的可靠传输（基于此结合丰富的过滤条件可以建立一种 可靠的数据传输通道供其他应用来使用）；</li><li>精细的输出格式控制以及对消息的强大 过滤能力；</li><li>高精度时间戳；队列操作（内存，磁盘以及混合模式等）； 支持数据的加密和压缩传输等。</li></ol></li></ul><h2 id="haproxy详解"><a href="#haproxy详解" class="headerlink" title="haproxy详解"></a>haproxy详解</h2><ul><li>原理<ul><li>haproxy提供高可用性、<a href="https://so.csdn.net/so/search?q=%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1&spm=1001.2101.3001.7020">负载均衡</a>以及基于TCP(第四层)和HTTP（第七层）应用的代理，支持虚拟主机，它是免费、快速并且可靠的一种解决方案。</li></ul></li><li>优点<ol><li>免费开源，稳定性也是非常好。单haproxy也跑得不错，稳定性可以与硬件级的F5相媲美。</li><li>根据官方文档，haproxy可以跑满10Gbps，这个数值作为软件级负载均衡器是相当惊人的。</li><li>haproxy支持连接拒绝:因为维护一个连接的打开的开销是很低的，有时我们很需要限制攻击蠕虫（attack bots），也就是说限制它们的连接打开从而限制它们的危害。这个已经为一个陷于小型DDoS攻击的网站开发了而且已经拯救了很多站点，这个优点也是其它负载均衡器没有的。</li><li>haproxy支持全透明代理（已具备硬件防火墙的典型特点）:可以用客户端IP地址或者任何其他地址来连接后端服务器。这个特性仅在Linux 2.4/2.6内核打了tcp proxy补丁后才可以使用。这个特性也使得为某特殊服务器处理部分流量同时又不修改服务器的地址成为可能。</li><li>haproxy现多于线上的Mysql集群环境，我们常用于它作为MySQL（读）负载均衡。</li><li>自带强大的监控服务器状态的页面，实际环境中我们结合Nagios进行邮件或短信报警。</li><li>HAProxy支持虚拟主机，许多朋友说它不支持虚拟主机是错误的，通过测试我们知道，HAProxy是支持虚拟主机的。</li></ol></li></ul><h2 id="架构流程图示"><a href="#架构流程图示" class="headerlink" title="架构流程图示"></a>架构流程图示</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230509215529394.png" alt="image-20230509215529394"></p><h2 id="修改nginx配置文件（同时配置多台nginx服务器）"><a href="#修改nginx配置文件（同时配置多台nginx服务器）" class="headerlink" title="修改nginx配置文件（同时配置多台nginx服务器）"></a>修改nginx配置文件（同时配置多台nginx服务器）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改nginx主配置文件，将端口改为8081（避免端口冲突）</span></span><br><span class="line">vim /usr/local/nginx/conf/nginx.conf</span><br><span class="line">worker_processes  1;</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    log_format  main  <span class="string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;</span><br><span class="line"> </span><br><span class="line">    log_format access_json <span class="string">&#x27;&#123;&quot;@timestamp&quot;:&quot;$time_iso8601&quot;,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;host&quot;:&quot;$server_addr&quot;,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;clientip&quot;:&quot;$remote_addr&quot;,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;size&quot;:$body_bytes_sent,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;responsetime&quot;:$request_time,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;upstreamtime&quot;:&quot;$upstream_response_time&quot;,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;upstreamhost&quot;:&quot;$upstream_addr&quot;,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;http_host&quot;:&quot;$host&quot;,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;url&quot;:&quot;$uri&quot;,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;domain&quot;:&quot;$host&quot;,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;xff&quot;:&quot;$http_x_forwarded_for&quot;,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;referer&quot;:&quot;$http_referer&quot;,&#x27;</span></span><br><span class="line">            <span class="string">&#x27;&quot;status&quot;:&quot;$status&quot;&#125;&#x27;</span>;</span><br><span class="line"> </span><br><span class="line">    server &#123;</span><br><span class="line">        listen       8081;</span><br><span class="line">        server_name  10.0.0.83;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /code/html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改nginx网页配置文件</span></span><br><span class="line">vim /etc/nginx/conf.d/www.conf</span><br><span class="line">server&#123;</span><br><span class="line">listen 8090;</span><br><span class="line">server_name www.xxx.com;</span><br><span class="line">root /code;</span><br><span class="line">index index.html;</span><br><span class="line">access_log /var/log/nginx/www.xxx.com_access_json.log json;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vim /etc/nginx/conf.d/xxx.conf</span><br><span class="line">server&#123;</span><br><span class="line">listen 8091;</span><br><span class="line">server_name xxx.xxx.com;</span><br><span class="line">root /code1;</span><br><span class="line">index index.html;</span><br><span class="line">access_log /var/log/nginx/xxx.xxx.com_access_json.log json;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启nginx</span></span><br><span class="line">/usr/local/nginx/sbin/nginx -t</span><br><span class="line">nginx: the configuration file /usr/local/nginx-1.10.3/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /usr/local/nginx-1.10.3/conf/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">/usr/local/nginx/sbin/nginx -s reload</span><br></pre></td></tr></table></figure><h2 id="安装配置rsyslog"><a href="#安装配置rsyslog" class="headerlink" title="安装配置rsyslog"></a>安装配置rsyslog</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装rsyslog</span></span><br><span class="line">yum install -y rsyslog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑rsyslog配置文件</span></span><br><span class="line">vim /etc/rsyslog.conf</span><br><span class="line"><span class="comment">## 注释打开</span></span><br><span class="line">15 <span class="variable">$ModLoad</span> imudp</span><br><span class="line">16 <span class="variable">$UDPServerRun</span> 514</span><br><span class="line"></span><br><span class="line">19 <span class="variable">$ModLoad</span> imtcp</span><br><span class="line">20 <span class="variable">$InputTCPServerRun</span> 514</span><br><span class="line"></span><br><span class="line"><span class="comment">## 最后面一行添加，local7对应haproxy配置文件定义的local级别,端口为Logstash的端口</span></span><br><span class="line">92 local7.*     @@10.0.0.83:2222</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动rsyslog</span></span><br><span class="line">systemctl start rsyslog</span><br></pre></td></tr></table></figure><h2 id="安装配置haproxy"><a href="#安装配置haproxy" class="headerlink" title="安装配置haproxy"></a>安装配置haproxy</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装haproxy</span></span><br><span class="line">yum install -y haproxy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑haproxy配置文件</span></span><br><span class="line">vim /etc/haproxy/haproxy.cfg</span><br><span class="line"></span><br><span class="line">global</span><br><span class="line">maxconn 100000</span><br><span class="line"><span class="built_in">chroot</span> /var/lib/haproxy</span><br><span class="line">uid 99</span><br><span class="line">gid 99</span><br><span class="line">daemon</span><br><span class="line">nbproc 1</span><br><span class="line">pidfile /var/run/haproxy.pid</span><br><span class="line"><span class="comment">## 指定日志输出的local级别，需对应本地或远端的rsyslog配置文件</span></span><br><span class="line"><span class="built_in">log</span> 127.0.0.1 local7 info</span><br><span class="line"> </span><br><span class="line">defaults</span><br><span class="line">option http-keep-alive</span><br><span class="line">option  forwardfor</span><br><span class="line">maxconn 100000</span><br><span class="line">mode http</span><br><span class="line"><span class="built_in">timeout</span> connect 300000ms</span><br><span class="line"><span class="built_in">timeout</span> client  300000ms</span><br><span class="line"><span class="built_in">timeout</span> server  300000ms</span><br><span class="line"></span><br><span class="line">listen stats</span><br><span class="line"> mode http</span><br><span class="line"> <span class="built_in">bind</span> 0.0.0.0:9999</span><br><span class="line"> stats <span class="built_in">enable</span></span><br><span class="line"> <span class="built_in">log</span> global</span><br><span class="line"> stats uri     /haproxy-status</span><br><span class="line"> stats auth    haadmin:123456</span><br><span class="line"></span><br><span class="line"><span class="comment">#frontend web_port</span></span><br><span class="line">frontend web_port</span><br><span class="line">        <span class="built_in">bind</span> 0.0.0.0:80</span><br><span class="line">        mode http</span><br><span class="line">        option httplog</span><br><span class="line">        <span class="built_in">log</span> global</span><br><span class="line">        option  forwardfor</span><br><span class="line"><span class="comment">###################ACL Setting##########################</span></span><br><span class="line">        acl pc          hdr_dom(host) -i www.xxx.com</span><br><span class="line">        acl mobile      hdr_dom(host) -i xxx.xxx.com</span><br><span class="line"><span class="comment">###################USE ACL##############################</span></span><br><span class="line">        use_backend     pc_host        <span class="keyword">if</span>  pc</span><br><span class="line">        use_backend     mobile_host    <span class="keyword">if</span>  mobile</span><br><span class="line"><span class="comment">########################################################</span></span><br><span class="line"></span><br><span class="line">backend pc_host</span><br><span class="line">        mode    http</span><br><span class="line">        option  httplog</span><br><span class="line">        <span class="comment">## 设置为轮循模式</span></span><br><span class="line">        balance static-rr</span><br><span class="line">        server web1  10.0.0.83:8090 check inter 2000 rise 3 fall 2 weight 1</span><br><span class="line">        server web1  10.0.0.52:8090 check inter 2000 rise 3 fall 2 weight 1</span><br><span class="line"></span><br><span class="line">backend mobile_host</span><br><span class="line">        mode    http</span><br><span class="line">        option  httplog</span><br><span class="line">        <span class="comment">## 设置为轮循模式</span></span><br><span class="line">        balance static-rr</span><br><span class="line">        server web1  10.0.0.83:8091 check inter 2000 rise 3 fall 2 weight 1</span><br><span class="line">        server web1  10.0.0.52:8091 check inter 2000 rise 3 fall 2 weight 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动haproxy</span></span><br><span class="line">systemctl start haproxy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证端口</span></span><br><span class="line">netstat -lntup</span><br><span class="line">tcp        0      0 0.0.0.0:9999        0.0.0.0:*         LISTEN      9082/haproxy</span><br><span class="line">tcp        0      0 0.0.0.0:80          0.0.0.0:*         LISTEN      9631/haproxy</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 验证进程</span></span><br><span class="line">ps -ef|grep haproxy</span><br><span class="line">nobody     9082      1  0 14:04 ?        00:00:00 /usr/sbin/haproxy -D -f /etc/haproxy/haproxy.cfg -p /var/run/haproxy.pid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改本地hosts文件</span></span><br><span class="line">10.0.0.83 www.xxx.com xxx.xxx.com</span><br></pre></td></tr></table></figure><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230509222211538.png" alt="image-20230509222211538"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230509222216392.png" alt="image-20230509222216392"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230509222224356.png" alt="image-20230509222224356"></p><h2 id="logstash通过rsyslog收集haproxy日志"><a href="#logstash通过rsyslog收集haproxy日志" class="headerlink" title="logstash通过rsyslog收集haproxy日志"></a>logstash通过rsyslog收集haproxy日志</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑Logstash配置文件</span></span><br><span class="line">vim haproxy.cof</span><br><span class="line">input&#123;</span><br><span class="line">syslog1&#123;</span><br><span class="line"><span class="built_in">type</span> =&gt; <span class="string">&quot;rsyslog_haproxy&quot;</span></span><br><span class="line">port =&gt; <span class="string">&quot;2222&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">output&#123;</span><br><span class="line">stdout&#123;</span><br><span class="line">codec =&gt; rubydebug</span><br><span class="line">&#125;</span><br><span class="line">elasticsearch&#123;</span><br><span class="line">hosts =&gt; [<span class="string">&quot;10.0.0.81:9200&quot;</span>]</span><br><span class="line">index =&gt; <span class="string">&quot;%&#123;type&#125;-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Logstash</span></span><br><span class="line">/usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/haproxy.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查Logstash端口</span></span><br><span class="line">netstat -lntup|grep 2222</span><br><span class="line">tcp        0      0 :::2222              :::*               LISTEN      9867/java</span><br><span class="line">udp        0      0 :::2222              :::*               LISTEN      9867/java</span><br></pre></td></tr></table></figure><ul><li>logstash监听2222端口</li><li>rsyslog是接收到了haproxy的日志然后转发给10.0.0.83:2222</li><li>logstash启动2222端口实时接收rsyslog传来的日志</li><li>如果logstash停掉 2222端口就会消失 2222是logstash起来的</li></ul><p>打开浏览器，访问：<a href="http://10.0.0.81:9100/">http://10.0.0.81:9100/</a></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15547158333534.jpg" alt="img"></p><h2 id="将ES索引添加到Kibana中-1"><a href="#将ES索引添加到Kibana中-1" class="headerlink" title="将ES索引添加到Kibana中"></a>将ES索引添加到Kibana中</h2><p>打开浏览器，访问：<a href="http://10.0.0.83:5601/">http://10.0.0.83:5601/</a></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15547168292516.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15547168719954.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15547169244924.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15547169999825.jpg" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;Logstash收集java日志并输出到ES中&quot;&gt;&lt;a href=&quot;#Logstash收集java日志并输出到ES中&quot; class=&quot;headerlink&quot; title=&quot;Logstash收集java日志并输出到ES中&quot;&gt;&lt;/a&gt;Logs</summary>
      
    
    
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/categories/ELK%E9%9B%86%E7%BE%A4/"/>
    
    
    <category term="自动化运维" scheme="https://chenlinbb.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/"/>
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/tags/ELK%E9%9B%86%E7%BE%A4/"/>
    
    <category term="日志收集" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/"/>
    
    <category term="日志分析" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>5.Kibana安装,索引添加及界面功能</title>
    <link href="https://chenlinbb.github.io/archives/c466b2be.html"/>
    <id>https://chenlinbb.github.io/archives/c466b2be.html</id>
    <published>2024-07-17T15:51:58.156Z</published>
    <updated>2024-07-17T15:52:07.274Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="Kibana简介及部署"><a href="#Kibana简介及部署" class="headerlink" title="Kibana简介及部署"></a>Kibana简介及部署</h1><h2 id="什么是Kibana？"><a href="#什么是Kibana？" class="headerlink" title="什么是Kibana？"></a>什么是Kibana？</h2><p>Kibana是一个通过调用elasticsearch服务器进行图形化展示搜索结果的开源项目。</p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230506112049909.png" alt="image-20230506112049909"></p><h2 id="kibana环境准备"><a href="#kibana环境准备" class="headerlink" title="kibana环境准备"></a>kibana环境准备</h2><table><thead><tr><th>主机名</th><th>wanIP</th><th>LanIP</th><th>角色</th><th>应用</th></tr></thead><tbody><tr><td>elk01</td><td>10.0.0.81</td><td>172.16.1.81</td><td>ES日志存储数据库</td><td>JDK elasticsearch</td></tr><tr><td>elk02</td><td>10.0.0.82</td><td>172.16.1.82</td><td>ES日志存储数据库</td><td>JDK elasticsearch</td></tr><tr><td>elk03</td><td>10.0.0.83</td><td>172.16.1.83</td><td>日志数据转发工具</td><td>JDK logstash kibana</td></tr></tbody></table><h2 id="Kibana安装及配置"><a href="#Kibana安装及配置" class="headerlink" title="Kibana安装及配置"></a>Kibana安装及配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载kibana安装包</span></span><br><span class="line">wget https://artifacts.elastic.co/downloads/kibana/kibana-5.6.16-x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将Kibana安装包下载至服务器，并安装</span></span><br><span class="line">yum localinstall -y kibana-5.3.0-x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置Kibana</span></span><br><span class="line"><span class="comment">## 方法一</span></span><br><span class="line">vim /etc/kibana/kibana.yml</span><br><span class="line">2 server.port: 5601</span><br><span class="line">7 server.host: <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">21 elasticsearch.url: <span class="string">&quot;http://10.0.0.81:9200&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 方法二</span></span><br><span class="line">grep -n <span class="string">&quot;^[a-Z]&quot;</span> /etc/kibana/kibana.yml</span><br><span class="line">2:server.port: 5601</span><br><span class="line">7:server.host: <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">21:elasticsearch.url: <span class="string">&quot;http://10.0.0.81:9200&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Kibana（CentOS6）</span></span><br><span class="line">/etc/init.d/kibana start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Kibana（CentOS7）</span></span><br><span class="line">systemctl start kibana</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证端口是否启动</span></span><br><span class="line">netstat -lntup|grep 5601</span><br><span class="line">tcp        0      0 0.0.0.0:5601       0.0.0.0:*        LISTEN      1573/node</span><br></pre></td></tr></table></figure><p>打开浏览器，访问：<a href="http://10.0.0.83:5601/">http://10.0.0.83:5601</a> 查看Kibana及集群状态。</p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230506112454826.png" alt="image-20230506112454826"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/15539388480519.jpg" alt="15539388480519"></p><h1 id="Kibana中添加ES索引"><a href="#Kibana中添加ES索引" class="headerlink" title="Kibana中添加ES索引"></a>Kibana中添加ES索引</h1><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230506112518578.png" alt="image-20230506112518578"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230506112521270.png" alt="image-20230506112521270"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230506112531817.png" alt="image-20230506112531817"></p><h2 id="Kibana查看日志"><a href="#Kibana查看日志" class="headerlink" title="Kibana查看日志"></a>Kibana查看日志</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/15539501019007.jpg" alt="15539501019007"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230506112542144.png" alt="image-20230506112542144"></p><h2 id="Kibana区域定义及说明"><a href="#Kibana区域定义及说明" class="headerlink" title="Kibana区域定义及说明"></a>Kibana区域定义及说明</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/15539510037136.jpg" alt="15539510037136"></p><ul><li>绿色区域<ul><li>时间区域，选择想要查看日志的时间段：<ul><li>第一个是快速查询，可以查看今天，这周，这个月，这一年，昨天…… 等时段的日志</li><li>第二个是查看具体那个时间段之前，到现在为止的一段时间的日志</li><li>第三个是精确查找，可以根据日志，具体到某个时间点，可精确到秒</li></ul></li></ul></li><li>黄色区域<ul><li>功能区域</li><li>查看日志</li><li>画图工具</li><li>图形展示</li><li>时间轴</li><li>开发工具</li><li>管理工具</li></ul></li><li>黑色区域<ul><li>日志列表区，选择自己想看的日志，日志名以项目名开头，后面是对应的域名。<ul><li>例：[zls_]YYYY.MM.DD 标红的为日期格式。</li></ul></li></ul></li><li>红色区域<ul><li>搜索区，使用Lucene语法搜索想要内容。</li></ul></li><li>白色区域<ul><li>展示区 ，日志的详细信息，及过滤日志后会高亮显示。</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;Kibana简介及部署&quot;&gt;&lt;a href=&quot;#Kibana简介及部署&quot; class=&quot;headerlink&quot; title=&quot;Kibana简介及部署&quot;&gt;&lt;/a&gt;Kibana简介及部署&lt;/h1&gt;&lt;h2 id=&quot;什么是Kibana？&quot;&gt;&lt;a h</summary>
      
    
    
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/categories/ELK%E9%9B%86%E7%BE%A4/"/>
    
    
    <category term="自动化运维" scheme="https://chenlinbb.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/"/>
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/tags/ELK%E9%9B%86%E7%BE%A4/"/>
    
    <category term="日志收集" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/"/>
    
    <category term="日志分析" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>4.Logstash部署、测试与系统日志收集</title>
    <link href="https://chenlinbb.github.io/archives/a1a7fa5.html"/>
    <id>https://chenlinbb.github.io/archives/a1a7fa5.html</id>
    <published>2024-07-17T15:51:58.155Z</published>
    <updated>2024-07-17T15:52:07.269Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="Logstash环境准备与安装"><a href="#Logstash环境准备与安装" class="headerlink" title="Logstash环境准备与安装"></a>Logstash环境准备与安装</h1><h2 id="Logstash环境准备"><a href="#Logstash环境准备" class="headerlink" title="Logstash环境准备"></a>Logstash环境准备</h2><table><thead><tr><th>主机名</th><th>wanIP</th><th>LanIP</th><th>角色</th><th>应用</th></tr></thead><tbody><tr><td>elk01</td><td>10.0.0.81</td><td>172.16.1.81</td><td>ES日志存储数据库</td><td>JDK elasticsearch</td></tr><tr><td>elk02</td><td>10.0.0.82</td><td>172.16.1.82</td><td>ES日志存储数据库</td><td>JDK elasticsearch</td></tr><tr><td>elk03</td><td>10.0.0.83</td><td>172.16.1.83</td><td>日志数据转发工具</td><td>JDK logstash</td></tr></tbody></table><p><strong>关闭防火墙</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CentOS6 关闭防火墙</span></span><br><span class="line">/etc/init.d/iptables stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># CentOS7 关闭防火墙</span></span><br><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><p><strong>关闭SELINUX</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 临时关闭</span></span><br><span class="line">setenforce 0</span><br><span class="line">setenforce: SELinux is disabled</span><br><span class="line"></span><br><span class="line"><span class="comment"># 永久关闭</span></span><br><span class="line">vim /etc/sysconfig/selinux</span><br><span class="line"><span class="comment"># This file controls the state of SELinux on the system.</span></span><br><span class="line"><span class="comment"># SELINUX= can take one of these three values:</span></span><br><span class="line"><span class="comment">#     enforcing - SELinux security policy is enforced.</span></span><br><span class="line"><span class="comment">#     permissive - SELinux prints warnings instead of enforcing.</span></span><br><span class="line"><span class="comment">#     disabled - No SELinux policy is loaded.</span></span><br><span class="line">SELINUX=disabled    ==&gt;      //原来是enforcing 改成disabled</span><br><span class="line"><span class="comment"># SELINUXTYPE= can take one of these two values:</span></span><br><span class="line"><span class="comment">#     targeted - Targeted processes are protected,</span></span><br><span class="line"><span class="comment">#     mls - Multi Level Security protection.</span></span><br><span class="line">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure><p><strong>设置epel源</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CentOS6 下载epel源</span></span><br><span class="line">wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-6.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># CentOS7 下载epel源</span></span><br><span class="line">wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br></pre></td></tr></table></figure><p><strong>修改时区</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将时区修改为上海时区</span></span><br><span class="line"><span class="built_in">cp</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"><span class="built_in">cp</span>：是否覆盖<span class="string">&quot;/etc/localtime&quot;</span>？ y</span><br></pre></td></tr></table></figure><p><strong>设置时间同步</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 同步服务器时间（切记保证集群之间时间一致非常重要）</span></span><br><span class="line">ntpdate time1.aliyun.com</span><br><span class="line">28 Feb 14:11:28 ntpdate[8904]: step time server 203.107.6.88 offset 3168820.831817 sec</span><br></pre></td></tr></table></figure><h2 id="部署Logstash"><a href="#部署Logstash" class="headerlink" title="部署Logstash"></a>部署Logstash</h2><p>Logstash是一个开源的数据收集引擎，可以水平伸缩，而且logstash整个ELK当中拥有最多插件的一个组件，其可以接收来自不同来源的数据并统一输出到指定的且可以是多个不同目的地。</p><p><strong>安装JDK环境</strong></p><p>下载地址: <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解压JDK安装包</span></span><br><span class="line">tar xf jdk-8u121-linux-x64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以yum直接安装</span></span><br><span class="line">yum install -y java</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将JDK安装包移动到安装目录下</span></span><br><span class="line"><span class="built_in">mv</span> jdk1.8.0_121 /usr/local/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 做软链接(方便日后升级)</span></span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/jdk1.8.0_121 /usr/local/jdk1.8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加环境变量</span></span><br><span class="line">vim /etc/profile.d/jdk1.8.sh</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/local/jdk1.8</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/jre/lib/rt.jar:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载环境变量</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否加载成功</span></span><br><span class="line">java -version</span><br><span class="line">java version <span class="string">&quot;1.8.0_121&quot;</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_121-b13)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)</span><br></pre></td></tr></table></figure><p><strong>安装Logstash</strong></p><p>下载地址:</p><p><a href="https://www.elastic.co/downloads/past-releases/logstash-5-3-0">https://www.elastic.co/downloads/past-releases/logstash-5-3-0</a></p><p><a href="https://artifacts.elastic.co/downloads/logstash/logstash-5.3.0.rpm">https://artifacts.elastic.co/downloads/logstash/logstash-5.3.0.rpm</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载logstash的rpm包</span></span><br><span class="line">wget https://artifacts.elastic.co/downloads/logstash/logstash-5.3.0.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装Logstash使用yum localinstall 自动安装依赖包</span></span><br><span class="line">yum localinstall -y logstash-5.3.0.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给Logstash目录授权</span></span><br><span class="line"><span class="built_in">chown</span> -R logstash.logstash /usr/share/logstash/</span><br></pre></td></tr></table></figure><h2 id="Logstash输入输出插件介绍"><a href="#Logstash输入输出插件介绍" class="headerlink" title="Logstash输入输出插件介绍"></a>Logstash输入输出插件介绍</h2><h2 id="INPUT、OUTPUT插件"><a href="#INPUT、OUTPUT插件" class="headerlink" title="INPUT、OUTPUT插件"></a>INPUT、OUTPUT插件</h2><p><strong>INPUT：</strong>插件使Logstash能够读取特定的事件源。</p><p><strong>OUTPUT：</strong>插件将事件数据发送到特定的目的地，OUTPUT是事件流水线中的最后阶段。</p><table><thead><tr><th>INPUT支持事件源</th><th>OUTPUT支持输出源</th><th>CODEC编解码器支持编码</th></tr></thead><tbody><tr><td>azure_event_hubs(微软云事件中心)</td><td>elasticsearch(搜索引擎数据库)</td><td>avro(数据序列化)</td></tr><tr><td>beats(filebeat日志收集工具)</td><td>email(邮件)</td><td>CEF(嵌入式框架)</td></tr><tr><td>elasticsearch(搜索引擎数据库)</td><td>file(文件)</td><td>es_bulk(ES中的bulk api)</td></tr><tr><td>file(文件)</td><td>http(超文本传输协议)</td><td>Json(数据序列化、格式化)</td></tr><tr><td>generator(生成器)</td><td>kafka(基于java的消息队列)</td><td>Json_lines(便于存储结构化)</td></tr><tr><td>heartbeat(高可用软件)</td><td>rabbitmq(消息队列 OpenStack)</td><td>line(行)</td></tr><tr><td>http_poller(http api)</td><td>redis(缓存、消息队列、NoSQL)</td><td>multiline(多行匹配)</td></tr><tr><td>jdbc(java连接数据库的驱动)</td><td>s3*(存储)</td><td>plain(纯文本，事件间无间隔)</td></tr><tr><td>kafka(基于java的消息队列)</td><td>stdout(标准输出)</td><td>rubydebug(ruby语法格式)</td></tr><tr><td>rabbitmq(消息队列 OpenStack)</td><td>tcp(传输控制协议)</td><td></td></tr><tr><td>redis(缓存、消息队列、NoSQL)</td><td>udp(用户数据报协议)</td><td></td></tr><tr><td>s3*(存储)</td><td></td><td></td></tr><tr><td>stdin(标准输入)</td><td></td><td></td></tr><tr><td>syslog(系统日志)</td><td></td><td></td></tr><tr><td>tcp(传输控制协议)</td><td></td><td></td></tr><tr><td>udp(用户数据报协议)</td><td></td><td></td></tr></tbody></table><h1 id="Logstash输入输出插件测试"><a href="#Logstash输入输出插件测试" class="headerlink" title="Logstash输入输出插件测试"></a>Logstash输入输出插件测试</h1><h2 id="测试logstash标准输入到标准输出"><a href="#测试logstash标准输入到标准输出" class="headerlink" title="测试logstash标准输入到标准输出"></a>测试logstash标准输入到标准输出</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从标准输入到标准输出</span></span><br><span class="line">/usr/share/logstash/bin/logstash -e <span class="string">&#x27;input &#123; stdin&#123;&#125; &#125; output &#123; stdout&#123; codec =&gt; rubydebug &#125;&#125;&#x27;</span></span><br><span class="line"><span class="comment">## 标准输入nginx log及返回结果</span></span><br><span class="line">nginx <span class="built_in">log</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">## 时间戳</span></span><br><span class="line"><span class="string">&quot;@timestamp&quot;</span> =&gt; 2023-05-05T08:02:13.138Z,</span><br><span class="line"><span class="comment">## 版本信息</span></span><br><span class="line"><span class="string">&quot;@version&quot;</span> =&gt; <span class="string">&quot;1&quot;</span>,</span><br><span class="line"><span class="comment">## 主机信息</span></span><br><span class="line"><span class="string">&quot;host&quot;</span> =&gt; <span class="string">&quot;elkstack03&quot;</span>,</span><br><span class="line"><span class="comment">## 接收信息</span></span><br><span class="line"><span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;nginx log&quot;</span> <span class="comment"># 标准输出</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例：</span></span><br><span class="line">xxx</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2023-05-06T02:42:03.282Z,</span><br><span class="line">      <span class="string">&quot;@version&quot;</span> =&gt; <span class="string">&quot;1&quot;</span>,</span><br><span class="line">          <span class="string">&quot;host&quot;</span> =&gt; <span class="string">&quot;elk03&quot;</span>,</span><br><span class="line">       <span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;xxx&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果展示如下图所示：</p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230506104251208.png" alt="image-20230506104251208"></p><h2 id="测试logstash标准输入到文件"><a href="#测试logstash标准输入到文件" class="headerlink" title="测试logstash标准输入到文件"></a>测试logstash标准输入到文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从标准输入到文件中</span></span><br><span class="line">/usr/share/logstash/bin/logstash -e <span class="string">&#x27;input &#123; stdin&#123;&#125; &#125; output &#123; file &#123; path =&gt; &quot;/tmp/test_%&#123;+YYYY.MM.dd&#125;.log&quot;&#125;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入</span></span><br><span class="line">xxx</span><br><span class="line">nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回结果</span></span><br><span class="line">10:45:00.340 [[main]&gt;worker0] INFO  logstash.outputs.file - Opening file &#123;:path=&gt;<span class="string">&quot;/tmp/test_2023.05.06.log&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看tmp目录下是否有日志文件存在</span></span><br><span class="line">ll /tmp/</span><br><span class="line">-rw-r--r-- 1 root root 178 May  6 10:45 test_2023.05.06.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看日志内容</span></span><br><span class="line"><span class="built_in">cat</span> /tmp/test_2023.05.06.<span class="built_in">log</span> </span><br><span class="line">&#123;<span class="string">&quot;@timestamp&quot;</span>:<span class="string">&quot;2023-05-06T02:45:00.246Z&quot;</span>,<span class="string">&quot;@version&quot;</span>:<span class="string">&quot;1&quot;</span>,<span class="string">&quot;host&quot;</span>:<span class="string">&quot;elk03&quot;</span>,<span class="string">&quot;message&quot;</span>:<span class="string">&quot;xxx&quot;</span>&#125;</span><br><span class="line">&#123;<span class="string">&quot;@timestamp&quot;</span>:<span class="string">&quot;2023-05-06T02:45:00.247Z&quot;</span>,<span class="string">&quot;@version&quot;</span>:<span class="string">&quot;1&quot;</span>,<span class="string">&quot;host&quot;</span>:<span class="string">&quot;elk03&quot;</span>,<span class="string">&quot;message&quot;</span>:<span class="string">&quot;nginx&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>结果展示如下图所示：</p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230506105223221.png" alt="image-20230506105223221"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230506105154786.png" alt="image-20230506105154786"></p><h2 id="测试logstash标准输入到ES"><a href="#测试logstash标准输入到ES" class="headerlink" title="测试logstash标准输入到ES"></a>测试logstash标准输入到ES</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从标准输入到Elasticsearch</span></span><br><span class="line">/usr/share/logstash/bin/logstash -e <span class="string">&#x27;input &#123; stdin&#123;&#125; &#125; output &#123; elasticsearch &#123;hosts =&gt; [&quot;10.0.0.81:9200&quot;] index =&gt; &quot;hcl_%&#123;+YYYY.MM.dd&#125;&quot; &#125;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入内容</span></span><br><span class="line">clbb</span><br></pre></td></tr></table></figure><p>结果展示如下图所示：</p><p>打开浏览器，访问：<a href="http://10.0.0.51:9100/">http://10.0.0.51:9100</a></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230506110005032.png" alt="image-20230506110005032"></p><h1 id="Logstash收集系统日志"><a href="#Logstash收集系统日志" class="headerlink" title="Logstash收集系统日志"></a>Logstash收集系统日志</h1><h2 id="Logstash收集单个日志到文件中"><a href="#Logstash收集单个日志到文件中" class="headerlink" title="Logstash收集单个日志到文件中"></a>Logstash收集单个日志到文件中</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑Logstash收集日志的配置文件</span></span><br><span class="line">vim /etc/logstash/conf.d/message.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">## 输入插件</span></span><br><span class="line">input &#123;</span><br><span class="line"><span class="comment">## 文件模块</span></span><br><span class="line">file &#123;</span><br><span class="line"><span class="comment">## 日志类型</span></span><br><span class="line"><span class="built_in">type</span> =&gt; <span class="string">&quot;message-log&quot;</span></span><br><span class="line"><span class="comment">## 日志路径</span></span><br><span class="line">path =&gt; <span class="string">&quot;/var/log/messages&quot;</span></span><br><span class="line"><span class="comment">## 第一次收集日志从头开始</span></span><br><span class="line">start_position =&gt; <span class="string">&quot;beginning&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 输出插件</span></span><br><span class="line">output &#123;</span><br><span class="line"><span class="comment">## 文件模块</span></span><br><span class="line">file &#123;</span><br><span class="line"><span class="comment">## 输出路径</span></span><br><span class="line">path =&gt; <span class="string">&quot;/tmp/message_%&#123;+yyyy.MM.dd&#125;.log&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测语法</span></span><br><span class="line">/usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/message.conf -t</span><br></pre></td></tr></table></figure><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230506110948245.png" alt="image-20230506110948245"></p><h2 id="收集多个日志至文件之中"><a href="#收集多个日志至文件之中" class="headerlink" title="收集多个日志至文件之中"></a>收集多个日志至文件之中</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑配置文件</span></span><br><span class="line">vim /etc/logstash/conf.d/system_log.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">## 输入插件</span></span><br><span class="line">input &#123;</span><br><span class="line"><span class="comment">## 文件模块</span></span><br><span class="line">file &#123;</span><br><span class="line"><span class="comment">## 日志路径</span></span><br><span class="line">path =&gt; <span class="string">&quot;/var/log/messages&quot;</span></span><br><span class="line"><span class="comment">## 日志类型</span></span><br><span class="line"><span class="built_in">type</span> =&gt; <span class="string">&quot;system_log&quot;</span></span><br><span class="line"><span class="comment">## 第一次收集从头收集</span></span><br><span class="line">start_position =&gt; <span class="string">&quot;beginning&quot;</span></span><br><span class="line"><span class="comment">## 收集日志间隔时间3秒</span></span><br><span class="line">stat_interval =&gt; <span class="string">&quot;3&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">## 文件模块</span></span><br><span class="line">file &#123;</span><br><span class="line"><span class="comment">## 日志路径</span></span><br><span class="line">path =&gt; <span class="string">&quot;/var/log/secure&quot;</span></span><br><span class="line"><span class="comment">## 日志类型</span></span><br><span class="line"><span class="built_in">type</span> =&gt; <span class="string">&quot;secure_log&quot;</span></span><br><span class="line"><span class="comment">## 第一次收集从头收集</span></span><br><span class="line">start_position =&gt; <span class="string">&quot;beginning&quot;</span></span><br><span class="line"><span class="comment">## 收集日志间隔时间3秒</span></span><br><span class="line">stat_interval =&gt; <span class="string">&quot;3&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">## 输出插件</span></span><br><span class="line">output &#123;</span><br><span class="line"><span class="comment">## 判断如果类型是system_log则输出到指定路径</span></span><br><span class="line"><span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">&quot;system_log&quot;</span> &#123;</span><br><span class="line"><span class="comment">## 文件模块</span></span><br><span class="line">file &#123;</span><br><span class="line"><span class="comment">## 日志输出路径</span></span><br><span class="line">path =&gt; <span class="string">&quot;/tmp/message2_%&#123;+yyyy.MM.dd&#125;.log&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">## 判断如果类型是secure_log则输出到指定路径</span></span><br><span class="line"><span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">&quot;secure_log&quot;</span> &#123;</span><br><span class="line"><span class="comment">## 文件模块</span></span><br><span class="line">file &#123;</span><br><span class="line"><span class="comment">#日志输出路径</span></span><br><span class="line">path =&gt; <span class="string">&quot;/tmp/secure_%&#123;+yyyy.MM.dd&#125;.log&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Logstash</span></span><br><span class="line">/usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/system_log.conf &amp;</span><br></pre></td></tr></table></figure><h2 id="将日志输出到ES"><a href="#将日志输出到ES" class="headerlink" title="将日志输出到ES"></a>将日志输出到ES</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑.conf的配置文件</span></span><br><span class="line">vim /etc/logstash/conf.d/message_file.es.conf</span><br><span class="line">input&#123;</span><br><span class="line">file&#123;</span><br><span class="line"><span class="built_in">type</span> =&gt; <span class="string">&#x27;msg_log&#x27;</span></span><br><span class="line">path =&gt; <span class="string">&quot;/tmp/test_2023.05.05.log&quot;</span></span><br><span class="line">start_position =&gt; <span class="string">&#x27;beginning&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output&#123;</span><br><span class="line">elasticsearch&#123;</span><br><span class="line">hosts =&gt; [<span class="string">&quot;10.0.0.81:9200&quot;</span>]</span><br><span class="line">index =&gt; <span class="string">&#x27;xxx_msg_log-2023-05-05&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># -f指定配置文件</span></span><br><span class="line">/usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/message_file.es.conf</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;Logstash环境准备与安装&quot;&gt;&lt;a href=&quot;#Logstash环境准备与安装&quot; class=&quot;headerlink&quot; title=&quot;Logstash环境准备与安装&quot;&gt;&lt;/a&gt;Logstash环境准备与安装&lt;/h1&gt;&lt;h2 id=&quot;</summary>
      
    
    
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/categories/ELK%E9%9B%86%E7%BE%A4/"/>
    
    
    <category term="自动化运维" scheme="https://chenlinbb.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/"/>
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/tags/ELK%E9%9B%86%E7%BE%A4/"/>
    
    <category term="日志收集" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/"/>
    
    <category term="日志分析" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>3.Elasticsearch内部分片及分片处理机制介绍</title>
    <link href="https://chenlinbb.github.io/archives/c2cebd98.html"/>
    <id>https://chenlinbb.github.io/archives/c2cebd98.html</id>
    <published>2024-07-17T15:51:58.154Z</published>
    <updated>2024-07-17T15:52:07.267Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="副本分片介绍"><a href="#副本分片介绍" class="headerlink" title="副本分片介绍"></a>副本分片介绍</h1><h2 id="什么是副本分片？"><a href="#什么是副本分片？" class="headerlink" title="什么是副本分片？"></a>什么是副本分片？</h2><p>副本分片的主要目的就是为了故障转移，如果持有主分片的节点挂掉了，一个副本分片就会晋升为主分片的角色。</p><p>在索引写入时，副本分片做着与主分片相同的工作。新文档首先被索引进主分片然后再同步到其它所有的副本分片。增加副本数并不会增加索引容量。</p><p>无论如何，副本分片可以服务于读请求，如果你的索引也如常见的那样是偏向查询使用的，那你可以通过增加副本的数目来提升查询性能，但也要为此，增加额外的硬件资源。</p><h2 id="Elasticsearch内部分片处理机制"><a href="#Elasticsearch内部分片处理机制" class="headerlink" title="Elasticsearch内部分片处理机制"></a>Elasticsearch内部分片处理机制</h2><p><strong>逆向索引</strong></p><p>与传统的数据库不同，在Elasticsearch中，每个字段里面的每个单词都是可以被搜索的。如teacher：“zls，bgx，lidao，oldboy，alex”我们在搜索关键字oldboy时，所有包含oldboy的文档都会被匹配到Elasticsearch的这个特性也叫做全文搜索。</p><p>为了支持这个特性，Elasticsearch中会维护一个叫做“invertedindex”（也叫逆向索引）的表，表内包含了所有文档中出现的所有单词，同时记录了这个单词在哪个文档中出现过。</p><p>例： 当前有4个文档</p><p>txt1：“zls，bgx，lidao”<br>txt2：“zls，oldboy，alex”<br>txt3：“bgx，lidao，oldboy”<br>txt4：“oldboy，alex”</p><p>那么Elasticsearch会维护下面一个数据结构表：</p><table><thead><tr><th>Term</th><th>txt1</th><th>txt2</th><th>txt3</th><th>txt4</th></tr></thead><tbody><tr><td>zls</td><td>Y</td><td>Y</td><td></td><td></td></tr><tr><td>bgx</td><td>Y</td><td></td><td>Y</td><td></td></tr><tr><td>lidao</td><td>Y</td><td></td><td>Y</td><td></td></tr><tr><td>oldboy</td><td></td><td>Y</td><td>Y</td><td>Y</td></tr><tr><td>alex</td><td></td><td>Y</td><td></td><td>Y</td></tr></tbody></table><p>随意搜索任意一个单词，Elasticsearch只要遍历一下这个表，就可以知道有些文档被匹配到了。</p><p>逆向索引里面不止记录了单词与文档的对应关系，它还维护了很多其他有用的数据。如：每个文档一共包含了多少个单词，单词在不同文档中的出现频率，每个文档的长度，所有文档的总长度等等。这些数据用来给搜索结果进行打分，如搜索zls时，那么出现zls这个单词次数最多的文档会被优先返回，因为它匹配的次数最多，和我们的搜索条件关联性最大，因此得分也最多。</p><p>逆向索引是不可更改的，一旦它被建立了，里面的数据就不会再进行更改。这样做就带来了以下几个好处：</p><ol><li>没有必要给逆向索引加锁，因为不允许被更改，只有读操作，所以就不用考虑多线程导致互斥等问题。</li><li>索引一旦被加载到了缓存中，大部分访问操作都是对内存的读操作，省去了访问磁盘带来的io开销。</li><li>因为逆向索引的不可变性，所有基于该索引而产生的缓存也不需要更改，因为没有数据变更。</li><li>使用逆向索引可以压缩数据，减少磁盘io及对内存的消耗。</li></ol><h2 id="Segment"><a href="#Segment" class="headerlink" title="Segment"></a>Segment</h2><p>既然逆向索引是不可更改的，那么如何添加新的数据，删除数据以及更新数据？为了解决这个问题，lucene将一个大的逆向索引拆分成了多个小的段segment。每个segment本质上就是一个逆向索引。在lucene中，同时还会维护一个文件commit point，用来记录当前所有可用的segment，当我们在这个commit point上进行搜索时，就相当于在它下面的segment中进行搜索，每个segment返回自己的搜索结果，然后进行汇总返回给用户。</p><p>引入了segment和commit point的概念之后，数据的更新流程如下图：</p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/15513465227404.jpg" alt="15513465227404"></p><ol><li>新增的文档首先会被存放在内存的缓存中</li><li>当文档数足够多或者到达一定时间点时，就会对缓存进行commit<ol><li>生成一个新的segment，并写入磁盘</li><li>生成一个新的commit point，记录当前所有可用的segment</li><li>等待所有数据都已写入磁盘</li></ol></li><li>打开新增的segment，这样我们就可以对新增的文档进行搜索了</li><li>清空缓存，准备接收新的文档</li></ol><h2 id="Elasticsearch如何合理分配索引分片"><a href="#Elasticsearch如何合理分配索引分片" class="headerlink" title="Elasticsearch如何合理分配索引分片"></a>Elasticsearch如何合理分配索引分片</h2><h2 id="为什么要考虑副本分片数量？"><a href="#为什么要考虑副本分片数量？" class="headerlink" title="为什么要考虑副本分片数量？"></a>为什么要考虑副本分片数量？</h2><p>大多数ElasticSearch用户在创建索引时通用会考虑一个重要问题是:我需要创建多少个分片?</p><p>分片分配是个很重要的概念, 很多用户对如何分片都有所疑惑, 当然是为了让分配更合理. 在生产环境中, 随着数据集的增长, 不合理的分配策略可能会给系统的扩展带来严重的问题。</p><p>同时, 这方面的文档介绍也非常少。很多用户只想要明确的答案而不仅仅一个数字范围, 甚至都不关心随意的设置可能带来的问题。</p><p>首先，我们需要了解ES中以下几个名词，是做什么的：</p><p>**集群(cluster):**由一个或多个节点组成, 并通过集群名称与其他集群进行区分</p><p>**节点(node):**单个ElasticSearch实例. 通常一个节点运行在一个隔离的容器或虚拟机中</p><p>**索引(index):**在ES中, 索引是一组文档的集合（就是我们所说的一个日志）</p><p>**分片(shard):**因为ES是个分布式的搜索引擎, 所以索引通常都会分解成不同部分, 而这些分布在不同节点的数据就是分片. ES自动管理和组织分片, 并在必要的时候对分片数据进行再平衡分配, 所以用户基本上不用担心分片的处理细节，一个分片默认最大文档数量是20亿.</p><p>**副本(replica):**ES默认为一个索引创建5个主分片, 并分别为其创建一个副本分片. 也就是说每个索引都由5个主分片成本, 而每个主分片都相应的有一个copy.</p><p>对于分布式搜索引擎来说, 分片及副本的分配将是高可用及快速搜索响应的设计核心.主分片与副本都能处理查询请求, 它们的唯一区别在于只有主分片才能处理索引请求.</p><h2 id="谨慎分片"><a href="#谨慎分片" class="headerlink" title="谨慎分片"></a>谨慎分片</h2><p>副本对搜索性能非常重要, 同时用户也可在任何时候添加或删除副本。额外的副本能给你带来更大的容量, 更高的呑吐能力及更强的故障恢复能力。</p><p>当在ElasticSearch集群中配置好你的索引后, 你要明白在集群运行中你无法调整分片设置。既便以后你发现需要调整分片数量, 你也只能新建创建并对数据进行重新索引(reindex)(虽然reindex会比较耗时, 但至少能保证你不会停机)。</p><p>主分片的配置与硬盘分区很类似, 在对一块空的硬盘空间进行分区时, 会要求用户先进行数据备份, 然后配置新的分区, 最后把数据写到新的分区上。</p><p>在分片时，主要考虑数据集的增长趋势,一定要做到不要过度分片,并不是分片越多越好,从ES社区用户对这个热门主题(分片配置)的分享数据来看, 用户可能认为过度分配是个绝对安全的策略(这里讲的过度分配是指对特定数据集, 为每个索引分配了超出当前数据量(文档数)所需要的分片数)。</p><p><strong>稍有富余是好的, 但过度分配分片却是大错特错. 具体定义多少分片很难有定论, 取决于用户的数据量和使用方式. 100个分片, 即便很少使用也可能是好的;而2个分片, 即便使用非常频繁, 也可能是多余的.</strong></p><p>我们要熟知以下几点内容：</p><ol><li>每分配一个分片，都会有额外的成本。</li><li>每个分片本质上就是一个Lucene索引，因此会消耗相应的文件句柄，内存和CPU资源。</li><li>每个搜索请求会调度到索引的每个分片中。如果分片分散在不同的节点倒是问题不太。但当分片开始竞争相同的硬件资源时，性能便会逐步下降。</li><li>ES使用词频统计来计算相关性。当然这些统计也会分配到各个分片上。如果在大量分片上只维护了很少的数据，则将导致最终的文档相关性较差。</li></ol><h2 id="大规模数据集场景"><a href="#大规模数据集场景" class="headerlink" title="大规模数据集场景"></a>大规模数据集场景</h2><p>如果真的担心数据的快速增长, 我们建议你多关心这条限制: ElasticSearch推荐的最大JVM堆空间是30~32G, 所以把你的分片最大容量限制为30GB, 然后再对分片数量做合理估算. 例如, 你认为你的数据能达到200GB, 我们推荐你最多分配7到8个分片.</p><p>总之, 不要现在就为你可能在三年后才能达到的10TB数据做过多分配. 如果真到那一天, 你也会很早感知到性能变化的.</p><p>尽管本部分并未详细讨论副本分片, 但我们推荐你保持适度的副本数并随时可做相应的增加. 如果你正在部署一个新的环境, 也许你可以参考我们的基于副本的集群的设计.这个集群有三个节点组成, 每个分片只分配了副本. 不过随着需求变化, 你可以轻易的调整副本数量.</p><p>对大数据集, 我们非常鼓励你为索引多分配些分片–当然也要在合理范围内. 上面讲到的每个分片最好不超过30GB的原则依然使用.</p><p>不过, 你最好还是能描述出每个节点上只放一个索引分片的必要性. 在开始阶段, 一个好的方案是根据你的节点数量按照1.5~3倍的原则来创建分片. 例如：<strong>如果你有3个节点, 则推荐你创建的分片数最多不超过9(3x3)个.</strong></p><p>随着数据量的增加,如果你通过集群状态API发现了问题,或者遭遇了性能退化,则只需要增加额外的节点即可. ES会自动帮你完成分片在不同节点上的分布平衡.</p><p>再强调一次, 虽然这里我们暂未涉及副本节点的介绍, 但上面的指导原则依然使用: 是否有必要在每个节点上只分配一个索引的分片. 另外, 如果给每个分片分配1个副本, 你所需的节点数将加倍. 如果需要为每个分片分配2个副本, 则需要3倍的节点数.</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>再次声明, 数据分片也是要有相应资源消耗,并且需要持续投入.</p><p>当索引拥有较多分片时, 为了组装查询结果, ES必须单独查询每个分片(当然并行的方式)并对结果进行合并. 所以高性能IO设备(SSDs)和多核处理器无疑对分片性能会有巨大帮助. 尽管如此, 你还是要多关心数据本身的大小,更新频率以及未来的状态. 在分片分配上并没有绝对的答案, 只希望大家能从本博客中受益.</p><h2 id="分片操作实战"><a href="#分片操作实战" class="headerlink" title="分片操作实战"></a>分片操作实战</h2><h2 id="分片"><a href="#分片" class="headerlink" title="分片"></a>分片</h2><p>正如上文中提到，创建分片，不超过3倍，在本课程中，我们有两个节点，所以我们可以设置6个分片。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在每个节点上执行，分配1个副本6个分片</span></span><br><span class="line">curl -XPUT 10.0.0.51:9200/_template/my_template -d<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#123;    &quot;template&quot;: &quot;*&quot;,</span></span><br><span class="line"><span class="string">     &quot;settings&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;index&quot;: &#123;</span></span><br><span class="line"><span class="string">            &quot;number_of_shards&quot;: 6,</span></span><br><span class="line"><span class="string">            &quot;number_of_replicas&quot;: 1</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">     &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br><span class="line"> </span><br><span class="line">&#123;<span class="string">&quot;acknowledged&quot;</span>:<span class="literal">true</span>&#125;<span class="comment"># 返回结果为true，分片成功</span></span><br><span class="line">&#123;<span class="string">&quot;error&quot;</span>:&#123;<span class="string">&quot;root_cause&quot;</span><span class="comment"># 返回结果为errot，分片失败</span></span><br></pre></td></tr></table></figure><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230506100009239.png" alt="image-20230506100009239"></p><h2 id="测试提交数据"><a href="#测试提交数据" class="headerlink" title="测试提交数据"></a>测试提交数据</h2><p>打开浏览器，访问：<a href="http://10.0.0.51:9100/">http://10.0.0.51:9100/</a></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/15514047580634.jpg" alt="15514047580634"></p><h2 id="验证索引及页面详解"><a href="#验证索引及页面详解" class="headerlink" title="验证索引及页面详解"></a>验证索引及页面详解</h2><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/03/15514059058818.jpg" alt="img"></p><h2 id="主节点和副本节点的区别"><a href="#主节点和副本节点的区别" class="headerlink" title="主节点和副本节点的区别"></a>主节点和副本节点的区别</h2><ul><li>主节点的职责：<ul><li>统计各node节点状态信息、集群状态信息统计、索引的创建和删除、索引分配的管理、关闭node节点等。</li></ul></li><li>副本节点的职责：<ul><li>同步数据，等待机会成为Master（当主节点宕机或者重启时）。</li></ul></li></ul><h1 id="集群检测实战"><a href="#集群检测实战" class="headerlink" title="集群检测实战"></a>集群检测实战</h1><h2 id="检测集群状态"><a href="#检测集群状态" class="headerlink" title="检测集群状态"></a>检测集群状态</h2><p>在linux中，我们可以通过curl命令获取集群的状态.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl –sXGET http://10.0.0.51:9200/_cluster/health?pretty=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>执行结果如下图所示：</p><p>获取到的是一个json格式的返回值，那就可以通过python对其中的信息进行分析，例如对status进行分析，如果等于green(绿色)就是运行在正常，等于yellow(黄色)表示副本分片丢失，red(红色)表示主分片丢失。</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/03/15514075896006.jpg" alt="img"></p><h2 id="python脚本检测"><a href="#python脚本检测" class="headerlink" title="python脚本检测"></a>python脚本检测</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编写python脚本</span></span><br><span class="line">vim es_cluster_status.py</span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="comment">#Author:_DriverZeng_</span></span><br><span class="line"><span class="comment">#Date:2017.02.12</span></span><br><span class="line"> </span><br><span class="line">import smtplib</span><br><span class="line">from email.mime.text import MIMEText</span><br><span class="line">from email.utils import formataddr</span><br><span class="line">import subprocess</span><br><span class="line">body = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="literal">false</span> = <span class="string">&quot;false&quot;</span></span><br><span class="line">clusterip = <span class="string">&quot;10.0.0.51&quot;</span></span><br><span class="line">obj = subprocess.Popen((&quot;curl -sXGET http://&quot;+clusterip+&quot;:<span class="number">9200</span>/_cluster/health?pretty=true&quot;),shell=True, stdout=subprocess.PIPE)</span><br><span class="line">data =  obj.stdout.read()</span><br><span class="line">data1 = eval(data)</span><br><span class="line">status = data1.get(&quot;status&quot;)</span><br><span class="line">if status == &quot;green&quot;:</span><br><span class="line">    print &quot;\<span class="number">033</span>[<span class="number">1</span>;<span class="number">32</span>m 集群运行正常 \<span class="number">033</span>[<span class="number">0</span>m&quot;</span><br><span class="line">elif status == &quot;yellow&quot;:</span><br><span class="line">    print &quot;\<span class="number">033</span>[<span class="number">1</span>;<span class="number">33</span>m 副本分片丢失 \<span class="number">033</span>[<span class="number">0</span>m&quot;</span><br><span class="line">else:</span><br><span class="line">    print &quot;\<span class="number">033</span>[<span class="number">1</span>;<span class="number">31</span>m 主分片丢失 \<span class="number">033</span>[<span class="number">0</span>m&quot;</span><br><span class="line"> </span><br><span class="line"># 执行结果如下</span><br><span class="line">python es_cluster_status.py</span><br><span class="line">集群运行正常</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;副本分片介绍&quot;&gt;&lt;a href=&quot;#副本分片介绍&quot; class=&quot;headerlink&quot; title=&quot;副本分片介绍&quot;&gt;&lt;/a&gt;副本分片介绍&lt;/h1&gt;&lt;h2 id=&quot;什么是副本分片？&quot;&gt;&lt;a href=&quot;#什么是副本分片？&quot; class=</summary>
      
    
    
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/categories/ELK%E9%9B%86%E7%BE%A4/"/>
    
    
    <category term="自动化运维" scheme="https://chenlinbb.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/"/>
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/tags/ELK%E9%9B%86%E7%BE%A4/"/>
    
    <category term="日志收集" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/"/>
    
    <category term="日志分析" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>2.Elasticsearch部署</title>
    <link href="https://chenlinbb.github.io/archives/e46e7dd.html"/>
    <id>https://chenlinbb.github.io/archives/e46e7dd.html</id>
    <published>2024-07-17T15:51:58.150Z</published>
    <updated>2024-07-17T15:52:07.271Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="ELKstack部署及配置"><a href="#ELKstack部署及配置" class="headerlink" title="ELKstack部署及配置"></a>ELKstack部署及配置</h1><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><table><thead><tr><th>公网IP</th><th>内网IP</th><th>主机名</th><th>部署服务</th><th>用途</th></tr></thead><tbody><tr><td>10.0.0.81</td><td>172.16.1.81</td><td>elk01</td><td>elasticsearch、JDK</td><td>存储日志的数据库(2G内存)</td></tr><tr><td>10.0.0.82</td><td>172.16.1.82</td><td>elk02</td><td>elasticsearch、JDK</td><td>存储日志的数据库(2G内存)</td></tr><tr><td>10.0.0.83</td><td>172.16.1.83</td><td>elk03</td><td>Logstash、JDK</td><td>收集日志、过滤日志</td></tr><tr><td>10.0.0.84</td><td>172.16.1.84</td><td>elk04</td><td>Redis、Kibana</td><td>消息队列、日志展示</td></tr><tr><td>10.0.0.85</td><td>172.16.1.85</td><td>nginx01</td><td>nginx、filebeat</td><td>修改nginx日志格式为json收集</td></tr><tr><td>10.0.0.86</td><td>172.16.1.86</td><td>tomcat01</td><td>tomcat、JDK、filebeat</td><td>修改tomcat日志格式为json收集</td></tr></tbody></table><h2 id="安装包准备"><a href="#安装包准备" class="headerlink" title="安装包准备"></a>安装包准备</h2><table><thead><tr><th>安装包名</th><th>用途</th></tr></thead><tbody><tr><td>elasticsearch-5.3.0.rpm</td><td>存储日志的数据库</td></tr><tr><td>elasticsearch-head.tar.gz</td><td>elasticsearch的web界面插件</td></tr><tr><td>logstash-5.3.0.rpm</td><td>日志收集、日志分析工具</td></tr><tr><td>kibana-5.3.0-x86_64.rpm</td><td>日志展示、日志查询工具</td></tr><tr><td>filebeat-5.3.2-x86_64.rpm</td><td>日志收集工具（比Logstash轻量）</td></tr><tr><td>jdk-8u121-linux-x64.tar.gz</td><td>JAVA容器（es、Logstash、tomcat需要）</td></tr><tr><td>nginx-1.10.3.tar.gz</td><td>测试收集nginx日志</td></tr><tr><td>apache-tomcat-8.0.38.tar.gz</td><td>测试收集tomcat日志</td></tr><tr><td>redis-3.2.8.tar.gz</td><td>消息队列工具</td></tr></tbody></table><h2 id="Elasticsearch环境准备"><a href="#Elasticsearch环境准备" class="headerlink" title="Elasticsearch环境准备"></a>Elasticsearch环境准备</h2><p><strong>关闭防火墙</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CentOS6 关闭防火墙</span></span><br><span class="line">/etc/init.d/iptables stop</span><br><span class="line"><span class="comment"># CentOS7 关闭防火墙</span></span><br><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><p><strong>关闭SELINUX</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 临时关闭</span></span><br><span class="line">setenforce 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 永久关闭</span></span><br><span class="line">vim /etc/sysconfig/selinux</span><br><span class="line"><span class="comment"># This file controls the state of SELinux on the system.</span></span><br><span class="line"><span class="comment"># SELINUX= can take one of these three values:</span></span><br><span class="line"><span class="comment">#     enforcing - SELinux security policy is enforced.</span></span><br><span class="line"><span class="comment">#     permissive - SELinux prints warnings instead of enforcing.</span></span><br><span class="line"><span class="comment">#     disabled - No SELinux policy is loaded.</span></span><br><span class="line">SELINUX=disabled    ==&gt;      //原来是enforcing 改成disabled</span><br><span class="line"><span class="comment"># SELINUXTYPE= can take one of these two values:</span></span><br><span class="line"><span class="comment">#     targeted - Targeted processes are protected,</span></span><br><span class="line"><span class="comment">#     mls - Multi Level Security protection.</span></span><br><span class="line">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure><p><strong>设置epel源</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CentOS6 下载epel源</span></span><br><span class="line">wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-6.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># CentOS7 下载epel源</span></span><br><span class="line">wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br></pre></td></tr></table></figure><p><strong>修改时区</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将时区修改为上海时区</span></span><br><span class="line"><span class="built_in">cp</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure><p><strong>设置时间同步</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 同步服务器时间（切记保证集群之间时间一致非常重要）</span></span><br><span class="line">ntpdate time1.aliyun.com</span><br></pre></td></tr></table></figure><h2 id="部署Elasticsearch"><a href="#部署Elasticsearch" class="headerlink" title="部署Elasticsearch"></a>部署Elasticsearch</h2><p>在elk01 和 elk02两台机器分别安装elasticsearch，因为elasticsearch服务运行需要JAVA环境，所以两台服务器都需要安装JAVA环境。</p><p><strong>安装JDK环境</strong></p><p>下载地址: <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解压JDK安装包</span></span><br><span class="line">tar xf jdk-8u121-linux-x64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将JDK安装包移动到安装目录下</span></span><br><span class="line"><span class="built_in">mv</span> jdk1.8.0_121 /usr/local/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 做软链接(方便日后升级)</span></span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/jdk1.8.0_121 /usr/local/jdk1.8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加环境变量</span></span><br><span class="line">vim /etc/profile.d/jdk1.8.sh</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/local/jdk1.8</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/jre/lib/rt.jar:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载环境变量</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否加载成功</span></span><br><span class="line">java -version</span><br><span class="line">java version <span class="string">&quot;1.8.0_121&quot;</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_121-b13)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)</span><br></pre></td></tr></table></figure><p><strong>安装elasticsearch</strong></p><ul><li><p>手动下载rpm包</p><ul><li><p>下载地址: <a href="https://www.elastic.co/downloads/elasticsearch">https://www.elastic.co/downloads/elasticsearch</a></p></li><li><p>本地安装并解决依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum localinstall -y elasticsearch-5.3.0.rpm</span><br></pre></td></tr></table></figure></li></ul></li><li><p>ES官方源安装</p><ul><li><p>更换官方源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/yum.repos.d/es.repo</span><br><span class="line">[elasticsearch-5.x]</span><br><span class="line">name=Elasticsearch repository <span class="keyword">for</span> 5.x packages</span><br><span class="line">baseurl=https://artifacts.elastic.co/packages/5.x/yum</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch</span><br><span class="line">enabled=1</span><br><span class="line">autorefresh=1</span><br><span class="line"><span class="built_in">type</span>=rpm-md</span><br></pre></td></tr></table></figure></li><li><p>安装es并解决依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y elasticsearch</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><strong>修改配置文件</strong></p><ul><li><p>CentOS6</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看配置文件修改部分内容</span></span><br><span class="line">grep <span class="string">&quot;^[a-Z]&quot;</span> /etc/elasticsearch/elasticsearch.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置集群名称（想要其他节点加入同一个集群必须集群名称相同）</span></span><br><span class="line">cluster.name: elk-cluster</span><br><span class="line"></span><br><span class="line"><span class="comment"># 节点名称（通过此配置项来区分集群中的所有节点）</span></span><br><span class="line">node.name: es01</span><br><span class="line"></span><br><span class="line"><span class="comment"># elasticsearch数据存放目录</span></span><br><span class="line">path.data: /data/elk/data</span><br><span class="line"></span><br><span class="line"><span class="comment"># elasticsearch日志存放目录</span></span><br><span class="line">path.logs: /data/elk/logs</span><br><span class="line"></span><br><span class="line"><span class="comment"># CentOS6不支持内存锁功能，所以要关闭内存锁</span></span><br><span class="line">bootstrap.memory_lock: <span class="literal">false</span></span><br><span class="line">bootstrap.system_call_filter: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># elasticsearch监听地址</span></span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># elasticsearch服务端口</span></span><br><span class="line">http.port: 9200</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置所有集群节点IP</span></span><br><span class="line">discovery.zen.ping.unicast.hosts: [<span class="string">&quot;10.0.0.81&quot;</span>, <span class="string">&quot;10.0.0.82&quot;</span>]</span><br></pre></td></tr></table></figure></li><li><p>CentOS7</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑配置文件</span></span><br><span class="line">vim /etc/elasticsearch/elasticsearch.yml</span><br><span class="line"></span><br><span class="line">cluster.name: elk-cluster</span><br><span class="line"><span class="comment">## 设置集群名称（想要其他节点加入同一个集群必须集群名称相同）</span></span><br><span class="line">node.name: es01</span><br><span class="line"><span class="comment">## 节点名称（通过此配置项来区分集群中的所有节点）</span></span><br><span class="line">path.data: /data/elk/data</span><br><span class="line"><span class="comment">## elasticsearch数据存放目录</span></span><br><span class="line">path.logs: /data/elk/logs</span><br><span class="line"><span class="comment">## elasticsearch日志存放目录</span></span><br><span class="line">bootstrap.memory_lock: <span class="literal">true</span>/false</span><br><span class="line"><span class="comment">## 内存锁设置（在CentOS7中支持内存锁并且要修改启动脚本,不使用：false）</span></span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line"><span class="comment">## elasticsearch监听地址</span></span><br><span class="line">http.port: 9200</span><br><span class="line"><span class="comment">## elasticsearch服务端口</span></span><br><span class="line">discovery.zen.ping.unicast.hosts: [<span class="string">&quot;10.0.0.81&quot;</span>, <span class="string">&quot;10.0.0.82&quot;</span>]</span><br><span class="line"><span class="comment">## 配置所有集群节点IP</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看配置文件修改部分内容(CentOS7中配置)</span></span><br><span class="line">grep <span class="string">&quot;^[a-Z]&quot;</span> /etc/elasticsearch/elasticsearch.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改内存限制（如果有则去掉此行注释）</span></span><br><span class="line">LimitMEMLOCK=infinity</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改启动脚本</span></span><br><span class="line">vim /usr/lib/systemd/system/elasticsearch.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载启动脚本</span></span><br><span class="line">systemctl reload-daemon</span><br></pre></td></tr></table></figure></li></ul><p><strong>创建目录并授权</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建数据目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /data/es/&#123;data,<span class="built_in">log</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 授权</span></span><br><span class="line"><span class="built_in">chown</span> -R elasticsearch.elasticsearch /data/</span><br></pre></td></tr></table></figure><p><strong>优化文件描述符</strong></p><ul><li><p>CentOS7</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑limit文件</span></span><br><span class="line">vim /etc/security/limits.conf</span><br><span class="line">* soft memlock unlimited</span><br><span class="line">* hard memlock unlimited</span><br><span class="line">* soft nofile 131072</span><br><span class="line">* hard nofile 131072</span><br></pre></td></tr></table></figure></li><li><p>CentOS6</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑子配置文件</span></span><br><span class="line">vim /etc/security/limits.d/90-nproc.conf</span><br><span class="line">*          soft    <span class="built_in">nproc</span>     2048</span><br><span class="line">root       soft    <span class="built_in">nproc</span>     unlimited</span><br></pre></td></tr></table></figure></li></ul><p><strong>优化文件描述符</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在配置文件最后一行后添加</span></span><br><span class="line">vim /etc/security/limits.conf</span><br><span class="line">* soft memlock unlimited</span><br><span class="line">* hard memlock unlimited</span><br><span class="line">* soft nofile 131072</span><br><span class="line">* hard nofile 131072</span><br></pre></td></tr></table></figure><p><strong>设置JVM最大最小内存限制</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑配置文件</span></span><br><span class="line">vim /etc/elasticsearch/jvm.options</span><br><span class="line">-Xms1g</span><br><span class="line">-Xmx1g</span><br></pre></td></tr></table></figure><p><strong>启停elasticsearch</strong></p><ul><li><p>CentOS6</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动、停止elasticsearch</span></span><br><span class="line">/etc/init.d/elasticsearch start</span><br><span class="line">/etc/init.d/elasticsearch stop</span><br></pre></td></tr></table></figure></li><li><p>CentOS7</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动、停止elasticsearch</span></span><br><span class="line">systemctl start elasticsearch</span><br><span class="line">systemctl stop elasticsearch</span><br></pre></td></tr></table></figure></li><li><p>查看进程和端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看启动进程</span></span><br><span class="line">ps -ef|grep java</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看端口</span></span><br><span class="line">netstat -lntup</span><br><span class="line">tcp        0      0 :::9200                     :::*                        LISTEN      10872/java</span><br><span class="line">tcp        0      0 :::9300                     :::*                        LISTEN      10872/java</span><br></pre></td></tr></table></figure></li><li><p>PS：如果服务没有启动就修改 内存所true改为false</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/elasticsearch/elasticsearch.yml</span><br><span class="line">bootstrap.memory_lock: <span class="literal">true</span> ---&gt; <span class="literal">false</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>验证启动elasticsearch后的页面</strong></p><p>打开浏览器访问地址：<a href="http://10.0.0.81:9200/">http://10.0.0.81:9200/</a></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/QQ%E5%9B%BE%E7%89%8720230427200104.jpg" alt="QQ图片20230427200104"></p><p><strong>其他节点安装并加入集群</strong></p><p>安装其他节点，步骤和上面一样，修改配置文件时，直接将elk01节点的配置文件scp（拷贝）过去，然后在配置文件中讲节点名称修改后启动即可。</p><p><strong>发送修改好的配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 发送配置文件到其他节点</span></span><br><span class="line">scp /etc/elasticsearch/elasticsearch.yml  172.16.1.82:/etc/elasticsearch/</span><br><span class="line">scp /etc/elasticsearch/jvm.options 172.16.1.82:/etc/elasticsearch/</span><br><span class="line">scp /etc/security/limits.conf 172.16.1.82:/etc/security/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改其他节点配置文件</span></span><br><span class="line">vim /etc/elasticsearch/elasticsearch.yml</span><br><span class="line"></span><br><span class="line"><span class="comment">#此行节点名称唯一即可</span></span><br><span class="line">node.name: es02</span><br></pre></td></tr></table></figure><p><strong>创建目录并授权</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建数据目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /data/es/&#123;data,<span class="built_in">log</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 授权</span></span><br><span class="line"><span class="built_in">chown</span> -R elasticsearch.elasticsearch /data/</span><br></pre></td></tr></table></figure><p><strong>启停elasticsearch</strong></p><ul><li><p>CentOS6</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动、停止elasticsearch</span></span><br><span class="line">/etc/init.d/elasticsearch start</span><br><span class="line">/etc/init.d/elasticsearch stop</span><br></pre></td></tr></table></figure></li><li><p>CentOS7</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动、停止elasticsearch</span></span><br><span class="line">systemctl start elasticsearch</span><br><span class="line">systemctl stop elasticsearch</span><br></pre></td></tr></table></figure></li><li><p>查看进程和端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看启动进程</span></span><br><span class="line">ps -ef|grep java</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看端口</span></span><br><span class="line">netstat -lntup</span><br><span class="line">tcp        0      0 :::9200                     :::*                        LISTEN      10872/java</span><br><span class="line">tcp        0      0 :::9300                     :::*                        LISTEN      10872/java</span><br></pre></td></tr></table></figure></li><li><p>PS：如果服务没有启动就修改 内存所true改为false</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/elasticsearch/elasticsearch.yml</span><br><span class="line">bootstrap.memory_lock: <span class="literal">true</span> ---&gt; <span class="literal">false</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>验证启动elasticsearch后的页面</strong></p><p>打开浏览器访问地址：<a href="http://10.0.0.82:9200/">http://10.0.0.82:9200/</a></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/QQ%E5%9B%BE%E7%89%8720230427210915.png" alt="QQ图片20230427210915"></p><h1 id="Elasticsearch的head插件"><a href="#Elasticsearch的head插件" class="headerlink" title="Elasticsearch的head插件"></a>Elasticsearch的head插件</h1><h2 id="安装elasticsearch插件"><a href="#安装elasticsearch插件" class="headerlink" title="安装elasticsearch插件"></a>安装elasticsearch插件</h2><p>插件是为了完成不同的功能，官方提供了一些插件但大部分是收费的，另外也有一些开发爱好者提供的插件，可以实现对elasticsearch集群的状态监控与管理配置等功能，我们现在要安装的是Elasticsearch的head插件，此插件提供elasticsearch的web界面功能。</p><p>安装Elasticsearch的head插件时，要安装npm，npm的全称是Node Package Manager，是随同NodeJS一起安装的包管理和分发工具，它很方便让JavaScript开发者下载、安装、上传以及管理已经安装的包。</p><p>在Elasticsearch 5.x版本以后不再支持直接安装head插件，而是需要通过启动一个服务方式。</p><p>Github地址：<a href="https://github.com/mobz/elasticsearch-head">https://github.com/mobz/elasticsearch-head</a></p><h2 id="安装执行流程"><a href="#安装执行流程" class="headerlink" title="安装执行流程"></a>安装执行流程</h2><p><strong>安装npm</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装npm（只需要在一个节点安装即可，如果前端还有nginx做反向代理可以每个节点都装）</span></span><br><span class="line">yum install -y npm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看版本</span></span><br><span class="line">npm --version</span><br><span class="line">8.1.0</span><br></pre></td></tr></table></figure><p><strong>安装git</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装git命令</span></span><br><span class="line">yum install -y git</span><br></pre></td></tr></table></figure><p><strong>安装nodejs</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载nodejs</span></span><br><span class="line">wget https://nodejs.org/dist/v16.13.0/node-v16.13.0-linuxx64.tar.xz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压node</span></span><br><span class="line">tar xf node-v16.13.0-linux-x64.tar.xz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建安装目录</span></span><br><span class="line"><span class="built_in">mkdir</span> /app</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移动到安装目录</span></span><br><span class="line"><span class="built_in">mv</span> node-v16.13.0-linux-x64 /app/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 做软连接</span></span><br><span class="line"><span class="built_in">ln</span> -s /app/node-v16.13.0-linux-x64/ /app/node</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加环境变量</span></span><br><span class="line">vim /etc/profile.d/node.sh</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/app/node/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#生效环境变量</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><p><strong>安装elasticsearch-head插件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#进入下载head插件代码目录</span></span><br><span class="line"><span class="built_in">cd</span> /usr/local/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从GitHub上克隆代码到本地</span></span><br><span class="line"><span class="built_in">clone</span> git://github.com/mobz/elasticsearch-head.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 克隆完成后，进入elasticsearch插件目录</span></span><br><span class="line"><span class="built_in">cd</span> elasticsearch-head/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更换npm源</span></span><br><span class="line">npm config <span class="built_in">set</span> registry=https://registry.npmmirror.com/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前的npm镜像源</span></span><br><span class="line">npm config get registry</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除缓存</span></span><br><span class="line">npm cache clean -f</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用npm安装n模块（不同的项目js脚本所需的node版本可能不同，所以就需要node版本管理工具）</span></span><br><span class="line">npm install -g n</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装最新版本n模块</span></span><br><span class="line">n stable</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装n模块遇到报错SSL认证问题</span></span><br><span class="line">npm config <span class="built_in">set</span> strict-ssl <span class="literal">false</span><span class="comment"># 取消npm的ssl验证</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装grunt</span></span><br><span class="line">npm install grunt -save --no-fund</span><br><span class="line"><span class="comment">## PS:报错原因缺少bzip2</span></span><br><span class="line"><span class="comment">## 解决方法:yum install -y bzip2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 后台启动head插件（切记，必须在插件目录下执行启动命令）</span></span><br><span class="line">npm run start &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证端口是否启动成功</span></span><br><span class="line">netstat -lntup</span><br><span class="line">tcp        0      0 0.0.0.0:9100         0.0.0.0:*        LISTEN      11293/grunt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在elasticsearch配置文件最后一行后添加，开启跨域访问支持</span></span><br><span class="line">vim /etc/elasticsearch/elasticsearch.yml</span><br><span class="line">http.cors.enabled: <span class="literal">true</span></span><br><span class="line">http.cors.allow-origin: <span class="string">&quot;*&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启elasticsearch</span></span><br><span class="line">/etc/init.d/elasticsearch restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 浏览器访问</span></span><br><span class="line">10.0.0.51:9100</span><br></pre></td></tr></table></figure><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230427215339229.png" alt="image-20230427215339229"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230427215350342.png" alt="image-20230427215350342"></p><p>​    <strong>故障解析</strong></p><ul><li><p>故障：连接不上</p><ul><li>原因是没有打开跨域访问</li></ul></li><li><p>解决方法：</p><ul><li><p>/etc/elasticsearch/elasticsearch.yml在最后一行下面追加</p><ul><li>http.cors.enabled: true</li><li>http.cors.allow-origin: “*”</li></ul></li><li><p>重启服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart elasticsearch.service</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230427215421518.png" alt="image-20230427215421518"></p><h2 id="模拟提交数据"><a href="#模拟提交数据" class="headerlink" title="模拟提交数据"></a>模拟提交数据</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230427215436856.png" alt="image-20230427215436856"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230427215440425.png" alt="image-20230427215440425"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230427215737441.png" alt="image-20230427215737441"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230427215746771.png" alt="image-20230427215746771"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;ELKstack部署及配置&quot;&gt;&lt;a href=&quot;#ELKstack部署及配置&quot; class=&quot;headerlink&quot; title=&quot;ELKstack部署及配置&quot;&gt;&lt;/a&gt;ELKstack部署及配置&lt;/h1&gt;&lt;h2 id=&quot;环境准备&quot;&gt;&lt;a</summary>
      
    
    
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/categories/ELK%E9%9B%86%E7%BE%A4/"/>
    
    
    <category term="自动化运维" scheme="https://chenlinbb.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/"/>
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/tags/ELK%E9%9B%86%E7%BE%A4/"/>
    
    <category term="日志收集" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/"/>
    
    <category term="日志分析" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>12.Kibana深入-Dev Tools及Lucene语法</title>
    <link href="https://chenlinbb.github.io/archives/2abd6686.html"/>
    <id>https://chenlinbb.github.io/archives/2abd6686.html</id>
    <published>2024-07-17T15:51:58.149Z</published>
    <updated>2024-07-17T15:52:07.264Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="Dev-Tools介绍"><a href="#Dev-Tools介绍" class="headerlink" title="Dev Tools介绍"></a>Dev Tools介绍</h1><p>Dev Tools 页面包含开发工具，您可以使用这些Dev Tools与Kibana中的数据进行交互。</p><p>原先的交互式控制台Sense，使用户方便的通过浏览器直接与Elasticsearch进行交互。从Kibana 5开始改名并直接内建在Kibana，就是Dev Tools选项。</p><p>Kibana提供了Console UI来通过REST API与Elasticsearch交互，Console位于Kibana的Dev Tools栏下。Console有两个主要区域，左边是编辑区用来书写REST请求，右边用来显示请求返回结果。</p><h2 id="自动提示"><a href="#自动提示" class="headerlink" title="自动提示"></a>自动提示</h2><p>Console提供了自动提示功能，可以为你提供API、方法等提示。编写完请求后点击绿色执行按钮，会在右侧面板给出请求结果。执行按钮旁边的“小扳手”按钮，可以将请求copy转化为curl(copy)，还有一个功能就是自动缩紧格式(Auto Indent)。如果对已经锁进好的代码进行Auto Indent，Console会将请求体(body)缩进在一行中。</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550444090374.jpg" alt="img"></p><h2 id="多请求查询"><a href="#多请求查询" class="headerlink" title="多请求查询"></a>多请求查询</h2><p>Console支持多请求查询，只需要你将左侧选中执行即可。Console会一次请求Elasticsearch返回结果，多个请求也允许一下复制curl，非常方便。</p><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p>Console提供了一些快捷键，来提高使用效率。</p><table><thead><tr><th>快捷键</th><th>说明</th></tr></thead><tbody><tr><td>ctrl/cmd + enter</td><td>提交请求</td></tr><tr><td>ctrl/cmd + alt/option + L</td><td>叠起/打开当前代码</td></tr><tr><td>ctrl/cmd + up/down</td><td>跳到上一个或下一个执行块</td></tr><tr><td>ctrl/cmd + I</td><td>缩进格式</td></tr><tr><td>esc</td><td>关闭当前提示框</td></tr></tbody></table><h2 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h2><p>点击Console的顶部有History，会显示最近500条请求成功的历史纪录。左侧显示历史纪录，点击其中一条后会在右侧显示。</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550446754709.jpg" alt="img"></p><p>点击apply会自动copy到下面的Console编辑区，点击Clear会清空所有历史请求。</p><h2 id="配置-Setting"><a href="#配置-Setting" class="headerlink" title="配置(Setting)"></a>配置(Setting)</h2><p>Console提供了一些基础配置，比如字体大小等。</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550447610862.jpg" alt="img"></p><h2 id="关闭Console-Setting"><a href="#关闭Console-Setting" class="headerlink" title="关闭Console(Setting)"></a>关闭Console(Setting)</h2><p>如果不想使用Console可以在$KIBANA/config/kibana.yml中设置：</p><p>console.enabled: false</p><p>这样就关闭了Console了，不过重启Kibana过程比较慢，需要几分钟。</p><h1 id="Dev-Tools常用查询命令"><a href="#Dev-Tools常用查询命令" class="headerlink" title="Dev Tools常用查询命令"></a>Dev Tools常用查询命令</h1><h2 id="上传日志"><a href="#上传日志" class="headerlink" title="上传日志"></a>上传日志</h2><p>不管在学任何开发语言，我们第一个学的都是”Hello World”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PUT hello_world</span><br></pre></td></tr></table></figure><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550449732303.jpg" alt="img"></p><h2 id="match-all查询所有索引包括内容"><a href="#match-all查询所有索引包括内容" class="headerlink" title="match_all查询所有索引包括内容"></a>match_all查询所有索引包括内容</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET _search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550452503897.jpg" alt="img"></p><h2 id="查询所有索引名称"><a href="#查询所有索引名称" class="headerlink" title="查询所有索引名称"></a>查询所有索引名称</h2><p>也就是查看一下我们在ES中有多少个日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET _cat/indices</span><br></pre></td></tr></table></figure><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550453257958.jpg" alt="img"></p><h2 id="查询集群节点是否禁用swap"><a href="#查询集群节点是否禁用swap" class="headerlink" title="查询集群节点是否禁用swap"></a>查询集群节点是否禁用swap</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">GET _nodes?filter_path=**.mlockall</span><br><span class="line"> </span><br><span class="line"><span class="comment">#结果</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;nodes&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;by_wSvKYQ5ycGlHxW0UWoQ&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;process&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;mlockall&quot;</span>: <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;iYV6jXoFQsaJJCTBXtaoWA&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;process&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;mlockall&quot;</span>: <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15552318215253.jpg" alt="img"></p><h2 id="查询集群节点最大文件描述符"><a href="#查询集群节点最大文件描述符" class="headerlink" title="查询集群节点最大文件描述符"></a>查询集群节点最大文件描述符</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">GET _nodes/stats/process?filter_path=**.max_file_descriptors</span><br><span class="line"> </span><br><span class="line"><span class="comment">#结果</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;nodes&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;by_wSvKYQ5ycGlHxW0UWoQ&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;process&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;max_file_descriptors&quot;</span>: 131072</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;iYV6jXoFQsaJJCTBXtaoWA&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;process&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;max_file_descriptors&quot;</span>: 131072</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15552319348330.jpg" alt="img"></p><h2 id="集群分片情况查询"><a href="#集群分片情况查询" class="headerlink" title="集群分片情况查询"></a>集群分片情况查询</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET _cat/shards</span><br></pre></td></tr></table></figure><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15552320606133.jpg" alt="img"></p><h1 id="Lucene-语法介绍"><a href="#Lucene-语法介绍" class="headerlink" title="Lucene 语法介绍"></a>Lucene 语法介绍</h1><h2 id="全文搜索"><a href="#全文搜索" class="headerlink" title="全文搜索"></a>全文搜索</h2><p>在搜索栏输入404，会返回所有字段值中包含404的日志</p><p>使用双引号包起来作为一个短语搜索<br><code>&quot;like Gecko&quot;</code></p><h2 id="字段搜索"><a href="#字段搜索" class="headerlink" title="字段搜索"></a>字段搜索</h2><p>也可以按页面左侧显示的字段搜索<br>限定字段全文搜索：<code>field:value</code><br>精确搜索：关键字加上双引号<code>filed:&quot;value&quot;</code><br><code>status:404</code> 搜索http状态码为404的日志</p><p>字段本身是否存在<br><code>_exists_：http</code>：返回结果中需要有http字段<br><code>_missing_：http</code>：不能含有http字段</p><h2 id="通配符搜索"><a href="#通配符搜索" class="headerlink" title="通配符搜索"></a>通配符搜索</h2><p><code>?</code> 匹配单个字符<br><code>*</code> 匹配0到多个字符</p><p>可以看到两次搜索内容左上角，第一次是109 hits，第二次是182 hits</p><p>第一次匹配到的内容只有109条，第二次有182条。</p><p><code>?</code> <code>*</code> 不能用作第一个字符，例如：<code>?status</code> <code>*status</code></p><h2 id="正则搜索"><a href="#正则搜索" class="headerlink" title="正则搜索"></a>正则搜索</h2><p>es支持部分正则功能,性能较差<br><code>domain:/adm?n.vantage(fx[prime]).com.cn/</code></p><h2 id="模糊搜索"><a href="#模糊搜索" class="headerlink" title="模糊搜索"></a>模糊搜索</h2><p><code>quikc~</code> <code>brwn~</code> <code>foks~</code><br><code>~</code>:在一个单词后面加上~启用模糊搜索，可以搜到一些拼写错误的单词</p><p><code>first~</code> 这种也能匹配到 frist</p><p>还可以设置编辑距离（整数），指定需要多少相似度<br><code>cromm~1</code> 会匹配到 from 和 chrome<br>默认2，越大越接近搜索的原始值，设置为1基本能搜到80%拼写错误的单词</p><h2 id="近似搜索"><a href="#近似搜索" class="headerlink" title="近似搜索"></a>近似搜索</h2><p>在短语后面加上<code>~</code>，可以搜到被隔开或顺序不同的单词<br><code>&quot;where select&quot;~5</code> 表示 select 和 where 中间可以隔着5个单词，可以搜到 select password from users where id=1</p><h2 id="范围搜索"><a href="#范围搜索" class="headerlink" title="范围搜索"></a>范围搜索</h2><p>数值/时间/IP/字符串<br>类型的字段可以对某一范围进行查询<br><code>length:[100 TO 200]</code><br><code>sip:[&quot;172.24.20.110&quot; TO &quot;172.24.20.140&quot;]</code><br><code>date:&#123;&quot;now-6h&quot; TO &quot;now&quot;&#125;</code><br><code>tag:&#123;b TO e&#125;</code> 搜索b到e中间的字符<br><code>count:[10 TO *] *</code> 表示一端不限制范围<br><code>count:[1 TO 5&#125; [ ]</code> 表示端点数值包含在范围内，{ } 表示端点数值不包含在范围内，可以混合使用，此语句为1到5，包括1，不包括5<br>可以简化成以下写法：<br><code>age:&gt;10</code><br><code>age:&lt;=10</code><br><code>age:(&gt;=10 AND &lt;20)</code></p><h2 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h2><p><code>quick^2 fox</code><br>使用使一个词语比另一个搜索优先级更高，默认为1，可以为0~1之间的浮点数，来降低优先级</p><h2 id="逻辑操作"><a href="#逻辑操作" class="headerlink" title="逻辑操作"></a>逻辑操作</h2><p><code>AND</code><br><code>OR</code></p><p><code>+</code>：搜索结果中必须包含此项<br><code>-</code>：不能含有此项<br><code>+apache -jakarta test aaa bbb</code>：结果中必须存在apache，不能有jakarta，剩余部分尽量都匹配到</p><h2 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h2><p><code>(elasticsearch OR logstash) AND elasticsearch</code></p><h2 id="字段分组"><a href="#字段分组" class="headerlink" title="字段分组"></a>字段分组</h2><p><code>title:(+return +&quot;pink panther&quot;)</code><br><code>host:(baidu OR qq OR google) AND host:(com OR cn)</code></p><h2 id="转译特殊字符"><a href="#转译特殊字符" class="headerlink" title="转译特殊字符"></a>转译特殊字符</h2><p><code>+ - = &amp;&amp; || &gt; &lt; ! ( ) &#123; &#125; [ ] ^ &quot; ~ * ? : \ /</code></p><p>以上字符当作值搜索的时候需要用\转义<br><code>\(1\+1\)\=2</code>用来查询(1+1)=2</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;Dev-Tools介绍&quot;&gt;&lt;a href=&quot;#Dev-Tools介绍&quot; class=&quot;headerlink&quot; title=&quot;Dev Tools介绍&quot;&gt;&lt;/a&gt;Dev Tools介绍&lt;/h1&gt;&lt;p&gt;Dev Tools 页面包含开发工具，您可</summary>
      
    
    
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/categories/ELK%E9%9B%86%E7%BE%A4/"/>
    
    
    <category term="自动化运维" scheme="https://chenlinbb.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/"/>
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/tags/ELK%E9%9B%86%E7%BE%A4/"/>
    
    <category term="日志收集" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/"/>
    
    <category term="日志分析" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>11.Kibana深入-Timelion画图实现系统监控</title>
    <link href="https://chenlinbb.github.io/archives/3f8efe96.html"/>
    <id>https://chenlinbb.github.io/archives/3f8efe96.html</id>
    <published>2024-07-17T15:51:58.147Z</published>
    <updated>2024-07-17T15:52:07.265Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="什么是Timelion？"><a href="#什么是Timelion？" class="headerlink" title="什么是Timelion？"></a>什么是Timelion？</h1><p>Timelion使你可以轻松获得以下问题的答案：</p><ol><li><p>随着时间的推移，每个唯一的用户会查看多少个页面?</p></li><li><p>这个星期五和上周五之间的交通量有什么不同？</p></li><li><p>今天有多少日本人口来到我的网站？</p></li><li><p>标准普尔500指数的10日均线是多少？</p></li><li><p>过去两年收到的所有搜索请求的累计总和是多少？</p><p>　　<code>Timelion</code>是Kibana时间序列的可视化工具。时间序列可视化是可视化的，以时间顺序分析数据。<code>Timelion</code>可用于绘制二维图形，时间绘制在x轴上。</p><p>　　与使用简单的条形图或线条可视化相比有什么优势？<code>Timelion</code>采取不同的方法。使用<code>Timelion</code>特定语法，您通过将功能链接在一起来定义图形，而不是使用可视化编辑器创建图表。该语法启用了经典点系列图不提供的一些功能，如将不同索引或数据源的数据绘制到一个图形中。</p></li></ol><p>但是在使用<code>Timelion</code>之前，我们需要下载并安装<code>Metricbeat</code></p><h1 id="Metricbeat介绍及部署"><a href="#Metricbeat介绍及部署" class="headerlink" title="Metricbeat介绍及部署"></a>Metricbeat介绍及部署</h1><h2 id="Metricbeat介绍"><a href="#Metricbeat介绍" class="headerlink" title="Metricbeat介绍"></a>Metricbeat介绍</h2><p><code>Metricbeat</code>可以定期收集操作系统和服务器的运行指标（CPU，内存，硬盘，IO,读写速度，进程等等），<code>Metricbeat</code>可以将收集到的指标和数据发送到你指定的输出，比如：elasticsearch，logstash,redis等等，最终达成监视服务器的目标。</p><h2 id="Metricbeat部署及配置"><a href="#Metricbeat部署及配置" class="headerlink" title="Metricbeat部署及配置"></a>Metricbeat部署及配置</h2><p>因为我们使用的ES和Kibana是5版本的，所以我们需要下载5版本的<code>Metricbeat</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># RPM包下载</span></span><br><span class="line">wget https://artifacts.elastic.co/downloads/beats/metricbeat/metricbeat-5.3.3-x86_64.rpm</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 源码包下载</span></span><br><span class="line">wget https://artifacts.elastic.co/downloads/beats/metricbeat/metricbeat-5.3.3-linux-x86_64.tar.gz</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 安装Metricbeat</span></span><br><span class="line">yum localinstall -y metricbeat-5.3.3-x86_64.rpm</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">vim /etc/metricbeat/metricbeat.yml</span><br><span class="line"><span class="comment">#==========================  Modules configuration ============================</span></span><br><span class="line">metricbeat.modules:</span><br><span class="line"> </span><br><span class="line"><span class="comment">#------------------------------- System Module -------------------------------</span></span><br><span class="line">- module: system</span><br><span class="line">  metricsets:</span><br><span class="line">    <span class="comment"># CPU stats</span></span><br><span class="line">    - cpu</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># System Load stats</span></span><br><span class="line">    - load</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># Per CPU core stats</span></span><br><span class="line">    <span class="comment">#- core</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># IO stats</span></span><br><span class="line">    <span class="comment">#- diskio</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># Per filesystem stats</span></span><br><span class="line">    - filesystem</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># File system summary stats</span></span><br><span class="line">    - fsstat</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># Memory stats</span></span><br><span class="line">    - memory</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># Network stats</span></span><br><span class="line">    - network</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># Per process stats</span></span><br><span class="line">    - process</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># Sockets (linux only)</span></span><br><span class="line">    <span class="comment">#- socket</span></span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  period: 1m</span><br><span class="line">  processes: [<span class="string">&#x27;.*&#x27;</span>]</span><br><span class="line"><span class="comment">#================================ Outputs =====================================</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Configure what outputs to use when sending the data collected by the beat.</span></span><br><span class="line"><span class="comment"># Multiple outputs may be used.</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#-------------------------- Elasticsearch output ------------------------------</span></span><br><span class="line">output.elasticsearch:</span><br><span class="line">  <span class="comment"># Array of hosts to connect to.</span></span><br><span class="line">  hosts: [<span class="string">&quot;10.0.0.51:9200&quot;</span>]</span><br><span class="line"> </span><br><span class="line">  <span class="comment"># Optional protocol and basic auth credentials.</span></span><br><span class="line">  <span class="comment">#protocol: &quot;https&quot;</span></span><br><span class="line">  <span class="comment">#username: &quot;elastic&quot;</span></span><br><span class="line">  <span class="comment">#password: &quot;changeme&quot;</span></span><br><span class="line">  <span class="comment">#要加载仪表板，可以在metricbeat设置中启用仪表板加载。当仪表板加载被启用时，Metricbeat使用Kibana API来加载样本仪表板。只有当Metricbeat启动时，才会尝试仪表板加载。</span></span><br><span class="line">  <span class="comment"># 设置kibana服务地址</span></span><br><span class="line">  setup.kibana.host: <span class="string">&quot;10.0.0.54:5601&quot;</span></span><br><span class="line">  <span class="comment"># 加载默认的仪表盘样式</span></span><br><span class="line">  setup.dashboards.enabled: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 设置如果存在模板，则不覆盖原有模板</span></span><br><span class="line">  setup.template.overwrite: <span class="literal">false</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 启动Metricbeat(CentOS6)</span></span><br><span class="line">/etc/init.d/metricbeat start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Metricbeat(CentOS7)</span></span><br><span class="line">systemctl start metricbeat</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 检查metricbeat是否正常运行（返回索引对应内容）</span></span><br><span class="line">curl -XGET <span class="string">&#x27;http://10.0.0.51:9200/metricbeat-*/_search?pretty&#x27;</span></span><br></pre></td></tr></table></figure><p>结果如下：</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550340596673.jpg" alt="img"></p><p>打开浏览器，访问：<a href="http://10.0.0.51:9100/">http://10.0.0.51:9100/</a></p><p>查看Metricbeat索引</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550342777983.jpg" alt="img"></p><p>打开浏览器，访问：<a href="http://10.0.0.54:5601/">http://10.0.0.54:5601/</a></p><p>添加<code>metricbeat-*</code>索引</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550343419410.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550343837973.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550344211466.jpg" alt="img"></p><p>创建后，即可在<code>Discover</code>中看到<code>Metricbeat</code>信息</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550344772506.jpg" alt="img"></p><h1 id="Timelion使用Metricbeat"><a href="#Timelion使用Metricbeat" class="headerlink" title="Timelion使用Metricbeat"></a>Timelion使用Metricbeat</h1><h2 id="创建时间序列可视化"><a href="#创建时间序列可视化" class="headerlink" title="创建时间序列可视化"></a>创建时间序列可视化</h2><p>使用Metricbeat的时间序列数据带你浏览Timelion提供的一些函数。</p><p>创建第一个可视化将比较在用户空间中花费的CPU时间与一小时的结果偏移量的实时百分比，为了创建这个可视化，我们需要创建两个Timelion表达式，一个是system.cpu.user.pct的实时平均数，另一个是1小时的平均偏移量。</p><p>首先，需要在第一个表达式中定义<code>index</code>、<code>timefield</code>和<code>metric</code>，并在<code>Timelion</code>查询栏中输入以下表达式。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;avg:system.cpu.user.pct&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550356801404.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550357549139.jpg" alt="img"></p><p>现在需要添加另一个具有前一小时数据的系列，以便进行比较，为此，你必须向.es()函数添加一个<code>offset</code>参数，<code>offset</code>将用日期表达式偏移序列检索。对于本例，你希望将数据偏移一小时，并使用日期表达式-1h，使用逗号分隔这两个系列，在Timelion查询栏中输入以下表达式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;avg:system.cpu.user.pct&#x27;</span>), .es(offset=-1h,index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;avg:system.cpu.user.pct&#x27;</span>)</span><br></pre></td></tr></table></figure><p>很难区分这两个系列，自定义标签以便于区分它们，你总是可以将.label()函数附加到任何表达式以添加自定义标签，在Timelion查询栏中输入以下表达式来定制标签：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.es(offset=-1h,index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;avg:system.cpu.user.pct&#x27;</span>).label(<span class="string">&#x27;last hour&#x27;</span>), .es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;avg:system.cpu.user.pct&#x27;</span>).label(<span class="string">&#x27;current hour&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550363220941.jpg" alt="img"></p><p>保存完整的Timelion工作表作为Metricbeat示例，作为一种最佳实践，你应该在完成本教程的过程中保存对本工作表所做的任何重要更改。</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550365116479.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550365590002.jpg" alt="img"></p><h2 id="定制和格式化可视化"><a href="#定制和格式化可视化" class="headerlink" title="定制和格式化可视化"></a>定制和格式化可视化</h2><p>Timelion有很多定制选项，你几乎可以使用可用的函数对图表的每个方面进行个性化设置，执行以下修改。</p><ol><li>添加一个标题</li><li>更改系列类型</li><li>改变一个系列的颜色和不透明度</li><li>修改图例</li></ol><p>之前用两个系列创建了一个时间轴图表，让我们继续定制这个可视化。</p><p>在进行任何其他修改之前，将<code>title()</code>函数附加到表达式的末尾，以添加具有有意义名称的标题，这将使不熟悉的用户更容易理解可视化目的。对于这个示例，将<code>title(&#39;CPU usage&#39;)</code>添加到原始系列中，在Timelion 查询栏中使用以下表达式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.es(offset=-1h,index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;avg:system.cpu.user.pct&#x27;</span>).label(<span class="string">&#x27;last hour&#x27;</span>), .es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;avg:system.cpu.user.pct&#x27;</span>).label(<span class="string">&#x27;current hour&#x27;</span>).title(<span class="string">&#x27;CPU usage&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550368468143.jpg" alt="img"></p><p>为了进一步区分过去一小时系列，你将把图表类型更改为区域图表，为了做到这一点，你需要使用<code>.lines()</code>函数来定制折线图，你将设置fill和width参数，分别设置折线图的填充和折线宽度。在本例中，你将通过添加<code>.lines(fill=1,width=0.5)</code>将填充级别设置为1，边框宽度设置为0.5，在Timelion查询栏中使用以下表达式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.es(offset=-1h,index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;avg:system.cpu.user.pct&#x27;</span>).label(<span class="string">&#x27;last hour&#x27;</span>).lines(fill=1,width=0.5), .es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;avg:system.cpu.user.pct&#x27;</span>).label(<span class="string">&#x27;current hour&#x27;</span>).title(<span class="string">&#x27;CPU usage&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550370135956.jpg" alt="img"></p><p>让我们给这些系列涂上颜色，使当前的小时系列比过去一个小时系列流行一点，<code>color()</code>函数可用于更改任何系列的颜色，并接受标准颜色名称、十六进制值或分组系列的颜色模式。对于这个示例，你将在过去一个小时使用<code>.color(gray)</code>，而在当前小时使用<code>.color(#1E90FF)</code>，在Timelion查询栏中输入以下表达式进行调整：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.es(offset=-1h,index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;avg:system.cpu.user.pct&#x27;</span>).label(<span class="string">&#x27;last hour&#x27;</span>).lines(fill=1,width=0.5).color(gray), .es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;avg:system.cpu.user.pct&#x27;</span>).label(<span class="string">&#x27;current hour&#x27;</span>).title(<span class="string">&#x27;CPU usage&#x27;</span>).color(<span class="comment">#1E90FF)</span></span><br></pre></td></tr></table></figure><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550371280126.jpg" alt="img"></p><p>最后但并非最不重要，调整图例，使其占用尽可能小的空间，你可以使用<code>.legend()</code>函数来设置图例的位置和样式。在本例中，通过将<code>.legend(columns=2, position=nw)</code>两列追加到原始系列，将图例放置在可视化的西北位置，使用以下表达式进行调整：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.es(offset=-1h,index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;avg:system.cpu.user.pct&#x27;</span>).label(<span class="string">&#x27;last hour&#x27;</span>).lines(fill=1,width=0.5).color(gray), .es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;avg:system.cpu.user.pct&#x27;</span>).label(<span class="string">&#x27;current hour&#x27;</span>).title(<span class="string">&#x27;CPU usage&#x27;</span>).color(<span class="comment">#1E90FF).legend(columns=2, position=nw)</span></span><br></pre></td></tr></table></figure><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550372677660.jpg" alt="img"></p><p>保存下来，再创建一个新的。</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550373823177.jpg" alt="img"></p><h2 id="使用数学函数"><a href="#使用数学函数" class="headerlink" title="使用数学函数"></a>使用数学函数</h2><p>在前两部分中，已经学习了如何创建和样式化Timelion可视化，本节将探索Timelion提供的数学函数。你将继续使用Metricbeat数据为入站和出站网络流量创建新的Timelion可视化，首先，需要在工作表中添加一个新的Timelion可视化。</p><p>在顶部菜单中，单击<code>Add</code>添加第二个可视化，当添加到工作表中时，你会注意到查询栏已经被替换为默认的<code>.es(*)</code>表达式，这是因为查询与你选择的Timelion工作表上的可视化相关联。</p><p>开始跟踪入站/出站网络流量，你的第一个表达式将计算<code>system.network.in.bytes</code>的最大值，将下面的表达式输入到你的Timelion查询栏：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.es(index=metricbeat*, timefield=@timestamp, metric=max:system.network.in.bytes)</span><br></pre></td></tr></table></figure><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550375485103.jpg" alt="img"></p><p>在绘制变化率时，监视网络流量更有价值，<code>derivative()</code>函数就是这样做的 - 绘制值随时间的变化，通过在表达式末尾添加<code>.derivative()</code>可以很容易地做到这一点，使用以下表达式来更新你的可视化：</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550376413219.jpg" alt="img"></p><p>现在是出站流量，你需要为<code>system.network.out.bytes</code>添加类似的计算，由于出站流量将离开你的机器，因此将此指标表示为负数是有意义的，<code>.multiply()</code>函数将系列乘以一个数字，这个数字是系列或系列列表的结果。对于本例，你将使用<code>.multiply(-1)</code>将出站网络流量转换为负值，使用以下表达式来更新你的可视化：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.es(index=metricbeat*, timefield=@timestamp, metric=max:system.network.in.bytes).derivative(), .es(index=metricbeat*, timefield=@timestamp, metric=max:system.network.out.bytes).derivative().multiply(-1)</span><br></pre></td></tr></table></figure><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550378088167.jpg" alt="img"></p><p>为了使这个可视化更容易使用，将这个系列从字节转换为兆字节，Timelion有一个<code>.divide()</code>函数可以使用，<code>.divide()</code>接受与<code>.multiply()</code>相同的输入，并将这个系列除以所定义的除数，使用以下表达式来更新你的可视化：</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550379584394.jpg" alt="img"></p><p>使用上一节中学习的格式化函数<code>.title()</code>、<code>.label()</code>、<code>.color()</code>、<code>.lines()</code>和<code>.legend()</code>，让我们稍微整理一下这个可视化，使用以下表达式来更新你的可视化：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.es(index=metricbeat*, timefield=@timestamp, metric=max:system.network.in.bytes).derivative().divide(1048576).lines(fill=2, width=1).color(green).label(<span class="string">&quot;Inbound traffic&quot;</span>).title(<span class="string">&quot;Network traffic (MB/s)&quot;</span>), .es(index=metricbeat*, timefield=@timestamp, metric=max:system.network.out.bytes).derivative().multiply(-1).divide(1048576).lines(fill=2, width=1).color(blue).label(<span class="string">&quot;Outbound traffic&quot;</span>).legend(columns=2, position=nw)</span><br></pre></td></tr></table></figure><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550382566489.jpg" alt="img"></p><p>保存，开启新的，画图</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550384035249.jpg" alt="img"></p><h2 id="使用条件逻辑和跟踪趋势"><a href="#使用条件逻辑和跟踪趋势" class="headerlink" title="使用条件逻辑和跟踪趋势"></a>使用条件逻辑和跟踪趋势</h2><p>在本节中，你将学习如何使用条件逻辑修改时间序列数据，并使用移动平均值创建趋势，这有助于随着时间的推移很容易地发现异常值和模式。</p><p>对于本教程，你将继续使用Metricbeat数据添加另一个监控内存消耗的可视化，首先，使用以下表达式绘制<code>system.memory.actual.used.bytes</code>的最大值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;max:system.memory.actual.used.bytes&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550385197269.jpg" alt="img"></p><p>让我们创建两个阈值来监视使用的内存数量，在本教程中，警告阈值为234MB，严重阈值为235MB，当使用内存的最大数量超过这些阈值中的任何一个时，将相应地对该系列进行着色。</p><p>如果你的计算机的阈值过高或过低，请相应地进行调整。</p><p>要配置这两个阈值，可以使用Timelion的条件逻辑，在本教程中，你将使用if()将每个点与一个数字进行比较，如果条件的值为true，则调整样式，如果条件的值为false，则使用默认样式，Timelion提供了以下六个操作符值进行比较。</p><table><thead><tr><th>操作符</th><th>含义</th></tr></thead><tbody><tr><td>eq</td><td>相等</td></tr><tr><td>ne</td><td>不相等</td></tr><tr><td>lt</td><td>小于</td></tr><tr><td>gt</td><td>大于</td></tr><tr><td>lte</td><td>小于等于</td></tr><tr><td>get</td><td>大于等于</td></tr></tbody></table><p>由于有两个阈值，因此对它们进行不同的样式是有意义的，使用gt操作符将警告阈值用<code>.color(&#39;#FFCC11&#39;)</code>涂成黄色，将严重阈值用<code>.color(&#39;red&#39;)</code>涂成红色，在Timelion查询栏中输入以下表达式，以应用条件逻辑和阈值样式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;max:system.memory.actual.used.bytes&#x27;</span>), .es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;max:system.memory.actual.used.bytes&#x27;</span>).<span class="keyword">if</span>(gt,234000000,.es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;max:system.memory.actual.used.bytes&#x27;</span>),null).label(<span class="string">&#x27;warning&#x27;</span>).color(<span class="string">&#x27;#FFCC11&#x27;</span>), .es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;max:system.memory.actual.used.bytes&#x27;</span>).<span class="keyword">if</span>(gt,235000000,.es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;max:system.memory.actual.used.bytes&#x27;</span>),null).label(<span class="string">&#x27;serious&#x27;</span>).color(<span class="string">&#x27;red&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550396434205.jpg" alt="img"></p><p>现在你已经定义了阈值来轻松地识别异常值，让我们创建一个新的系列来确定真正的趋势是什么，Timelion的<code>mvavg()</code>函数允许计算给定窗口上的移动平均值，这对嘈杂的时间序列特别有用，对于本教程，你将使用<code>.mvavg(10)</code>来创建具有10个数据点窗口的移动平均线，使用以下表达式创建最大内存使用量的移动平均值：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;max:system.memory.actual.used.bytes&#x27;</span>), .es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;max:system.memory.actual.used.bytes&#x27;</span>).<span class="keyword">if</span>(gt,234000000,.es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;max:system.memory.actual.used.bytes&#x27;</span>),null).label(<span class="string">&#x27;warning&#x27;</span>).color(<span class="string">&#x27;#FFCC11&#x27;</span>), .es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;max:system.memory.actual.used.bytes&#x27;</span>).<span class="keyword">if</span>(gt,235000000,.es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;max:system.memory.actual.used.bytes&#x27;</span>),null).label(<span class="string">&#x27;serious&#x27;</span>).color(<span class="string">&#x27;red&#x27;</span>), .es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;max:system.memory.actual.used.bytes&#x27;</span>).mvavg(10)</span><br></pre></td></tr></table></figure><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550398221958.jpg" alt="img">现在你已经有了阈值和移动平均值，让我们格式化可视化，以便更容易使用，和最后一部分一样，使用<code>.color()</code>、<code>.line()</code>、<code>.title()</code>和<code>.legend()</code>函数相应地更新可视化：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;max:system.memory.actual.used.bytes&#x27;</span>).label(<span class="string">&#x27;max memory&#x27;</span>).title(<span class="string">&#x27;Memory consumption over time&#x27;</span>), .es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;max:system.memory.actual.used.bytes&#x27;</span>).<span class="keyword">if</span>(gt,234000000,.es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;max:system.memory.actual.used.bytes&#x27;</span>),null).label(<span class="string">&#x27;warning&#x27;</span>).color(<span class="string">&#x27;#FFCC11&#x27;</span>).lines(width=5), .es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;max:system.memory.actual.used.bytes&#x27;</span>).<span class="keyword">if</span>(gt,235000000,.es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;max:system.memory.actual.used.bytes&#x27;</span>),null).label(<span class="string">&#x27;serious&#x27;</span>).color(<span class="string">&#x27;red&#x27;</span>).lines(width=5), .es(index=metricbeat-*, timefield=<span class="string">&#x27;@timestamp&#x27;</span>, metric=<span class="string">&#x27;max:system.memory.actual.used.bytes&#x27;</span>).mvavg(10).label(<span class="string">&#x27;mvavg&#x27;</span>).lines(width=2).color(<span class="comment">#5E5E5E).legend(columns=4, position=nw)</span></span><br></pre></td></tr></table></figure><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550403825820.jpg" alt="img"></p><p>保存</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550404974057.jpg" alt="img"></p><h2 id="展示至Dashboard"><a href="#展示至Dashboard" class="headerlink" title="展示至Dashboard"></a>展示至Dashboard</h2><p>整合，其实最终我们需要的是，网络，cpu，内存优化后的图</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550405596430.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550407410195.jpg" alt="img"></p><p>你已经正式利用了Timelion的功能来创建时间序列可视化，本教程的最后一步是向仪表盘添加你新的可视化，下面，本节将向你展示如何从Timelion工作表中保存可视化，并将其添加到现有的仪表盘中。</p><p>要将Timelion可视化保存为仪表盘面板，请执行以下步骤。</p><ol><li>选择要添加到一个（或多个）仪表盘上的可视化视图。</li><li>点击顶部菜单中的<code>Save</code>选项。</li><li>选择<code>Save current expression as Kibana dashboard panel</code>。</li><li>命名你的面板并点击<code>Save</code>以作为仪表盘可视化。</li></ol><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550407700962.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550410744572.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550411342535.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550411647010.jpg" alt="img"></p><p>现在你可以将这个仪表盘面板添加到任何你想要的仪表盘上，这个可视化现在将在可视化列表中列出，继续并按照你创建的其他可视化效果的相同过程进行操作。</p><p>创建一个新的仪表盘或打开一个现有的仪表盘，以添加Timelion可视化，就像其他任何可视化一样。</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550412004844.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550412201620.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550413097385.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550413635418.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550413929541.jpg" alt="img"></p><p>最终展示</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15550414351552.jpg" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;什么是Timelion？&quot;&gt;&lt;a href=&quot;#什么是Timelion？&quot; class=&quot;headerlink&quot; title=&quot;什么是Timelion？&quot;&gt;&lt;/a&gt;什么是Timelion？&lt;/h1&gt;&lt;p&gt;Timelion使你可以轻松获得以</summary>
      
    
    
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/categories/ELK%E9%9B%86%E7%BE%A4/"/>
    
    
    <category term="自动化运维" scheme="https://chenlinbb.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/"/>
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/tags/ELK%E9%9B%86%E7%BE%A4/"/>
    
    <category term="日志收集" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/"/>
    
    <category term="日志分析" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>10.Kibana深入-使用地图统计客户端IP</title>
    <link href="https://chenlinbb.github.io/archives/e222a822.html"/>
    <id>https://chenlinbb.github.io/archives/e222a822.html</id>
    <published>2024-07-17T15:51:58.146Z</published>
    <updated>2024-07-17T15:52:07.262Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="地址库"><a href="#地址库" class="headerlink" title="地址库"></a>地址库</h1><p>在ELK中，我们可以使用地址库，来对IP进行分析，对日志进行分析，在ELKstack中只有Logstash可以做到，但是出图，是Kibana来出的，所以我们首先需要下载地址库数据文件，然后对Logstash进行配置，使用<code>geoip</code>模块对日志访问IP进行分析后，再以<code>中国地图</code>或者是<code>世界地图</code>的形式，展现在Kibana中。</p><h2 id="下载地址库"><a href="#下载地址库" class="headerlink" title="下载地址库"></a>下载地址库</h2><p>Logstash2版本下载地址：<a href="http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz">http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz</a></p><p>logstash5版本下载地址：<a href="http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz">http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入Logstash目录</span></span><br><span class="line"><span class="built_in">cd</span> /etc/logstash/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载地址库</span></span><br><span class="line">wget http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压地址库文件</span></span><br><span class="line">tar xf GeoLite2-City.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看地址库文件</span></span><br><span class="line">ll</span><br><span class="line">总用量 28784</span><br><span class="line">drwxrwxr-x 2 root root     4096 4月  11 11:36 conf.d</span><br><span class="line">drwxr-xr-x 2 2000 2000     4096 4月   8 20:07 GeoLite2-City_20190409</span><br><span class="line">-rw-r--r-- 1 root root 29444833 4月   9 15:32 GeoLite2-City_20190409.tar.gz</span><br><span class="line">-rw-rw-r-- 1 root root     1738 3月  23 2017 jvm.options</span><br><span class="line">-rw-rw-r-- 1 root root     1334 3月  23 2017 log4j2.properties</span><br><span class="line">-rw-rw-r-- 1 root root     4484 3月   5 17:35 logstash.yml</span><br><span class="line">-rw-rw-r-- 1 root root     1659 3月  23 2017 startup.options</span><br></pre></td></tr></table></figure><h1 id="配置Logstash使用地址库"><a href="#配置Logstash使用地址库" class="headerlink" title="配置Logstash使用地址库"></a>配置Logstash使用地址库</h1><h2 id="配置Logstash"><a href="#配置Logstash" class="headerlink" title="配置Logstash"></a>配置Logstash</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入Logstash配置文件目录</span></span><br><span class="line"><span class="built_in">cd</span> /etc/logstash/conf.d/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑Logstash配置文件</span></span><br><span class="line">vim redis_es_ip.conf</span><br><span class="line">input &#123;</span><br><span class="line">  redis &#123;</span><br><span class="line">    host =&gt; <span class="string">&quot;10.0.0.54&quot;</span></span><br><span class="line">    port =&gt; <span class="string">&quot;6379&quot;</span></span><br><span class="line">    db =&gt; <span class="string">&quot;3&quot;</span></span><br><span class="line">    key =&gt; <span class="string">&quot;all&quot;</span></span><br><span class="line">    data_type =&gt; <span class="string">&quot;list&quot;</span></span><br><span class="line">    password =&gt; <span class="string">&quot;zls&quot;</span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">filter &#123;</span><br><span class="line">        json &#123;</span><br><span class="line">            <span class="built_in">source</span> =&gt; <span class="string">&quot;message&quot;</span></span><br><span class="line">            remove_field =&gt; [<span class="string">&quot;message&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        geoip &#123;</span><br><span class="line">                <span class="built_in">source</span> =&gt; <span class="string">&quot;clientip&quot;</span></span><br><span class="line">                target =&gt; <span class="string">&quot;geoip&quot;</span></span><br><span class="line">                database =&gt; <span class="string">&quot;/etc/logstash/GeoLite2-City_20190409/GeoLite2-City.mmdb&quot;</span></span><br><span class="line">                add_field =&gt; [ <span class="string">&quot;[geoip][coordinates]&quot;</span>, <span class="string">&quot;%&#123;[geoip][longitude]&#125;&quot;</span> ]</span><br><span class="line">                add_field =&gt; [ <span class="string">&quot;[geoip][coordinates]&quot;</span>, <span class="string">&quot;%&#123;[geoip][latitude]&#125;&quot;</span>  ]</span><br><span class="line">        &#125;</span><br><span class="line">    mutate &#123;</span><br><span class="line">      convert =&gt; [ <span class="string">&quot;[geoip][coordinates]&quot;</span>, <span class="string">&quot;float&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">output &#123;</span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">      hosts =&gt; [<span class="string">&quot;10.0.0.51:9200&quot;</span>]</span><br><span class="line">      index =&gt; <span class="string">&quot;%&#123;type&#125;-%&#123;+YYYY.MM.dd&#125;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Logstash</span></span><br><span class="line">/usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/redis_es_ip.conf &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment">#因为是单机环境，日志里面没有公网IP，所以我们需要自己往里输入公网IP</span></span><br><span class="line"><span class="comment">## 北京公网IP</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#123;&quot;@timestamp&quot;:&quot;2019-04-11T20:27:25+08:00&quot;,&quot;host&quot;:&quot;222.28.0.112&quot;,&quot;clientip&quot;:&quot;222.28.0.112&quot;,&quot;size&quot;:0,&quot;responsetime&quot;:0.000,&quot;upstreamtime&quot;:&quot;-&quot;,&quot;upstreamhost&quot;:&quot;-&quot;,&quot;http_host&quot;:&quot;www.elk.com&quot;,&quot;url&quot;:&quot;/index.html&quot;,&quot;domain&quot;:&quot;www.elk.com&quot;,&quot;xff&quot;:&quot;10.0.0.1&quot;,&quot;referer&quot;:&quot;-&quot;,&quot;status&quot;:&quot;304&quot;&#125;&#x27;</span> &gt;&gt; /usr/local/nginx/logs/access_json.log</span><br><span class="line"><span class="comment">## 海南公网IP</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#123;&quot;@timestamp&quot;:&quot;2019-04-11T20:40:24+08:00&quot;,&quot;host&quot;:&quot; 124.225.0.13&quot;,&quot;clientip&quot;:&quot;124.225.0.13&quot;,&quot;size&quot;:0,&quot;responsetime&quot;:0.000,&quot;upstreamtime&quot;:&quot;-&quot;,&quot;upstreamhost&quot;:&quot;-&quot;,&quot;http_host&quot;:&quot;www.elk.com&quot;,&quot;url&quot;:&quot;/index.html&quot;,&quot;domain&quot;:&quot;www.elk.com&quot;,&quot;xff&quot;:&quot;10.0.0.1&quot;,&quot;referer&quot;:&quot;-&quot;,&quot;status&quot;:&quot;304&quot;&#125;&#x27;</span> &gt;&gt; /usr/local/nginx/logs/access_json.log</span><br><span class="line"><span class="comment">## 吉林公网IP</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#123;&quot;@timestamp&quot;:&quot;2019-04-11T20:45:24+08:00&quot;,&quot;host&quot;:&quot; 124.234.0.12&quot;,&quot;clientip&quot;:&quot;124.234.0.12&quot;,&quot;size&quot;:0,&quot;responsetime&quot;:0.000,&quot;upstreamtime&quot;:&quot;-&quot;,&quot;upstreamhost&quot;:&quot;-&quot;,&quot;http_host&quot;:&quot;www.elk.com&quot;,&quot;url&quot;:&quot;/index.html&quot;,&quot;domain&quot;:&quot;www.elk.com&quot;,&quot;xff&quot;:&quot;10.0.0.1&quot;,&quot;referer&quot;:&quot;-&quot;,&quot;status&quot;:&quot;304&quot;&#125;&#x27;</span> &gt;&gt; /usr/local/nginx/logs/access_json.log</span><br><span class="line"><span class="comment">## 黑龙江公网IP</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#123;&quot;@timestamp&quot;:&quot;2019-04-11T20:46:24+08:00&quot;,&quot;host&quot;:&quot; 123.164.0.18&quot;,&quot;clientip&quot;:&quot;123.164.0.18&quot;,&quot;size&quot;:0,&quot;responsetime&quot;:0.000,&quot;upstreamtime&quot;:&quot;-&quot;,&quot;upstreamhost&quot;:&quot;-&quot;,&quot;http_host&quot;:&quot;www.elk.com&quot;,&quot;url&quot;:&quot;/index.html&quot;,&quot;domain&quot;:&quot;www.elk.com&quot;,&quot;xff&quot;:&quot;10.0.0.1&quot;,&quot;referer&quot;:&quot;-&quot;,&quot;status&quot;:&quot;304&quot;&#125;&#x27;</span> &gt;&gt; /usr/local/nginx/logs/access_json.log</span><br></pre></td></tr></table></figure><h2 id="验证Kibana中的数据"><a href="#验证Kibana中的数据" class="headerlink" title="验证Kibana中的数据"></a>验证Kibana中的数据</h2><p>打开浏览器，访问：<a href="http://10.0.0.54:5601/">http://10.0.0.54:5601</a></p><p><strong>北京公网IP</strong></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549871249058.jpg" alt="img"></p><p><strong>海南公网IP</strong></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549872436710.jpg" alt="img"></p><p><strong>吉林公网IP</strong></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549873068269.jpg" alt="img"></p><p><strong>黑龙江公网IP</strong></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549873797318.jpg" alt="img"></p><h1 id="配置Kibana使用地图"><a href="#配置Kibana使用地图" class="headerlink" title="配置Kibana使用地图"></a>配置Kibana使用地图</h1><h2 id="Kibana画中国地图"><a href="#Kibana画中国地图" class="headerlink" title="Kibana画中国地图"></a>Kibana画中国地图</h2><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549874587400.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549874843564.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549875086533.jpg" alt="img"></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549890963810.jpg" alt="img"></p><p>如图：报错:”No Compatible Fields: The “[blog.driverzeng.com -]YYYY.MM.DD” index pattern does not contain any of the following field types: geo_point”</p><p>原因：索引格式为[blog.driverzeng.com -]YYYY-MM的日志文件由logstash输出到Elasticsearch；在elasticsearch中，所有的数据都有一个类型，什么样的类型，就可以在其上做一些对应类型的特殊操作。<code>geo</code>信息中的<code>location</code>字段是经纬度，我们需要使用经纬度来定位地理位置;在elasticsearch中，对于经纬度来说，要想使用elasticsearch提供的地理位置查询相关的功能，就需要构造一个结构，并且将其类型属性设置为<code>geo_point</code>，此错误明显是由于我们的<code>geo</code>的<code>location</code>字段类型不是<code>geo_point</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 验证一下</span></span><br><span class="line">curl -XGET http://10.0.0.51:9200/blog.driverzeng.com-2019.04.11/_mapping/</span><br><span class="line">&#123;<span class="string">&quot;blog.driverzeng.com-2019.04.11&quot;</span>:&#123;<span class="string">&quot;mappings&quot;</span>:&#123;<span class="string">&quot;blog.driverzeng.com&quot;</span>:&#123;<span class="string">&quot;properties&quot;</span>:&#123;<span class="string">&quot;@timestamp&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;date&quot;</span>&#125;,<span class="string">&quot;@version&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;beat&quot;</span>:&#123;<span class="string">&quot;properties&quot;</span>:&#123;<span class="string">&quot;hostname&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;name&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;version&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;&#125;&#125;,<span class="string">&quot;clientip&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;domain&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;geoip&quot;</span>:&#123;<span class="string">&quot;properties&quot;</span>:&#123;<span class="string">&quot;city_name&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;continent_code&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;coordinates&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;float&quot;</span>&#125;,<span class="string">&quot;country_code2&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;country_code3&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;country_name&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;ip&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;latitude&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;float&quot;</span>&#125;,<span class="string">&quot;location&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;float&quot;</span>&#125;,<span class="string">&quot;longitude&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;float&quot;</span>&#125;,<span class="string">&quot;region_code&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;region_name&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;timezone&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;&#125;&#125;,<span class="string">&quot;host&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;http_host&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;input_type&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;offset&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;long&quot;</span>&#125;,<span class="string">&quot;referer&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;responsetime&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;float&quot;</span>&#125;,<span class="string">&quot;size&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;long&quot;</span>&#125;,<span class="string">&quot;source&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;status&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;type&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;upstreamhost&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;upstreamtime&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;url&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;,<span class="string">&quot;xff&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;fields&quot;</span>:&#123;<span class="string">&quot;keyword&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;ignore_above&quot;</span>:256&#125;&#125;&#125;&#125;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>其中”location”:{“type”:”float”},”，字段类型是<code>float</code>，而不是<code>geo_point</code>，因此会报图中的错误。</p><p><strong>解决方法：</strong>Elasticsearch支持给索引预定义设置和mapping(前提是你用的 elasticsearch 版本支持这个API，不过估计应该都支持)。其实ES中已经有一个默认预定义的模板，我们只要使用预定的模板即可，那为什么还会报错呢？因为默认预定义的模板必须只有匹配 logstash-* 的索引才会应用这个模板，由于我们在logstash中使用的是[blog.driverzeng.com -]YYYY.MM.DD索引方式，因此不会匹配到默认模板，我们只需要改一下索引方式即可:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改一下索引方式</span></span><br><span class="line">input &#123;</span><br><span class="line">  redis &#123;</span><br><span class="line">    host =&gt; <span class="string">&quot;10.0.0.54&quot;</span></span><br><span class="line">    port =&gt; <span class="string">&quot;6379&quot;</span></span><br><span class="line">    db =&gt; <span class="string">&quot;3&quot;</span></span><br><span class="line">    key =&gt; <span class="string">&quot;all&quot;</span></span><br><span class="line">    data_type =&gt; <span class="string">&quot;list&quot;</span></span><br><span class="line">    password =&gt; <span class="string">&quot;zls&quot;</span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">filter &#123;</span><br><span class="line">        json &#123;</span><br><span class="line">            <span class="built_in">source</span> =&gt; <span class="string">&quot;message&quot;</span></span><br><span class="line">            remove_field =&gt; [<span class="string">&quot;message&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        geoip &#123;</span><br><span class="line">                <span class="built_in">source</span> =&gt; <span class="string">&quot;clientip&quot;</span></span><br><span class="line">                target =&gt; <span class="string">&quot;geoip&quot;</span></span><br><span class="line">                database =&gt; <span class="string">&quot;/etc/logstash/GeoLite2-City_20190409/GeoLite2-City.mmdb&quot;</span></span><br><span class="line">                add_field =&gt; [ <span class="string">&quot;[geoip][coordinates]&quot;</span>, <span class="string">&quot;%&#123;[geoip][longitude]&#125;&quot;</span> ]</span><br><span class="line">                add_field =&gt; [ <span class="string">&quot;[geoip][coordinates]&quot;</span>, <span class="string">&quot;%&#123;[geoip][latitude]&#125;&quot;</span>  ]</span><br><span class="line">        &#125;</span><br><span class="line">    mutate &#123;</span><br><span class="line">      convert =&gt; [ <span class="string">&quot;[geoip][coordinates]&quot;</span>, <span class="string">&quot;float&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">output &#123;</span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">      hosts =&gt; [<span class="string">&quot;10.0.0.51:9200&quot;</span>]</span><br><span class="line">      index =&gt; <span class="string">&quot;logstash-%&#123;type&#125;-%&#123;+YYYY.MM.dd&#125;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将输出到ES的索引: <code>index =&gt; &quot;%&#123;type&#125;-%&#123;+YYYY.MM.dd&#125;&quot;</code><br>改为: <code>index =&gt; &quot;logstash-%&#123;type&#125;-%&#123;+YYYY.MM.dd&#125;&quot;</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重启Logstash，登录Kibana刷新</span></span><br><span class="line">/usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/redis_es_ip.conf &amp;</span><br></pre></td></tr></table></figure><p><strong>再次查看Kibana</strong></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549903298819.jpg" alt="img"></p><p>继续画图</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549905128351.jpg" alt="img"></p><p>也可以根据自己喜好，画成热力图</p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549908339037.jpg" alt="img"></p><p>保存，可以放入<code>Dashboard</code></p><p><img src="https://blog.driverzeng.com/wp-content/uploads/2019/04/15549914711856.jpg" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;地址库&quot;&gt;&lt;a href=&quot;#地址库&quot; class=&quot;headerlink&quot; title=&quot;地址库&quot;&gt;&lt;/a&gt;地址库&lt;/h1&gt;&lt;p&gt;在ELK中，我们可以使用地址库，来对IP进行分析，对日志进行分析，在ELKstack中只有Logstash</summary>
      
    
    
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/categories/ELK%E9%9B%86%E7%BE%A4/"/>
    
    
    <category term="自动化运维" scheme="https://chenlinbb.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/"/>
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/tags/ELK%E9%9B%86%E7%BE%A4/"/>
    
    <category term="日志收集" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/"/>
    
    <category term="日志分析" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>1.ELKstack介绍</title>
    <link href="https://chenlinbb.github.io/archives/99013f2e.html"/>
    <id>https://chenlinbb.github.io/archives/99013f2e.html</id>
    <published>2024-07-17T15:51:58.144Z</published>
    <updated>2024-07-17T15:52:07.260Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="ELKstack大纲"><a href="#ELKstack大纲" class="headerlink" title="ELKstack大纲"></a>ELKstack大纲</h1><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/%E8%80%81%E7%94%B7%E5%AD%A9%E6%95%99%E8%82%B2ELK%E8%AF%BE%E7%A8%8B%E5%A4%A7%E7%BA%B2.jpg" alt="老男孩教育ELK课程大纲"></p><h1 id="ELKstack简介"><a href="#ELKstack简介" class="headerlink" title="ELKstack简介"></a>ELKstack简介</h1><h2 id="什么是ELK？"><a href="#什么是ELK？" class="headerlink" title="什么是ELK？"></a>什么是ELK？</h2><p>通俗来讲，ELK是由Elasticsearch、Logstash、Kibana 三个开源软件的组成的一个组合体，这三个软件当中，每个软件用于完成不同的功能，ELK 又称为ELK stack，官方域名为elastic.co，ELK stack的主要优点有如下几个：</p><ol><li>处理方式灵活： elasticsearch是实时全文索引，具有强大的搜索功能</li><li>配置相对简单：elasticsearch全部使用JSON 接口，logstash使用模块配置，kibana的配置文件部分更简单。 </li><li>检索性能高效：基于优秀的设计，虽然每次查询都是实时，但是也可以达到百亿级数据的查询秒级响应。</li><li>集群线性扩展：elasticsearch和logstash都可以灵活线性扩展</li><li>前端操作绚丽：kibana的前端设计比较绚丽，而且操作简单</li></ol><p><strong>elk在5版本之前，可以用redis，6.7版本之后使用卡夫卡，不用redis</strong></p><h2 id="什么是Elasticsearch？"><a href="#什么是Elasticsearch？" class="headerlink" title="什么是Elasticsearch？"></a>什么是Elasticsearch？</h2><p>是一个高度可扩展的开源全文搜索和分析引擎，它可实现数据的实时全文搜索搜索、支持分布式可实现高可用、提供API接口，可以处理大规模日志数据，比如Nginx、Tomcat、系统日志等功能。</p><ul><li>主要功能：<ul><li>是个数据库，数据放在里面可以快速搜索、存储日志</li><li>数据库L是一个高度可拓展的开源实现全文搜索和分析引擎</li></ul></li></ul><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/15513262928638.jpg" alt="15513262928638"></p><h2 id="什么是Logstash？"><a href="#什么是Logstash？" class="headerlink" title="什么是Logstash？"></a>什么是Logstash？</h2><p>可以通过插件实现日志收集和转发，支持日志过滤，支持普通log、自定义json格式的日志解析。</p><p>filebeat由于轻量化的特性，通常用于代替logstash跑腿收集各个服务器的日志，统一放到redis里，也可以取出放到elasticsearch中</p><ul><li><p>主要功能：</p><ul><li>收集日志，转发日志</li><li>可以通过插件实现日志的收集和转发，实现日志过滤 支持普通log</li></ul></li><li><p>filebeat：</p><ul><li>是一个轻量级的日志收集工具；</li></ul></li><li><p>logstash：</p><ul><li>是一个重量级日志收集工具，可以做分析、使用正则表达式、分析用户IP、画地图、查看用户分布情况等功能</li></ul></li></ul><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/15513263629058.jpg" alt="15513263629058"></p><h2 id="什么是Kibana？"><a href="#什么是Kibana？" class="headerlink" title="什么是Kibana？"></a>什么是Kibana？</h2><p>主要是通过接口调用elasticsearch的数据，并进行前端数据可视化的展现。</p><ul><li>主要功能：<ul><li>通过接口调用Elasticsearch的数据，并进行数据的可视化的展示，web图形化日志展示</li></ul></li></ul><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/15513264558748.jpg" alt="15513264558748"></p><h1 id="ELKstack集群工作流程"><a href="#ELKstack集群工作流程" class="headerlink" title="ELKstack集群工作流程"></a>ELKstack集群工作流程</h1><p>elasticsearch 是一个数据库，logstash可以理解为是一个中介，让filebeat跑腿收集各个服务器的日志放到reids里，再通过logstash把日志拿出来放到ES里。</p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230427200459677.png" alt="image-20230427200459677"></p><h1 id="Redis和Kafka的区别"><a href="#Redis和Kafka的区别" class="headerlink" title="Redis和Kafka的区别"></a>Redis和Kafka的区别</h1><p>Redis和Kafka是两种<strong>不同类型</strong>的<strong>数据处理</strong>和<strong>消息传递</strong>系统，它们有以下几点区别：</p><h2 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h2><ul><li>Redis<ul><li>基于内存的数据存储系统，它提供了多种数据结构，如字符串、哈希表、列表、集合和有序集合等。</li><li>Redis允许对这些数据结构进行快速读写操作，并提供了丰富的数据操作命令。</li></ul></li><li>Kafka<ul><li>分布式消息队列系统，它以高吞吐量、可持久化、可靠性传递的方式处理消息。</li><li>Kafka将消息以类似于日志的方式进行持久化存储，并通过分区和复制机制实现高可靠性的消息传递。</li></ul></li></ul><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><ul><li>Redis<ul><li>适用于缓存、会话存储、发布/订阅系统、实时数据分析和计数器等场景。</li><li>它以其快速的读写能力和丰富的数据结构，为高性能的数据访问和处理提供了支持。</li></ul></li><li>Kafka<ul><li>适用于构建实时流处理、事件驱动架构、日志收集和分发、数据管道等场景。</li><li>它提供了可持久化的消息传递机制，并支持分布式、可水平扩展的消息处理。</li></ul></li></ul><h2 id="数据处理模式"><a href="#数据处理模式" class="headerlink" title="数据处理模式"></a>数据处理模式</h2><ul><li>Redis<ul><li>是一个直接对数据进行操作的系统，它支持读写操作和丰富的数据处理命令。</li><li>数据通常以键值对的形式存储在内存中，可以快速地进行读写和操作。</li></ul></li><li>Kafka<ul><li>是基于发布/订阅模式的消息队列系统，它将消息发布到主题(Topic)，然后订阅者(Consumer)可以从主题中消费消息。</li><li>Kafka以分区和偏移量的方式存储和组织消息，保证了消息的有序性和可靠性。</li></ul></li></ul><h2 id="数据持久化"><a href="#数据持久化" class="headerlink" title="数据持久化"></a>数据持久化</h2><ul><li>Redis<ul><li>支持将数据持久化到磁盘上，以防止数据丢失。它提供了两种持久化机制：RDB(Redis Database)快照和AOF(Append-Only File)日志。</li><li>RDB可以定期将数据集的快照保存到磁盘，而AOF则记录每个写操作，以便在重启时重新执行这些操作。</li></ul></li><li>Kafka<ul><li>通过持久化存储日志文件来保证消息的可靠性。消息被写入磁盘，并根据配置的保留策略进行管理。消费者可以根据自己的需求从特定的偏移量读取消息，并且Kafka可以保留指定时间段内的消息。</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;ELKstack大纲&quot;&gt;&lt;a href=&quot;#ELKstack大纲&quot; class=&quot;headerlink&quot; title=&quot;ELKstack大纲&quot;&gt;&lt;/a&gt;ELKstack大纲&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://bkup-as</summary>
      
    
    
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/categories/ELK%E9%9B%86%E7%BE%A4/"/>
    
    
    <category term="自动化运维" scheme="https://chenlinbb.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/"/>
    
    <category term="ELK集群" scheme="https://chenlinbb.github.io/tags/ELK%E9%9B%86%E7%BE%A4/"/>
    
    <category term="日志收集" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/"/>
    
    <category term="日志分析" scheme="https://chenlinbb.github.io/tags/%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>8.Zabbix监控系统：分布式监控</title>
    <link href="https://chenlinbb.github.io/archives/b58bb029.html"/>
    <id>https://chenlinbb.github.io/archives/b58bb029.html</id>
    <published>2024-07-17T14:15:13.391Z</published>
    <updated>2024-07-18T12:43:52.727Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="Zabbix分布式监控的概述"><a href="#Zabbix分布式监控的概述" class="headerlink" title="Zabbix分布式监控的概述"></a>Zabbix分布式监控的概述</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Zabbix通过Zabbix proxies为IT基础设施提供有效和可用的分布式监控 代理(proxies)可用于代替Zabbix server本地收集数据，然后将数据报告给服务器。</p><h2 id="Zabbix架构图示"><a href="#Zabbix架构图示" class="headerlink" title="Zabbix架构图示"></a>Zabbix架构图示</h2><ul><li><p><strong>目前架构</strong></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620205808238.png" alt="image-20230620205808238"></p></li><li><p><strong>分布式监控架构</strong></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620205816412.png" alt="image-20230620205816412"></p></li></ul><h2 id="Zabbix分布式监控的作用"><a href="#Zabbix分布式监控的作用" class="headerlink" title="Zabbix分布式监控的作用"></a>Zabbix分布式监控的作用</h2><ul><li>解决Zabbix Server的压力</li><li>解决在不同地区的服务器之间的网络问题</li><li>解决物理机和云主机的监控问题</li><li>解决数据丢失问题</li></ul><h2 id="Zabbix-Proxy特性"><a href="#Zabbix-Proxy特性" class="headerlink" title="Zabbix Proxy特性"></a>Zabbix Proxy特性</h2><p>当选择使用/不使用proxy时，必须考虑几个注意事项。</p><table><thead><tr><th align="left"></th><th align="left">Proxy</th></tr></thead><tbody><tr><td align="left"><em>轻量级（Lightweight）</em></td><td align="left"><strong>Yes</strong></td></tr><tr><td align="left"><em>图形界面（GUI）</em></td><td align="left">No</td></tr><tr><td align="left"><em>独立工作（Works independently）</em></td><td align="left"><strong>Yes</strong></td></tr><tr><td align="left"><em>易于维护（Easy maintenance）</em></td><td align="left"><strong>Yes</strong></td></tr><tr><td align="left"><em>自动生成数据库（Automatic DB creation）</em>1</td><td align="left"><strong>Yes</strong></td></tr><tr><td align="left"><em>本地管理（Local administration）</em></td><td align="left">No</td></tr><tr><td align="left"><em>准备嵌入式硬件 （Ready for embedded hardware）</em></td><td align="left"><strong>Yes</strong></td></tr><tr><td align="left"><em>单向TCP连接（One way TCP connections）</em></td><td align="left"><strong>Yes</strong></td></tr><tr><td align="left"><em>集中配置（Centralised configuration）</em></td><td align="left"><strong>Yes</strong></td></tr><tr><td align="left"><em>生成通知（Generates notifications）</em></td><td align="left">No</td></tr></tbody></table><h2 id="Zabbix-Proxy概述"><a href="#Zabbix-Proxy概述" class="headerlink" title="Zabbix Proxy概述"></a>Zabbix Proxy概述</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620210041181.png" alt="image-20230620210041181"></p><p>zabbix proxy 可以代替 zabbix server 收集性能和可用性数据,然后把数据汇报给 zabbix server,并且在一定程度上分担了zabbix server 的压力.</p><h2 id="Zabbix-Proxy功能"><a href="#Zabbix-Proxy功能" class="headerlink" title="Zabbix Proxy功能"></a>Zabbix Proxy功能</h2><p>zabbix proxy 是一个数据收集器,它不计算触发器、不处理事件、不发送报警。有关proxy功能的概述，如下表：</p><table><thead><tr><th align="left">功能</th><th align="left">proxy支持(yes/no)</th></tr></thead><tbody><tr><td align="left">项目（Items）</td><td align="left"></td></tr><tr><td align="left"><em>Zabbix agent checks</em></td><td align="left">Yes</td></tr><tr><td align="left"><em>Zabbix agent checks (active)</em></td><td align="left"><strong>Yes</strong></td></tr><tr><td align="left"><em>Simple checks</em></td><td align="left"><strong>Yes</strong></td></tr><tr><td align="left"><em>Trapper items</em></td><td align="left"><strong>Yes</strong></td></tr><tr><td align="left"><em>SNMP checks</em></td><td align="left"><strong>Yes</strong></td></tr><tr><td align="left"><em>SNMP traps</em></td><td align="left"><strong>Yes</strong></td></tr><tr><td align="left"><em>IPMI checks</em></td><td align="left"><strong>Yes</strong></td></tr><tr><td align="left"><em>JMX checks</em></td><td align="left"><strong>Yes</strong></td></tr><tr><td align="left"><em>日志文件监控（Log file monitoring）</em></td><td align="left"><strong>Yes</strong></td></tr><tr><td align="left"><em>内部检查（Internal checks）</em></td><td align="left"><strong>Yes</strong></td></tr><tr><td align="left"><em>SSH checks</em></td><td align="left"><strong>Yes</strong></td></tr><tr><td align="left"><em>Telnet checks</em></td><td align="left"><strong>Yes</strong></td></tr><tr><td align="left"><em>外部检查（External checks）</em></td><td align="left"><strong>Yes</strong></td></tr><tr><td align="left">内置web监控（Built-in web monitoring）</td><td align="left"><strong>Yes</strong></td></tr><tr><td align="left">网络发现(Network discovery)</td><td align="left"><strong>Yes</strong></td></tr><tr><td align="left">自动发现（Low-level discovery）</td><td align="left"><strong>Yes</strong></td></tr><tr><td align="left">触发器计算（Calculating triggers）</td><td align="left"><em>No</em></td></tr><tr><td align="left">处理事件（Processing events）</td><td align="left"><em>No</em></td></tr><tr><td align="left">发送报警（Sending alerts）</td><td align="left"><em>No</em></td></tr><tr><td align="left">远程命令（Remote commands）</td><td align="left"><em>No</em></td></tr></tbody></table><p>使用 agent active 模式,一定要记住在 agent 的配置文件参数 <strong>ServerActive</strong> 加上 proxy 的 IP 地址。</p><h2 id="Zabbix-Proxy企业场景"><a href="#Zabbix-Proxy企业场景" class="headerlink" title="Zabbix Proxy企业场景"></a>Zabbix Proxy企业场景</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620210126019.png" alt="image-20230620210126019"></p><h1 id="Zabbix-Proxy部署"><a href="#Zabbix-Proxy部署" class="headerlink" title="Zabbix Proxy部署"></a>Zabbix Proxy部署</h1><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620210457718.png" alt="image-20230620210457718"></p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><table><thead><tr><th>主机名</th><th>IP</th><th>角色</th><th>应用</th></tr></thead><tbody><tr><td>m01</td><td>10.0.0.61</td><td>Zabbix Server</td><td>Zabbix Server、Zabbix Agent、Zabbix_get</td></tr><tr><td>web02</td><td>10.0.0.8</td><td>Zabbix Proxy</td><td>Zabbix Proxy、MySQL</td></tr><tr><td>web03</td><td>10.0.0.7</td><td>Zabbix Agent</td><td>Zabbix Agent</td></tr></tbody></table><h2 id="部署Proxy"><a href="#部署Proxy" class="headerlink" title="部署Proxy"></a>部署Proxy</h2><h3 id="安装Zabbix-Proxy"><a href="#安装Zabbix-Proxy" class="headerlink" title="安装Zabbix Proxy"></a>安装Zabbix Proxy</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装zabbix-proxy</span></span><br><span class="line">wget https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/zabbix-proxy-mysql-</span><br><span class="line">5.0.32-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建库和用户</span></span><br><span class="line">mysql&gt; create database zabbix_proxy charset utf8;</span><br><span class="line">mysql&gt; grant all on zabbix_proxy.* to zabbix_proxy@<span class="string">&#x27;172.16.1.%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送数据到数据库服务器上</span></span><br><span class="line">scp /usr/share/doc/zabbix-proxy-mysql-5.0.31/schema.sql.gz 172.16.1.53:/tmp/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入数据</span></span><br><span class="line">zcat /tmp/schema.sql.gz |mysql -uzabbix_proxy -p123 -h172.16.1.53 zabbix_proxy</span><br></pre></td></tr></table></figure><h3 id="配置Zabbix-Proxy"><a href="#配置Zabbix-Proxy" class="headerlink" title="配置Zabbix Proxy"></a>配置Zabbix Proxy</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">vim /etc/zabbix/zabbix_proxy.conf </span><br><span class="line">Server=172.16.1.61</span><br><span class="line">Hostname=Aliyun_Proxy</span><br><span class="line">DBHost=172.16.1.53</span><br><span class="line">DBName=zabbix_proxy</span><br><span class="line">DBUser=zabbix_proxy</span><br><span class="line">DBPassword=123</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动zabbix proxy</span></span><br><span class="line">systemctl start zabbix-proxy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看端口</span></span><br><span class="line">netstat -lntup      </span><br><span class="line">tcp        0      0 0.0.0.0:10051           0.0.0.0:*               LISTEN      35589/zabbix_proxy </span><br></pre></td></tr></table></figure><h3 id="配置Zabbix-Agent"><a href="#配置Zabbix-Agent" class="headerlink" title="配置Zabbix Agent"></a>配置Zabbix Agent</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改客户端配置</span></span><br><span class="line">vim /etc/zabbix/zabbix_agentd.conf </span><br><span class="line">Server=172.16.1.8</span><br><span class="line">ServerActive=172.16.1.8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启zabbix agent</span></span><br><span class="line">systemctl restart zabbix-agent</span><br></pre></td></tr></table></figure><h2 id="配置Zabbix-Web页面"><a href="#配置Zabbix-Web页面" class="headerlink" title="配置Zabbix Web页面"></a>配置Zabbix Web页面</h2><p><strong>1.创建代理程序</strong></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620210510729.png" alt="image-20230620210510729"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620210518778.png" alt="image-20230620210518778"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620210527696.png" alt="image-20230620210527696"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620210539445.png" alt="image-20230620210539445"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620210550084.png" alt="image-20230620210550084"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;Zabbix分布式监控的概述&quot;&gt;&lt;a href=&quot;#Zabbix分布式监控的概述&quot; class=&quot;headerlink&quot; title=&quot;Zabbix分布式监控的概述&quot;&gt;&lt;/a&gt;Zabbix分布式监控的概述&lt;/h1&gt;&lt;h2 id=&quot;概述&quot;&gt;</summary>
      
    
    
    
    <category term="Zabbix" scheme="https://chenlinbb.github.io/categories/Zabbix/"/>
    
    
    <category term="自动化运维" scheme="https://chenlinbb.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/"/>
    
    <category term="应用监控" scheme="https://chenlinbb.github.io/tags/%E5%BA%94%E7%94%A8%E7%9B%91%E6%8E%A7/"/>
    
    <category term="数据分析" scheme="https://chenlinbb.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="Zabbix" scheme="https://chenlinbb.github.io/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>7.Zabbix监控系统：自动化监控</title>
    <link href="https://chenlinbb.github.io/archives/27dc03fd.html"/>
    <id>https://chenlinbb.github.io/archives/27dc03fd.html</id>
    <published>2024-07-17T14:15:13.389Z</published>
    <updated>2024-07-18T12:43:52.724Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="Zabbix自动化监控的概述"><a href="#Zabbix自动化监控的概述" class="headerlink" title="Zabbix自动化监控的概述"></a>Zabbix自动化监控的概述</h1><h2 id="Zabbix的工作模式"><a href="#Zabbix的工作模式" class="headerlink" title="Zabbix的工作模式"></a>Zabbix的工作模式</h2><ul><li>主动模式（客户端的主动）</li><li>被动模式（客户端的被动）</li></ul><h2 id="Zabbix主动模式和被动模式的区别"><a href="#Zabbix主动模式和被动模式的区别" class="headerlink" title="Zabbix主动模式和被动模式的区别"></a>Zabbix主动模式和被动模式的区别</h2><ol><li>主动模式与被动模式区别<ul><li>被动模式 (Zabbix-server轮询检测zabbix-agent)</li><li>主动模式 (Zabbix-agent主动上报给Zabbix-server)</li></ul></li><li>主动模式与被被动模式选择如何选择<ul><li>当Queue里有大量延迟的监控项</li><li>当监控主机超过300+, 建议使用主动模式。</li></ul></li></ol><h1 id="zabbix自动发现（被动：网络发现）"><a href="#zabbix自动发现（被动：网络发现）" class="headerlink" title="zabbix自动发现（被动：网络发现）"></a>zabbix自动发现（被动：网络发现）</h1><h2 id="zabbix自动发现概述"><a href="#zabbix自动发现概述" class="headerlink" title="zabbix自动发现概述"></a>zabbix自动发现概述</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620204117954.png" alt="image-20230620204117954"></p><p>自动发现是由<code>服务端:Zabbix Server</code>发现都有哪些<code>客户端：Zabbix Agent</code></p><p>该工作模式是客户端被服务端发现，所以是客户端的被动工作模式</p><p><strong>自动发现属于被动模式</strong></p><p>Zabbix提供了有效和非常灵活的网络自动发现功能。</p><blockquote><p>当网络发现正确设置后你可以：<br>1.加快Zabbix部署<br>2.简化管理<br>3.无需过多管理就能在快速变化的环境中使用Zabbix</p></blockquote><hr><blockquote><p>Zabbix网络发现基于以下信息：<br>1.IP范围<br>2.可用的外部服务（FTP，SSH，WEB，POP3，IMAP，TCP等）<br>3.来自 zabbix agent 的信息（仅支持未加密模式）<br>4.来自 snmp agent 的信息</p></blockquote><hr><blockquote><p>不支持：<br>1.发现网络拓扑</p></blockquote><h2 id="配置自动发现"><a href="#配置自动发现" class="headerlink" title="配置自动发现"></a>配置自动发现</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620204224460.png" alt="image-20230620204224460"></p><p><strong>1.安装zabbix客户端</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y  https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/zabbix-agent-5.0.31-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><p><strong>2.修改客户端配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">Server=172.16.1.61</span><br><span class="line">Hostname=db01</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">systemctl start zabbix-agent</span><br></pre></td></tr></table></figure><p><strong>3.web页面配置自动发现</strong></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620204315214.png" alt="image-20230620204315214"></p><p><strong>4.配置发现后的动作</strong></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620204429086.png" alt="image-20230620204429086"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620204440494.png" alt="image-20230620204440494"></p><p><strong>发现主机之后：</strong></p><ul><li>添加监控模板</li><li>发送邮件通知</li><li>发送微信通知</li></ul><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620204454352.png" alt="image-20230620204454352"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620204533578.png" alt="image-20230620204533578"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">默认标题</span><br><span class="line">自动发现主机IP:&#123;DISCOVERY.DEVICE.IPADDRESS&#125;</span><br><span class="line"></span><br><span class="line">消息内容</span><br><span class="line">客户端名称: &#123;DISCOVERY.SERVICE.NAME&#125;</span><br><span class="line">客户端端口: &#123;DISCOVERY.SERVICE.PORT&#125;</span><br><span class="line">客户端状态: &#123;DISCOVERY.SERVICE.STATUS&#125;</span><br></pre></td></tr></table></figure><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620204602846.png" alt="image-20230620204602846"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620204710771.png" alt="image-20230620204710771"></p><h2 id="zabbix自动发现总结"><a href="#zabbix自动发现总结" class="headerlink" title="zabbix自动发现总结"></a>zabbix自动发现总结</h2><ol><li>网络发现速度太慢</li><li>轮询扫描网段</li><li>如果网段中存在不通的主机，会出现卡顿并且造成哦后续新增的服务器无法加入节点</li><li>会导致server性能变缓慢，影响server性能</li></ol><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620204745067.png" alt="image-20230620204745067"></p><h1 id="zabbix自动注册（主动）"><a href="#zabbix自动注册（主动）" class="headerlink" title="zabbix自动注册（主动）"></a>zabbix自动注册（主动）</h1><h2 id="zabbix自动注册的概述"><a href="#zabbix自动注册的概述" class="headerlink" title="zabbix自动注册的概述"></a>zabbix自动注册的概述</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620204751246.png" alt="image-20230620204751246"></p><p><em>Zabbix agent可以自动注册到服务器进行监控。这种方式无需在服务器上手动配置它们。自动注册官方手册</em></p><h2 id="配置自动注册"><a href="#配置自动注册" class="headerlink" title="配置自动注册"></a>配置自动注册</h2><p><strong>1.修改客户端配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">ServerActive=172.16.1.61</span><br></pre></td></tr></table></figure><p><strong>2.web页面创建动作</strong></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620204818055.png" alt="image-20230620204818055"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620204830128.png" alt="image-20230620204830128"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">自动注册主机IP:&#123;HOST.IP&#125;</span><br><span class="line"></span><br><span class="line">主机名: &#123;HOST.HOST&#125;</span><br><span class="line">主机IP: &#123;HOST.IP&#125;</span><br><span class="line">客户端端口: &#123;HOST.PORT&#125;</span><br></pre></td></tr></table></figure><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620204902910.png" alt="image-20230620204902910"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230620204920096.png" alt="image-20230620204920096"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;Zabbix自动化监控的概述&quot;&gt;&lt;a href=&quot;#Zabbix自动化监控的概述&quot; class=&quot;headerlink&quot; title=&quot;Zabbix自动化监控的概述&quot;&gt;&lt;/a&gt;Zabbix自动化监控的概述&lt;/h1&gt;&lt;h2 id=&quot;Zabb</summary>
      
    
    
    
    <category term="Zabbix" scheme="https://chenlinbb.github.io/categories/Zabbix/"/>
    
    
    <category term="自动化运维" scheme="https://chenlinbb.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/"/>
    
    <category term="应用监控" scheme="https://chenlinbb.github.io/tags/%E5%BA%94%E7%94%A8%E7%9B%91%E6%8E%A7/"/>
    
    <category term="数据分析" scheme="https://chenlinbb.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="Zabbix" scheme="https://chenlinbb.github.io/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>6.Zabbix深入应用监控</title>
    <link href="https://chenlinbb.github.io/archives/dc78c639.html"/>
    <id>https://chenlinbb.github.io/archives/dc78c639.html</id>
    <published>2024-07-17T14:15:13.388Z</published>
    <updated>2024-07-18T12:43:52.725Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="Zabbix监控Nginx"><a href="#Zabbix监控Nginx" class="headerlink" title="Zabbix监控Nginx"></a>Zabbix监控Nginx</h1><h2 id="配置监控Nginx的步骤"><a href="#配置监控Nginx的步骤" class="headerlink" title="配置监控Nginx的步骤"></a>配置监控Nginx的步骤</h2><h3 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h3><table><thead><tr><th>服务器系统</th><th>角色</th><th>IP</th></tr></thead><tbody><tr><td>CentOS 7.4 x86_64</td><td>Zabbix-Server</td><td>10.0.0.71</td></tr><tr><td>CentOS 7.4 x86_64</td><td>Zabbix-Agent</td><td>10.0.0.7</td></tr></tbody></table><h3 id="监控nginx"><a href="#监控nginx" class="headerlink" title="监控nginx"></a>监控nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nginx配置文件</span></span><br><span class="line">server&#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name _;</span><br><span class="line"></span><br><span class="line">location /nginx_status &#123;</span><br><span class="line">stub_status on;</span><br><span class="line">access_log off;</span><br><span class="line">allow 127.0.0.1;</span><br><span class="line">deny all;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建脚本目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /etc/zabbix/scripts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建脚本存放目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /etc/zabbix/scripts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑脚本</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">############################################################</span></span><br><span class="line"><span class="comment"># $Name:         nginx_status.sh</span></span><br><span class="line"><span class="comment"># $Version:      v1.0</span></span><br><span class="line"><span class="comment"># $Function:     Nginx Status</span></span><br><span class="line"><span class="comment"># $Author:       DriverZeng</span></span><br><span class="line"><span class="comment"># $organization: www.driverzeng.com</span></span><br><span class="line"><span class="comment"># $Create Date:  2016-06-23</span></span><br><span class="line"><span class="comment"># $Description:  Monitor Nginx Service Status</span></span><br><span class="line"><span class="comment">############################################################</span></span><br><span class="line"></span><br><span class="line">NGINX_PORT=80  <span class="comment">#如果端口不同仅需要修改脚本即可，否则修改xml很麻烦</span></span><br><span class="line">NGINX_COMMAND=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">nginx_active</span></span>()&#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">&quot;http://127.0.0.1:&quot;</span><span class="variable">$NGINX_PORT</span><span class="string">&quot;/nginx_status/&quot;</span> |awk <span class="string">&#x27;/Active/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">nginx_reading</span></span>()&#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">&quot;http://127.0.0.1:&quot;</span><span class="variable">$NGINX_PORT</span><span class="string">&quot;/nginx_status/&quot;</span> |awk <span class="string">&#x27;/Reading/ &#123;print $2&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">nginx_writing</span></span>()&#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">&quot;http://127.0.0.1:&quot;</span><span class="variable">$NGINX_PORT</span><span class="string">&quot;/nginx_status/&quot;</span> |awk <span class="string">&#x27;/Writing/ &#123;print $4&#125;&#x27;</span></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">nginx_waiting</span></span>()&#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">&quot;http://127.0.0.1:&quot;</span><span class="variable">$NGINX_PORT</span><span class="string">&quot;/nginx_status/&quot;</span> |awk <span class="string">&#x27;/Waiting/ &#123;print $6&#125;&#x27;</span></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">nginx_accepts</span></span>()&#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">&quot;http://127.0.0.1:&quot;</span><span class="variable">$NGINX_PORT</span><span class="string">&quot;/nginx_status/&quot;</span> |awk <span class="string">&#x27;NR==3 &#123;print $1&#125;&#x27;</span></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">nginx_handled</span></span>()&#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">&quot;http://127.0.0.1:&quot;</span><span class="variable">$NGINX_PORT</span><span class="string">&quot;/nginx_status/&quot;</span> |awk <span class="string">&#x27;NR==3 &#123;print $2&#125;&#x27;</span></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">nginx_requests</span></span>()&#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">&quot;http://127.0.0.1:&quot;</span><span class="variable">$NGINX_PORT</span><span class="string">&quot;/nginx_status/&quot;</span> |awk <span class="string">&#x27;NR==3 &#123;print $3&#125;&#x27;</span></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">case</span> <span class="variable">$NGINX_COMMAND</span> <span class="keyword">in</span></span><br><span class="line">    active)</span><br><span class="line">        nginx_active;</span><br><span class="line">        ;;</span><br><span class="line">    reading)</span><br><span class="line">        nginx_reading;</span><br><span class="line">        ;;</span><br><span class="line">    writing)</span><br><span class="line">        nginx_writing;</span><br><span class="line">        ;;</span><br><span class="line">    waiting)</span><br><span class="line">        nginx_waiting;</span><br><span class="line">        ;;</span><br><span class="line">    accepts)</span><br><span class="line">        nginx_accepts;</span><br><span class="line">        ;;</span><br><span class="line">    handled)</span><br><span class="line">        nginx_handled;</span><br><span class="line">        ;;</span><br><span class="line">    requests)</span><br><span class="line">        nginx_requests;</span><br><span class="line">        ;;</span><br><span class="line">          *)</span><br><span class="line">        <span class="built_in">echo</span> $<span class="string">&quot;USAGE:<span class="variable">$0</span> &#123;active|reading|writing|waiting|accepts|handled|requests&#125;&quot;</span></span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> +x /etc/zabbix/scripts/jk.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置监控项</span></span><br><span class="line">UserParameter=nginx_status[*],/bin/bash /etc/zabbix/scripts/jk.sh <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="网页配置"><a href="#网页配置" class="headerlink" title="网页配置"></a>网页配置</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230326211126972.png" alt="image-20230326211126972"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230326211135166.png" alt="image-20230326211135166"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230326211139293.png" alt="image-20230326211139293"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230326211143409.png" alt="image-20230326211143409"></p><h1 id="zabbix监控php"><a href="#zabbix监控php" class="headerlink" title="zabbix监控php"></a>zabbix监控php</h1><h2 id="配置监控php的步骤"><a href="#配置监控php的步骤" class="headerlink" title="配置监控php的步骤"></a>配置监控php的步骤</h2><h3 id="实验环境-1"><a href="#实验环境-1" class="headerlink" title="实验环境"></a>实验环境</h3><table><thead><tr><th>服务器系统</th><th>角色</th><th>IP</th></tr></thead><tbody><tr><td>CentOS 7.4 x86_64</td><td>Zabbix-Server</td><td>10.0.0.71</td></tr><tr><td>CentOS 7.4 x86_64</td><td>Zabbix-Agent</td><td>10.0.0.7</td></tr></tbody></table><h3 id="修改php配置"><a href="#修改php配置" class="headerlink" title="修改php配置"></a>修改php配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/php-fpm.d/www.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开php状态模板</span></span><br><span class="line">pm.status_path = /phpfpm_status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启php</span></span><br><span class="line">systemctl restart php-fpm</span><br></pre></td></tr></table></figure><h3 id="修改nginx配置"><a href="#修改nginx配置" class="headerlink" title="修改nginx配置"></a>修改nginx配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑nginx配置文件</span></span><br><span class="line">server&#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name _;</span><br><span class="line"></span><br><span class="line">        location /nginx_status &#123;</span><br><span class="line">                stub_status on;</span><br><span class="line">                access_log  off;</span><br><span class="line">                allow 127.0.0.1;</span><br><span class="line">                deny all;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~ ^/(phpfpm_status)$ &#123;</span><br><span class="line">                include fastcgi_params;</span><br><span class="line">                fastcgi_pass    127.0.0.1:9000;</span><br><span class="line">                fastcgi_param SCRIPT_FILENAME $document_root<span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启nginx</span></span><br><span class="line">systemctl restart nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看php状态</span></span><br><span class="line">curl http://127.0.0.1/phpfpm_status</span><br><span class="line"></span><br><span class="line">pool: www</span><br><span class="line">process manager: dynamic</span><br><span class="line">start time: 24/Mar/2023:17:22:53 +0800</span><br><span class="line">start since: 13</span><br><span class="line">accepted conn: 1</span><br><span class="line">listen queue: 0</span><br><span class="line">max listen queue: 0</span><br><span class="line">listen queue len: 128</span><br><span class="line">idle processes: 4</span><br><span class="line">active processes: 1</span><br><span class="line">total processes: 5</span><br><span class="line">max active processes: 1</span><br><span class="line">max children reached: 0</span><br><span class="line">slow requests: 0</span><br><span class="line"></span><br><span class="line"><span class="comment">## PHP-FPM状态解释：</span></span><br><span class="line">pool                <span class="comment">#fpm池名称,大多数为www</span></span><br><span class="line">process manager     <span class="comment">#进程管理方式dynamic或者static</span></span><br><span class="line">start time          <span class="comment">#启动日志,如果reload了fpm，时间会更新</span></span><br><span class="line">start since         <span class="comment">#运行时间</span></span><br><span class="line">accepted conn       <span class="comment">#当前池接受的请求数</span></span><br><span class="line">listen queue        <span class="comment">#请求等待队列,如果这个值不为0,那么需要增加FPM的进程数量</span></span><br><span class="line">max listen queue    <span class="comment">#请求等待队列最高的数量</span></span><br><span class="line">listen queue len    <span class="comment">#socket等待队列长度</span></span><br><span class="line">idle processes      <span class="comment">#空闲进程数量</span></span><br><span class="line">active processes    <span class="comment">#活跃进程数量</span></span><br><span class="line">total processes     <span class="comment">#总进程数量</span></span><br><span class="line">max active processes<span class="comment">#最大的活跃进程数量（FPM启动开始计算）</span></span><br><span class="line">max children reached<span class="comment">#程最大数量限制的次数，如果这个数量不为0，那说明你的最大进程数量过小,可以适当调整。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑脚本</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">############################################################</span></span><br><span class="line"><span class="comment"># $Name:         phpfpm_status.sh</span></span><br><span class="line"><span class="comment"># $Version:      v1.0</span></span><br><span class="line"><span class="comment"># $Function:     Nginx Status</span></span><br><span class="line"><span class="comment"># $Author:       DriverZeng</span></span><br><span class="line"><span class="comment"># $organization: www.driverzeng.com</span></span><br><span class="line"><span class="comment"># $Create Date:  2016-06-23</span></span><br><span class="line"><span class="comment"># $Description:  Monitor Nginx Service Status</span></span><br><span class="line"><span class="comment">############################################################</span></span><br><span class="line"></span><br><span class="line">PHPFPM_COMMAND=<span class="variable">$1</span></span><br><span class="line">PHPFPM_PORT=80  <span class="comment">#根据监听不同端口进行调整</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start_since</span></span>()&#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">&quot;http://127.0.0.1:&quot;</span><span class="variable">$PHPFPM_PORT</span><span class="string">&quot;/phpfpm_status&quot;</span> |awk <span class="string">&#x27;/^start since:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">accepted_conn</span></span>()&#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">&quot;http://127.0.0.1:&quot;</span><span class="variable">$PHPFPM_PORT</span><span class="string">&quot;/phpfpm_status&quot;</span> |awk <span class="string">&#x27;/^accepted conn:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">listen_queue</span></span>()&#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">&quot;http://127.0.0.1:&quot;</span><span class="variable">$PHPFPM_PORT</span><span class="string">&quot;/phpfpm_status&quot;</span> |awk <span class="string">&#x27;/^listen queue:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">max_listen_queue</span></span>()&#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">&quot;http://127.0.0.1:&quot;</span><span class="variable">$PHPFPM_PORT</span><span class="string">&quot;/phpfpm_status&quot;</span> |awk <span class="string">&#x27;/^max listen queue:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">listen_queue_len</span></span>()&#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">&quot;http://127.0.0.1:&quot;</span><span class="variable">$PHPFPM_PORT</span><span class="string">&quot;/phpfpm_status&quot;</span> |awk <span class="string">&#x27;/^listen queue len:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">idle_processes</span></span>()&#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">&quot;http://127.0.0.1:&quot;</span><span class="variable">$PHPFPM_PORT</span><span class="string">&quot;/phpfpm_status&quot;</span> |awk <span class="string">&#x27;/^idle processes:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">active_processes</span></span>()&#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">&quot;http://127.0.0.1:&quot;</span><span class="variable">$PHPFPM_PORT</span><span class="string">&quot;/phpfpm_status&quot;</span> |awk <span class="string">&#x27;/^active processes:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">total_processes</span></span>()&#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">&quot;http://127.0.0.1:&quot;</span><span class="variable">$PHPFPM_PORT</span><span class="string">&quot;/phpfpm_status&quot;</span> |awk <span class="string">&#x27;/^total processes:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">max_active_processes</span></span>()&#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">&quot;http://127.0.0.1:&quot;</span><span class="variable">$PHPFPM_PORT</span><span class="string">&quot;/phpfpm_status&quot;</span> |awk <span class="string">&#x27;/^max active processes:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">max_children_reached</span></span>()&#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">&quot;http://127.0.0.1:&quot;</span><span class="variable">$PHPFPM_PORT</span><span class="string">&quot;/phpfpm_status&quot;</span> |awk <span class="string">&#x27;/^max children reached:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">slow_requests</span></span>()&#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">&quot;http://127.0.0.1:&quot;</span><span class="variable">$PHPFPM_PORT</span><span class="string">&quot;/phpfpm_status&quot;</span> |awk <span class="string">&#x27;/^slow requests:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$PHPFPM_COMMAND</span> <span class="keyword">in</span></span><br><span class="line">    start_since)</span><br><span class="line">        start_since;</span><br><span class="line">        ;;</span><br><span class="line">    accepted_conn)</span><br><span class="line">        accepted_conn;</span><br><span class="line">        ;;</span><br><span class="line">    listen_queue)</span><br><span class="line">        listen_queue;</span><br><span class="line">        ;;</span><br><span class="line">    max_listen_queue)</span><br><span class="line">        max_listen_queue;</span><br><span class="line">        ;;</span><br><span class="line">    listen_queue_len)</span><br><span class="line">        listen_queue_len;</span><br><span class="line">        ;;</span><br><span class="line">    idle_processes)</span><br><span class="line">        idle_processes;</span><br><span class="line">        ;;</span><br><span class="line">    active_processes)</span><br><span class="line">        active_processes;</span><br><span class="line">        ;;</span><br><span class="line">        total_processes)</span><br><span class="line">                total_processes;</span><br><span class="line">                ;;</span><br><span class="line">        max_active_processes)</span><br><span class="line">                max_active_processes;</span><br><span class="line">                ;;</span><br><span class="line">        max_children_reached)</span><br><span class="line">                max_children_reached;</span><br><span class="line">                ;;</span><br><span class="line">        slow_requests)</span><br><span class="line">                slow_requests;</span><br><span class="line">                ;;</span><br><span class="line">          *)</span><br><span class="line">        <span class="built_in">echo</span> $<span class="string">&quot;USAGE:<span class="variable">$0</span> &#123;start_since|accepted_conn|listen_queue|max_listen_queue|listen_queue_len|idle_processes|active_processes|total_processes|max_active_processes|max_children_reached&#125;&quot;</span></span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> +x /etc/zabbix/scripts/phpjk.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置监控项配置文件</span></span><br><span class="line">vim php.jk.conf</span><br><span class="line">UserParameter=phpfpm_status[*],/bin/bash /etc/zabbix/scripts/phpjk.sh <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启zabbixagent</span></span><br><span class="line">systemctl restart zabbix-agent.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测是否能监控到</span></span><br><span class="line">zabbix_get -s 172.16.1.7 -k</span><br><span class="line">phpfpm_status[start_since]</span><br><span class="line">482</span><br></pre></td></tr></table></figure><h2 id="网页配置-1"><a href="#网页配置-1" class="headerlink" title="网页配置"></a>网页配置</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230326211546452.png" alt="image-20230326211546452"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230326211550033.png" alt="image-20230326211550033"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230326211555810.png" alt="image-20230326211555810"></p><h1 id="Zabbix监控JVM"><a href="#Zabbix监控JVM" class="headerlink" title="Zabbix监控JVM"></a>Zabbix监控JVM</h1><p>在Zabbix中，JMX监控数据的获取由专门的代理程序来实现,即Zabbix-Java-Gateway来负责数据的采集，Zabbix-Java-Gateway和JMX的Java程序之间通信获取数据</p><h2 id="JMX在Zabbix中的运行流程"><a href="#JMX在Zabbix中的运行流程" class="headerlink" title="JMX在Zabbix中的运行流程"></a>JMX在Zabbix中的运行流程</h2><ol><li><strong>Zabbix-Server</strong>找<strong>Zabbix-Java-Gateway</strong>获取Java数据</li><li><strong>Zabbix-Java-Gateway</strong>找Java程序服务器部署的<strong>zabbix-agent</strong>获取数据</li><li>Java程序返回数据给<strong>Zabbix-Java-Gateway</strong></li><li><strong>Zabbix-Java-Gateway</strong>返回数据给<strong>Zabbix-Server</strong></li><li><strong>Zabbix-Server</strong>进行数据展示</li></ol><h2 id="配置JMX监控的步骤"><a href="#配置JMX监控的步骤" class="headerlink" title="配置JMX监控的步骤"></a>配置JMX监控的步骤</h2><ol><li>安装Zabbix-Java-Gateway</li><li>配置zabbix_java_gateway.conf参数</li><li>配置zabbix-server.conf参数</li><li>Tomcat应用开启JMX协议</li><li>ZabbixWeb配置JMX监控的Java应用</li></ol><h3 id="实践环境"><a href="#实践环境" class="headerlink" title="实践环境"></a>实践环境</h3><table><thead><tr><th>服务器系统</th><th>角色</th><th>IP</th></tr></thead><tbody><tr><td>CentOS 7.4 x86_64</td><td>Zabbix-Server</td><td>10.0.0.8</td></tr><tr><td>CentOS 7.4 x86_64</td><td>Zabbix-java-gateway</td><td>10.0.0.8</td></tr><tr><td>CentOS 7.4 x86_64</td><td>Zabbix-Agent</td><td>10.0.0.7</td></tr></tbody></table><h3 id="zabbix服务端"><a href="#zabbix服务端" class="headerlink" title="zabbix服务端"></a>zabbix服务端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装java</span></span><br><span class="line">yum install java-1.8.0-openjdk -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装对应版本的zabbix-java-gateway(如果源码安装加上--enable-java参数)</span></span><br><span class="line">rpm -ivh https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/zabbix-java-gateway-5.0.32-1.el7.x86_64.rpm?spm=a2c6h.25603864.0.0.54a02e2feKZO9Z</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置zabbix-java-gateway</span></span><br><span class="line">vim /etc/zabbix/zabbix_java_gateway.conf</span><br><span class="line">LISTEN_IP=<span class="string">&quot;172.16.1.9&quot;</span> <span class="comment"># 服务端IP</span></span><br><span class="line">LISTEN_PORT=10052</span><br><span class="line">PID_FILE=<span class="string">&quot;/var/run/zabbix/zabbix_java_gateway.pid&quot;</span></span><br><span class="line">START_POLLERS=32</span><br><span class="line">TIMEOUT=30</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动zabbix-java-gateway</span></span><br><span class="line">systemctl start zabbix-java-gateway</span><br><span class="line">netstat -lntup|grep 10052</span><br><span class="line">tcp6       0      0 :::10052      :::*           LISTEN      13042/java</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改zabbix-server 配置文件</span></span><br><span class="line">vim /etc/zabbix/zabbix_server.conf</span><br><span class="line">JavaGateway=10.0.0.7 <span class="comment"># java gateway地址</span></span><br><span class="line">JavaGatewayPort=10052<span class="comment"># java gateway默认端口10052</span></span><br><span class="line">StartJavaPollers=5   <span class="comment"># 启动进程轮询java gateway</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启zabbix-server</span></span><br><span class="line">systemctl restart zabbix-server</span><br></pre></td></tr></table></figure><h3 id="zabbix客户端"><a href="#zabbix客户端" class="headerlink" title="zabbix客户端"></a>zabbix客户端</h3><p><strong>yum安装tomcat</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装tomcat</span></span><br><span class="line">yum install -y tomcat</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改tomcat启动文件</span></span><br><span class="line">vim /usr/libexec/tomcat/server</span><br><span class="line">FLAGS=<span class="string">&quot;<span class="variable">$JAVA_OPTS</span>&quot;</span><span class="comment"># 在此行下面加入以下内容</span></span><br><span class="line">CATALINA_OPTS=<span class="string">&quot;<span class="variable">$CATALINA_OPTS</span> </span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.port=12345</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.authenticate=false</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=10.0.0.53&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># jvm配置文件解析</span></span><br><span class="line">CATALINA_OPTS=<span class="string">&quot;<span class="variable">$CATALINA_OPTS</span></span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote                   # 启用远程监控JMX</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.port=12345        # jmx启用远程端口,Zabbix添加时必须一致</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.authenticate=false# 不开启用户密码认证</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.ssl=false         # 不启用ssl加密传输</span></span><br><span class="line"><span class="string">-Djava.rmi.server.hostname=10.0.0.7&quot;</span>             <span class="comment"># 运行tomcat主机的IP地址</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动tomcat</span></span><br><span class="line">systemctl start tomcat</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查端口是否启用</span></span><br><span class="line">netstat -lntup|grep 12345</span><br></pre></td></tr></table></figure><p><strong>绿色安装tomcat(压缩包免安装)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装tomcat服务</span></span><br><span class="line"><span class="built_in">mkdir</span> /soft/package/src -p</span><br><span class="line">wget https://mirrors.aliyun.com/apache/tomcat/tomcat-9/v9.0.73/bin/apache-tomcat-9.0.73.tar.gz</span><br><span class="line">tar xf apache-tomcat-9.0.73.tar.gz -C /soft/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建tomcat软连接</span></span><br><span class="line"><span class="built_in">ln</span> -s /soft/apache-tomcat-9.0.73/ /soft/tomcat</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启tomcat的远程jvm配置文件</span></span><br><span class="line">vim /soft/apache-tomcat-9.0.73/bin/catalina.sh</span><br><span class="line">CATALINA_OPTS=<span class="string">&quot;<span class="variable">$CATALINA_OPTS</span> </span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.port=12345</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.authenticate=false</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=10.0.0.53&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># jvm配置文件解析</span></span><br><span class="line">CATALINA_OPTS=<span class="string">&quot;<span class="variable">$CATALINA_OPTS</span></span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote                   # 启用远程监控JMX</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.port=12345        # jmx启用远程端口,Zabbix添加时必须一致</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.authenticate=false# 不开启用户密码认证</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.ssl=false         # 不启用ssl加密传输</span></span><br><span class="line"><span class="string">-Djava.rmi.server.hostname=10.0.0.7&quot;</span>             <span class="comment"># 运行tomcat主机的IP地址</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启tomcat服务</span></span><br><span class="line">sh /soft/apache-tomcat-9.0.73/bin/shutdown.sh</span><br><span class="line">sh /soft/apache-tomcat-9.0.73/bin/startup.sh</span><br></pre></td></tr></table></figure><h2 id="网页配置-zabbix添加tomcat主机-并添加Zabbix自带java监控模板"><a href="#网页配置-zabbix添加tomcat主机-并添加Zabbix自带java监控模板" class="headerlink" title="网页配置(zabbix添加tomcat主机,并添加Zabbix自带java监控模板)"></a>网页配置(zabbix添加tomcat主机,并添加Zabbix自带java监控模板)</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230327000822638.png" alt="image-20230327000822638"></p><h1 id="Zabbix监控MySQL"><a href="#Zabbix监控MySQL" class="headerlink" title="Zabbix监控MySQL"></a>Zabbix监控MySQL</h1><h2 id="网页配置监控"><a href="#网页配置监控" class="headerlink" title="网页配置监控"></a>网页配置监控</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装mariadb</span></span><br><span class="line">yum install -y mariadb-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动mariadb</span></span><br><span class="line">systemctl start mariadb</span><br></pre></td></tr></table></figure><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230327204840569.png" alt="image-20230327204840569"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230327204842072.png" alt="image-20230327204842072"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230327204845366.png" alt="image-20230327204845366"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230327204847777.png" alt="image-20230327204847777"></p><h2 id="手动配置监控"><a href="#手动配置监控" class="headerlink" title="手动配置监控"></a>手动配置监控</h2><p>percona Monitoring Plugins 是一个高质量的组件，为MySQL 数据库添加企业级的监控和图表功能。但其脚本使<br>用PHP 实现，故而Zabbix-Agent 需要安装PHP 环境。</p><p><a href="https://www.percona.com/software/documentation">percona工具集</a></p><h3 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h3><table><thead><tr><th>服务器系统</th><th>角色</th><th>IP</th></tr></thead><tbody><tr><td>CentOS 7.4 x86_64</td><td>Zabbix-Server</td><td>10.0.0.8</td></tr><tr><td>CentOS 7.4 x86_64</td><td>Zabbix-Agent</td><td>10.0.0.7</td></tr></tbody></table><h3 id="配置流程"><a href="#配置流程" class="headerlink" title="配置流程"></a>配置流程</h3><ol><li><p>在Zabbix-Agent 端安装percona Monitoring Plugins</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install -y http://www.percona.com/downloads/perconarelease/</span><br><span class="line">redhat/0.1-3/percona-release-0.1-3.noarch.rpm</span><br><span class="line">yum install percona-zabbix-templates -y</span><br></pre></td></tr></table></figure></li><li><p>查看percona 安装后的目录结构</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tree /var/lib/zabbix/percona</span><br><span class="line">/var/lib/zabbix/percona</span><br><span class="line">├── scripts <span class="comment">#脚本文件路径</span></span><br><span class="line">│ ├── get_mysql_stats_wrapper.sh</span><br><span class="line">│ └── ss_get_mysql_stats.php</span><br><span class="line">└── templates</span><br><span class="line">  ├── userparameter_percona_mysql.conf <span class="comment">#key文件位置</span></span><br><span class="line">  └── zabbix_agent_template_percona_mysql_server_ht_2.0.9-sver1.1.6.xml <span class="comment">#模板文件位置</span></span><br></pre></td></tr></table></figure></li><li><p>将自定义监控项配置文件复制至/etc/zabbix_agentd.conf.d 目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> /var/lib/zabbix/percona/templates/userparameter_percona_mysql.conf</span><br><span class="line">/etc/zabbix/zabbix_agentd.d/percona_mysql.conf</span><br></pre></td></tr></table></figure></li><li><p>重启zabbix-agent</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart 1 zabbix-agent</span><br></pre></td></tr></table></figure></li><li><p>修改脚本中的MySQL 用户名和密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /var/lib/zabbix/percona/scripts/ss_get_mysql_stats.php</span><br><span class="line"><span class="variable">$mysql_user</span> = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="variable">$mysql_pass</span> = <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"><span class="variable">$mysql_port</span> = 3306;</span><br></pre></td></tr></table></figure></li><li><p>在Zabbix-Server 端上使用Zabbix_get 获取值(否则会失败)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">zabbix_get -s 10.0.0.7 -k MySQL.pool-read-requests</span><br><span class="line">223003813</span><br><span class="line">//如果获取不到值常见问题</span><br><span class="line">1.看是否是MySQL密码错误</span><br><span class="line">2.不要直接执行脚本来获取</span><br><span class="line">3.删除/tmp/localhost-mysql_cacti_stats.txt文件</span><br><span class="line">4.权限问题导致</span><br></pre></td></tr></table></figure></li><li><p>在Zabbix页面模板选项中导入Percona模板, 模板存放在/var/lib/zabbix/percona/templates ， 最后关联主机即可。</p></li></ol><h1 id="Zabbix监控redis"><a href="#Zabbix监控redis" class="headerlink" title="Zabbix监控redis"></a>Zabbix监控redis</h1><h2 id="网页配置监控-1"><a href="#网页配置监控-1" class="headerlink" title="网页配置监控"></a>网页配置监控</h2><p>安装redis</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装redis</span></span><br><span class="line">yum install -y redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动redis</span></span><br><span class="line">systemctl start redis</span><br></pre></td></tr></table></figure><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230327205641046.png" alt="image-20230327205641046"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230327205644001.png" alt="image-20230327205644001"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230327205647133.png" alt="image-20230327205647133"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230327205649803.png" alt="image-20230327205649803"></p><h2 id="手动配置监控-1"><a href="#手动配置监控-1" class="headerlink" title="手动配置监控"></a>手动配置监控</h2><p>Redis 使用自带的INFO 命令，进行状态监控。以一种易于解释且易于阅读的格式，返回关于Redis 服务器的各种信息和统计数值。</p><h3 id="准备环境-1"><a href="#准备环境-1" class="headerlink" title="准备环境"></a>准备环境</h3><table><thead><tr><th>服务器系统</th><th>角色</th><th>IP</th></tr></thead><tbody><tr><td>CentOS 7.4 x86_64</td><td>Zabbix-Server</td><td>10.0.0.8</td></tr><tr><td>CentOS 7.4 x86_64</td><td>Zabbix-Agent</td><td>10.0.0.7</td></tr></tbody></table><h3 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h3><ol><li><p>编写Shell脚本</p><ul><li>脚本端口、连接redis服务地址根据具体情况进行修改</li><li>AUTH认证没有开启，将PASSWD修改为空即可。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /etc/zabbix/scripts</span><br><span class="line"></span><br><span class="line">vim /etc/zabbix/scripts/redis_status.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">############################################################</span></span><br><span class="line"><span class="comment"># $Name: redis_status.sh</span></span><br><span class="line"><span class="comment"># $Version: v1.0</span></span><br><span class="line"><span class="comment"># $Function: Redis Status</span></span><br><span class="line"><span class="comment"># $Author: DriverZeng</span></span><br><span class="line"><span class="comment"># $organization: www.driverzeng.com</span></span><br><span class="line"><span class="comment"># $Create Date: 2016-06-23</span></span><br><span class="line"><span class="comment"># $Description: Monitor Redis Service Status</span></span><br><span class="line"><span class="comment">############################################################</span></span><br><span class="line"></span><br><span class="line">R_COMMAND=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">R_PORT=<span class="string">&quot;6379&quot;</span> <span class="comment">#根据实际情况调整端口</span></span><br><span class="line">R_SERVER=<span class="string">&quot;127.0.0.1&quot;</span> <span class="comment">#根据具体情况调整IP地址</span></span><br><span class="line">PASSWD=<span class="string">&quot;&quot;</span> <span class="comment">#如果没有设置Redis密码,为空即可</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">redis_status</span></span>()&#123;</span><br><span class="line">(<span class="built_in">echo</span> -en <span class="string">&quot;AUTH <span class="variable">$PASSWD</span>\r\nINFO\r\n&quot;</span>;<span class="built_in">sleep</span> 1;) | /usr/bin/nc <span class="string">&quot;<span class="variable">$R_SERVER</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span></span><br><span class="line">&gt; /tmp/redis_<span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span>.tmp</span><br><span class="line">REDIS_STAT_VALUE=$(grep <span class="string">&quot;<span class="variable">$R_COMMAND</span>:&quot;</span> /tmp/redis_<span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span>.tmp | <span class="built_in">cut</span> -d <span class="string">&#x27;:&#x27;</span> -f2)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$REDIS_STAT_VALUE</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$R_COMMAND</span> <span class="keyword">in</span></span><br><span class="line">used_cpu_user_children)</span><br><span class="line">redis_status <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_COMMAND</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">used_cpu_sys)</span><br><span class="line">redis_status <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_COMMAND</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">total_commands_processed)</span><br><span class="line">redis_status <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_COMMAND</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">role)</span><br><span class="line">redis_status <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_COMMAND</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">lru_clock)</span><br><span class="line">redis_status <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_COMMAND</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">latest_fork_usec)</span><br><span class="line">redis_status <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_COMMAND</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">keyspace_misses)</span><br><span class="line">redis_status <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_COMMAND</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">keyspace_hits)</span><br><span class="line">redis_status <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_COMMAND</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">keys)</span><br><span class="line">redis_status <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_COMMAND</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">expires)</span><br><span class="line">redis_status <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_COMMAND</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">expired_keys)</span><br><span class="line">redis_status <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_COMMAND</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">evicted_keys)</span><br><span class="line">redis_status <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_COMMAND</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">connected_clients)</span><br><span class="line">redis_status <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_COMMAND</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">changes_since_last_save)</span><br><span class="line">redis_status <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_COMMAND</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">blocked_clients)</span><br><span class="line">redis_status <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_COMMAND</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">bgsave_in_progress)</span><br><span class="line">redis_status <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_COMMAND</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">bgrewriteaof_in_progress)</span><br><span class="line">redis_status <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_COMMAND</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">used_memory_peak)</span><br><span class="line">redis_status <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_COMMAND</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">used_memory)</span><br><span class="line">redis_status <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_COMMAND</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">used_cpu_user)</span><br><span class="line">redis_status <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_COMMAND</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">used_cpu_sys_children)</span><br><span class="line">redis_status <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_COMMAND</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">total_connections_received)</span><br><span class="line">redis_status <span class="string">&quot;<span class="variable">$R_PORT</span>&quot;</span> <span class="string">&quot;<span class="variable">$R_COMMAND</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">echo</span> $<span class="string">&quot;USAGE:<span class="variable">$0</span></span></span><br><span class="line"><span class="string">&#123;used_cpu_user_children|used_cpu_sys|total_commands_processed|role|lru_clock|latest_fork_usec|keyspace_misses|keyspace_hits|keys|expires|expired_keys|connected_clients|changes_since_last_save|blocked_clients|bgrewriteaof_in_progress|used_memory_peak|used_memory|used_cpu_user|used_cpu_sys_children|total_connections_received&#125;&quot;</span></span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><ul><li>Redis状态参数解释：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">server : Redis 服务器信息，包含以下域：</span><br><span class="line">redis_version : Redis 服务器版本</span><br><span class="line">redis_git_sha1 : Git SHA1</span><br><span class="line">redis_git_dirty : Git dirty flag</span><br><span class="line">os : Redis 服务器的宿主操作系统</span><br><span class="line">arch_bits : 架构（32 或 64 位）</span><br><span class="line">multiplexing_api : Redis 所使用的事件处理机制</span><br><span class="line">gcc_version : 编译 Redis 时所使用的 GCC 版本</span><br><span class="line">process_id : 服务器进程的 PID</span><br><span class="line">run_id : Redis 服务器的随机标识符（用于 Sentinel 和集群）</span><br><span class="line">tcp_port : TCP/IP 监听端口</span><br><span class="line">uptime_in_seconds : 自 Redis 服务器启动以来，经过的秒数</span><br><span class="line">uptime_in_days : 自 Redis 服务器启动以来，经过的天数</span><br><span class="line">lru_clock : 以分钟为单位进行自增的时钟，用于 LRU 管理</span><br><span class="line">clients : 已连接客户端信息，包含以下域：</span><br><span class="line">connected_clients : 已连接客户端的数量（不包括通过从属服务器连接的客户端）</span><br><span class="line">client_longest_output_list : 当前连接的客户端当中，最长的输出列表</span><br><span class="line">client_longest_input_buf : 当前连接的客户端当中，最大输入缓存</span><br><span class="line">blocked_clients : 正在等待阻塞命令（BLPOP、BRPOP、BRPOPLPUSH）的客户端的数量</span><br><span class="line">memory : 内存信息，包含以下域：</span><br><span class="line">used_memory : 由 Redis 分配器分配的内存总量，以字节（byte）为单位</span><br><span class="line">used_memory_human : 以人类可读的格式返回 Redis 分配的内存总量</span><br><span class="line">used_memory_rss : 从操作系统的角度，返回 Redis 已分配的内存总量（俗称常驻集大小）。这个值和 top 、ps 等命令的输出一致。</span><br><span class="line">used_memory_peak : Redis 的内存消耗峰值（以字节为单位）</span><br><span class="line">used_memory_peak_human : 以人类可读的格式返回 Redis 的内存消耗峰值</span><br><span class="line">used_memory_lua : Lua 引擎所使用的内存大小（以字节为单位）</span><br><span class="line">mem_fragmentation_ratio : used_memory_rss 和 used_memory 之间的比率</span><br><span class="line">persistence : RDB 和 AOF 的相关信息</span><br><span class="line">stats : 一般统计信息</span><br><span class="line">replication : 主/从复制信息</span><br><span class="line">cpu : CPU 计算量统计信息</span><br><span class="line">commandstats : Redis 命令统计信息</span><br><span class="line">cluster : Redis 集群信息</span><br><span class="line">keyspace : 数据库相关的统计信息</span><br><span class="line">参数还可以是下面这两个：</span><br><span class="line">all : 返回所有信息</span><br><span class="line">default : 返回默认选择的信息</span><br><span class="line">当不带参数直接调用 INFO 命令时，使用 default 作为默认参数。</span><br></pre></td></tr></table></figure></li><li><p>添加脚本执行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x /etc/zabbix/scripts/1 redis_status.sh</span><br></pre></td></tr></table></figure></li><li><p>Zabbix权限不足处理办法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -f /tmp/redis_6379.tmp</span><br></pre></td></tr></table></figure></li><li><p>key的redis_status.conf 的配置文件如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/zabbix/zabbix_agentd.d/redis_status.conf</span><br><span class="line">UserParameter=redis_status[*],/bin/bash /etc/zabbix/scripts/redis_status.sh <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>重启zabbix-agent</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart 1 zabbix-agent</span><br></pre></td></tr></table></figure></li><li><p>在Zabbix-Server 使用Zabbix_get 获取值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zabbix_get -s 10.0.0.7 -k redis_status[used_cpu_sys]</span><br><span class="line">16.81</span><br></pre></td></tr></table></figure></li></ol><h1 id="zabbix监控web"><a href="#zabbix监控web" class="headerlink" title="zabbix监控web"></a>zabbix监控web</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 域名解析</span></span><br><span class="line">vim /etc/hosts</span><br><span class="line">172.16.1.71 zabbix.xxx.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟访问url</span></span><br><span class="line">curl -L -c cook <span class="string">&#x27;http://zabbix.xxx.com/index.php&#x27;</span></span><br><span class="line">-b <span class="comment"># cookie字符串或文件读取位置，使用option来把上次的cookie信息追加到http request里面去。</span></span><br><span class="line">-c <span class="comment"># 操作结束后把cookie写入到这个文件中</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看本地cook</span></span><br><span class="line"><span class="built_in">cat</span> cook</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟访问并登陆url</span></span><br><span class="line">curl -L -c cook -b cook -d <span class="string">&#x27;name=Admin&amp;password=zabbix&amp;autologin=1&amp;enter=Sign+in&#x27;</span> <span class="string">&#x27;http://zabbix.xxx.com/index.php&#x27;</span></span><br><span class="line"></span><br><span class="line">curl -L -c cook -b cook <span class="string">&#x27;http://zabbix.xxx.com/queue.php&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="Web场景监测网页配置"><a href="#Web场景监测网页配置" class="headerlink" title="Web场景监测网页配置"></a>Web场景监测网页配置</h2><p>我们使用Zabbix Web 监控来监控Zabbix的Web界面。我们想知道它是否可用、是否正常工作以及响应速度。所以我们必须使用用户名和密码登录。</p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230327212206810.png" alt="image-20230327212206810"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230327212209693.png" alt="image-20230327212209693"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230327212212674.png" alt="image-20230327212212674"></p><p><strong>访问zabbix</strong></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230327212243080.png" alt="image-20230327212243080"></p><p><strong>登录zabbix</strong></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230327212254390.png" alt="image-20230327212254390"></p><p><strong>检查zabbix</strong></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230327212304038.png" alt="image-20230327212304038"></p><h4 id="退出zabbix"><a href="#退出zabbix" class="headerlink" title="退出zabbix"></a>退出zabbix</h4><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230327212312310.png" alt="image-20230327212312310"></p><p><strong>检查是否注销</strong></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230327212320601.png" alt="image-20230327212320601"></p><p><strong>汇总</strong></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230327212328805.png" alt="image-20230327212328805"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230327212334312.png" alt="image-20230327212334312"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;Zabbix监控Nginx&quot;&gt;&lt;a href=&quot;#Zabbix监控Nginx&quot; class=&quot;headerlink&quot; title=&quot;Zabbix监控Nginx&quot;&gt;&lt;/a&gt;Zabbix监控Nginx&lt;/h1&gt;&lt;h2 id=&quot;配置监控Ngin</summary>
      
    
    
    
    <category term="Zabbix" scheme="https://chenlinbb.github.io/categories/Zabbix/"/>
    
    
    <category term="自动化运维" scheme="https://chenlinbb.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/"/>
    
    <category term="应用监控" scheme="https://chenlinbb.github.io/tags/%E5%BA%94%E7%94%A8%E7%9B%91%E6%8E%A7/"/>
    
    <category term="数据分析" scheme="https://chenlinbb.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="Zabbix" scheme="https://chenlinbb.github.io/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>5.Zabbix自愈模式、报警升级和自定义图形</title>
    <link href="https://chenlinbb.github.io/archives/6e4f08aa.html"/>
    <id>https://chenlinbb.github.io/archives/6e4f08aa.html</id>
    <published>2024-07-17T14:15:13.386Z</published>
    <updated>2024-07-18T12:43:52.722Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="Zabbix自愈模式"><a href="#Zabbix自愈模式" class="headerlink" title="Zabbix自愈模式"></a>Zabbix自愈模式</h1><p>有些时候，我们的服务宕机了，或者有些服务停掉了，那么我们可以先尝试让他启动，看是否能起的来，为了不影响用户的体验，先把服务起起来，然后再去排查，是什么原因故障的。<br>那么此时我们就需要用到zabbix的自愈模式，这个…叫起来很好听，说白了，就是在让zabbix-server通过远程执行命令的方式，在agent上执行命令，启动服务。</p><h2 id="步骤流程指示图"><a href="#步骤流程指示图" class="headerlink" title="步骤流程指示图"></a>步骤流程指示图</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230324101035783.png" alt="image-20230324101035783"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230324101040373.png" alt="image-20230324101040373"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230324101043558.png" alt="image-20230324101043558"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230324101058725.png" alt="image-20230324101058725"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230324101106655.png" alt="image-20230324101106655"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230324101112186.png" alt="image-20230324101112186"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230324101115213.png" alt="image-20230324101115213"></p><h2 id="sudo提权配置"><a href="#sudo提权配置" class="headerlink" title="sudo提权配置"></a>sudo提权配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">因为远程执行命令需要通过zabbix用户来执行，因为启动zabbix-server的用户是zabbix，所以我们必须给</span><br><span class="line">zabbix添加sudo权限，否则无法执行，并且要无密码。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加sudo权限</span></span><br><span class="line">visudo</span><br><span class="line">%zabbix ALL=(ALL) NOPASSWD:ALL</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试启动服务</span></span><br><span class="line">usermod zabbix -s /bin/bash</span><br><span class="line">su - zabbix</span><br><span class="line">-bash-4.2$ sudo systemctl start sshd</span><br></pre></td></tr></table></figure><h2 id="zabbix开启远程执行命令"><a href="#zabbix开启远程执行命令" class="headerlink" title="zabbix开启远程执行命令"></a>zabbix开启远程执行命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">vim /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">EnableRemoteCommands=1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启zabbix</span></span><br><span class="line">systemctl restart zabbix-agent</span><br></pre></td></tr></table></figure><h1 id="Zabbix报警升级机制"><a href="#Zabbix报警升级机制" class="headerlink" title="Zabbix报警升级机制"></a>Zabbix报警升级机制</h1><p>场景一：在企业中，我们需要把报警设置为升级机制，当有些报警，运维人员没有及时处理的时候，或者没有时间，或者外出，或者陪产在医院，或者…总之身边没有电脑没有网络，在山沟子里的时候，必须有人站出来，解决这个问题。</p><p>场景二：当zabbix报警服务器出现问题的时候，例如MySQL挂了，运维人员在厕…没有及时处理，那一分钟后这个警告肯定要升级，从警告变成严重故障之类的。<br>所以不管在哪种场景下，我们要有不同的报警人员，比如，一级报警，交给运维，没有及时处理就二级报警，交给运维总监或者运维经理，如果此时报警还没有人处理，那么报警就会升级到CTO或者CEO那里，那么这个时候，也是灾难降临之时，这也是一个很好的对运维人员必须要及时处理告警的一个制约。</p><h2 id="步骤流程指示图-1"><a href="#步骤流程指示图-1" class="headerlink" title="步骤流程指示图"></a>步骤流程指示图</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230324101404535.png" alt="image-20230324101404535"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230324101408778.png" alt="image-20230324101408778"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230324101411636.png" alt="image-20230324101411636"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230324101414374.png" alt="image-20230324101414374"></p><h2 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230324101438249.png" alt="image-20230324101438249"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230324101442091.png" alt="image-20230324101442091"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230324101445712.png" alt="image-20230324101445712"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230324101448751.png" alt="image-20230324101448751"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230324101451498.png" alt="image-20230324101451498"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230324101454626.png" alt="image-20230324101454626"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230324101458246.png" alt="image-20230324101458246"></p><h2 id="计算方式："><a href="#计算方式：" class="headerlink" title="计算方式："></a>计算方式：</h2><ol><li><p>开始于 ，这个是相对一但触发监控，则立即发送消息</p></li><li><p>1-2步骤是给运维组发送消息，每隔5分钟发送一次，总共2个步骤，所以发送2次</p></li><li><p>3-4步骤是给运维经理组发送消息，每隔5分钟发送一次，总共2个步骤，所以发送2次</p></li><li><p>4-5步骤是给运维总监组发送消息，每隔5分钟发送一次，总共2个步骤，所以发送2次</p></li><li><p>每次的开始时间是如何计算的呢，第一个立即开始：</p><p>1-2，3-4，4-5动作时间间隔是5分钟，所以在触发告警发送时间计算是5m+5m+5m=15m</p></li></ol><h1 id="Zabbix自定义图形"><a href="#Zabbix自定义图形" class="headerlink" title="Zabbix自定义图形"></a>Zabbix自定义图形</h1><h2 id="创建图形"><a href="#创建图形" class="headerlink" title="创建图形"></a>创建图形</h2><p>介绍监控的顺序-&gt;应⽤级-&gt;监控项-&gt;基于监控项创建触发器-&gt;基于监控项创建图形</p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628224826930.png" alt="image-20230628224826930"></p><h2 id="基于监控项进行绘图"><a href="#基于监控项进行绘图" class="headerlink" title="基于监控项进行绘图"></a>基于监控项进行绘图</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628224901113.png" alt="image-20230628224901113"></p><h2 id="聚合图形"><a href="#聚合图形" class="headerlink" title="聚合图形"></a>聚合图形</h2><p>将多张图形整合为一张图形, 简称聚合图形 企业真实聚合图形，情况</p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628224956056.png" alt="image-20230628224956056"></p><p>注意，在这里，聚合图形，我们可以分为以下几类，主要还是看公司的需求</p><p>例如：</p><ol><li>按项目聚合（王者荣耀，LOL，天涯明月刀…）</li><li>按主机聚合（每台主机的聚合…）</li><li>按应用聚合（所有nginx的监控，所有MySQL的监控…）</li></ol><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628225020604.png" alt="image-20230628225020604"></p><h3 id="幻灯片"><a href="#幻灯片" class="headerlink" title="幻灯片"></a>幻灯片</h3><p>多张聚合图形可以整合为幻灯⽚</p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628225042087.png" alt="image-20230628225042087"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628225056892.png" alt="image-20230628225056892"></p><h2 id="自定义图形-扩展"><a href="#自定义图形-扩展" class="headerlink" title="自定义图形[扩展]"></a>自定义图形[扩展]</h2><h3 id="安装和配置"><a href="#安装和配置" class="headerlink" title="安装和配置"></a>安装和配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装graphtree</span></span><br><span class="line"><span class="built_in">cd</span> /usr/share/zabbix</span><br><span class="line">wget https://raw.githubusercontent.com/OneOaaS/graphtrees/master/graphtree3.0.4.patch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导⼊入补丁包</span></span><br><span class="line">yum install -y patch</span><br><span class="line">patch -Np0 &lt;graphtree3.0.4.patch </span><br><span class="line"><span class="built_in">chown</span> -R apache.apache oneoaas</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改Apache配置⽂文件</span></span><br><span class="line">vim /etc/httpd/conf.d/zabbix.conf </span><br><span class="line">Alias /oneoaas /usr/share/zabbix/oneoaas</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启httpd服务 </span></span><br><span class="line">systemctl restart httpd</span><br><span class="line"> </span><br><span class="line">单击-&gt;监测中-&gt;Graphtree</span><br><span class="line">单击对应的主机-&gt;选择需要查看的图形-&gt;点击查询-&gt;效果展示</span><br></pre></td></tr></table></figure><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628225154872.png" alt="image-20230628225154872"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628225207367.png" alt="image-20230628225207367"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628225222861.png" alt="image-20230628225222861"></p><h1 id="Zabbix⾃定义监控模板"><a href="#Zabbix⾃定义监控模板" class="headerlink" title="Zabbix⾃定义监控模板"></a>Zabbix⾃定义监控模板</h1><ol><li>模板是⽀支持导⼊入与导出(模板⾥里里⾯面的监控项是有脚本⽀支撑，所以脚本需⼀一起打包)</li><li>conf⽂文件主要⽤用于定义监控项，监控项⽤用来调⽤用脚本或命令，获取监控值。</li><li>如果希望将之前定义的监控项做成模板，找到监控项-&gt;全选-&gt;复制</li><li>自定义使⽤用模板(让监控项可以重复使⽤用)</li><li>客户端agent必须要定义监控项，监控项取值需要使⽤用到脚本⽂文件或系统命令</li><li>服务端导⼊入模板</li><li>创建监控主机，链接新导⼊入模板，如果是已存在的监控主机，增加我们刚导⼊入的模板</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;Zabbix自愈模式&quot;&gt;&lt;a href=&quot;#Zabbix自愈模式&quot; class=&quot;headerlink&quot; title=&quot;Zabbix自愈模式&quot;&gt;&lt;/a&gt;Zabbix自愈模式&lt;/h1&gt;&lt;p&gt;有些时候，我们的服务宕机了，或者有些服务停掉了，那</summary>
      
    
    
    
    <category term="Zabbix" scheme="https://chenlinbb.github.io/categories/Zabbix/"/>
    
    
    <category term="自动化运维" scheme="https://chenlinbb.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/"/>
    
    <category term="应用监控" scheme="https://chenlinbb.github.io/tags/%E5%BA%94%E7%94%A8%E7%9B%91%E6%8E%A7/"/>
    
    <category term="数据分析" scheme="https://chenlinbb.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="Zabbix" scheme="https://chenlinbb.github.io/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>4.Zabbix触发器动作和邮件告警</title>
    <link href="https://chenlinbb.github.io/archives/904af0f9.html"/>
    <id>https://chenlinbb.github.io/archives/904af0f9.html</id>
    <published>2024-07-17T14:15:13.385Z</published>
    <updated>2024-07-18T12:43:52.718Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="邮件告警"><a href="#邮件告警" class="headerlink" title="邮件告警"></a>邮件告警</h1><h2 id="创建触发器条件"><a href="#创建触发器条件" class="headerlink" title="创建触发器条件"></a>创建触发器条件</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230323104502816.png" alt="image-20230323104502816"></p><h2 id="添加执行动作"><a href="#添加执行动作" class="headerlink" title="添加执行动作"></a>添加执行动作</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230323104513249.png" alt="image-20230323104513249"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230323104530665.png" alt="image-20230323104530665"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230323104535279.png" alt="image-20230323104535279"></p><h2 id="编辑发件邮件内容"><a href="#编辑发件邮件内容" class="headerlink" title="编辑发件邮件内容"></a>编辑发件邮件内容</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230323104555050.png" alt="image-20230323104555050"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230323104607281.png" alt="image-20230323104607281"></p><h2 id="添加收件人"><a href="#添加收件人" class="headerlink" title="添加收件人"></a>添加收件人</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230323104619817.png" alt="image-20230323104619817"></p><h1 id="优化报警信息"><a href="#优化报警信息" class="headerlink" title="优化报警信息"></a>优化报警信息</h1><h2 id="文本-变量"><a href="#文本-变量" class="headerlink" title="文本-变量"></a>文本-变量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 故障</span></span><br><span class="line">故障：&#123;TRIGGER.STATUS&#125;，服务器：&#123;HOSTNAME1&#125;发生:&#123;TRIGGER.NAME&#125;故障！</span><br><span class="line">告警主机：&#123;HOSTNAME1&#125;，IP地址：&#123;HOST.CONN&#125;</span><br><span class="line">告警时间：&#123;EVENT.DATE&#125;&#123;EVENT.TIME&#125;</span><br><span class="line">告警等级：&#123;TRIGGER.SEVERITY&#125;</span><br><span class="line">告警信息：&#123;TRIGGER.NAME&#125;</span><br><span class="line">告警项目：&#123;TRIGGER.KEY1&#125;</span><br><span class="line">问题详情：&#123;ITEM.NAME&#125;:&#123;ITEM.VALUE&#125;</span><br><span class="line">当前状态：&#123;TRIGGER.STATUS&#125;:&#123;ITEM.VALUE1&#125;</span><br><span class="line">事件ID：&#123;EVENT.ID&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复</span></span><br><span class="line">恢复：&#123;TRIGGER.STATUS&#125;，服务器：&#123;HOSTNAME1&#125;已经恢复！:&#123;TRIGGER.NAME&#125;</span><br><span class="line">告警主机：&#123;HOSTNAME1&#125; ，IP地址：&#123;HOST.CONN&#125;</span><br><span class="line">告警时间：&#123;EVENT.DATE&#125;&#123;EVENT.TIME&#125;</span><br><span class="line">告警等级：&#123;TRIGGER.SEVERITY&#125;</span><br><span class="line">告警信息：&#123;TRIGGER.NAME&#125;</span><br><span class="line">告警项目：&#123;TRIGGER.KEY1&#125;</span><br><span class="line">问题详情：&#123;ITEM.NAME&#125;:&#123;ITEM.VALUE&#125;</span><br><span class="line">当前状态：&#123;TRIGGER.STATUS&#125;:&#123;ITEM.VALUE1&#125;</span><br><span class="line">事件ID：&#123;EVENT.ID&#125;</span><br></pre></td></tr></table></figure><h2 id="html"><a href="#html" class="headerlink" title="html"></a>html</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 故障</span></span><br><span class="line">故障：&#123;TRIGGER.STATUS&#125;，服务器：&#123;HOSTNAME1&#125;发生:&#123;TRIGGER.NAME&#125;故障！</span><br><span class="line">&lt;<span class="built_in">head</span>&gt;</span><br><span class="line">    &lt;style <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">        body&#123;</span><br><span class="line">            background:url(<span class="string">&#x27;https://seopic.699pic.com/photo/40007/7490.jpg_wh1200.jpg&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;img src=<span class="string">&quot;https://blog.driverzeng.com/zenglaoshi/sos.png&quot;</span> alt=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">    &lt;style <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">        table .guzhang &#123;color: red;&#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">    &lt;table border=<span class="string">&quot;3&quot;</span>  bordercolor=<span class="string">&quot;black&quot;</span> cellspacing=<span class="string">&quot;0px&quot;</span> cellpadding=<span class="string">&quot;4px&quot;</span> width=<span class="string">&quot;500px&quot;</span>&gt;</span><br><span class="line">        &lt;<span class="built_in">tr</span> class=<span class="string">&quot;guzhang&quot;</span> bgcolor=<span class="string">&quot;#0C1B3D&quot;</span> &gt;&lt;th colspan=2&gt;</span><br><span class="line">            &#123;TRIGGER.STATUS&#125; 故障！！！故障！！！ </span><br><span class="line">            &lt;div&gt;&amp;<span class="comment">#128514; &amp;#128514; &amp;#128514;&lt;/div&gt;</span></span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;<span class="built_in">tr</span> &gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;#F9B602&quot;</span> width=<span class="string">&quot;20%&quot;</span>&gt;告警主机&lt;/td&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;#F9B602&quot;</span>&gt;&#123;HOSTNAME1&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;<span class="built_in">tr</span> &gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;#F9B602&quot;</span>&gt;告警别名&lt;/td&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;#F9B602&quot;</span>&gt;&#123;HOST.NAME&#125; &lt;/td&gt;</span><br><span class="line">        &lt;<span class="built_in">tr</span> &gt;</span><br><span class="line">        &lt;<span class="built_in">tr</span> &gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;#F9B602&quot;</span>&gt;告警地址&lt;/td&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;#F9B602&quot;</span>&gt;&#123;HOST.IP&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;<span class="built_in">tr</span>&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;#F9B602&quot;</span>&gt;告警时间&lt;/td&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;#F9B602&quot;</span>&gt;&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">     </span><br><span class="line">        &lt;<span class="built_in">tr</span>&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;#F9B602&quot;</span>&gt;告警等级&lt;/td&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;#F9B602&quot;</span>&gt;&#123;TRIGGER.SEVERITY&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">     </span><br><span class="line">        &lt;<span class="built_in">tr</span>&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;#F9B602&quot;</span>&gt;告警信息&lt;/td&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;#F9B602&quot;</span>&gt;&#123;TRIGGER.NAME&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">     </span><br><span class="line">        &lt;<span class="built_in">tr</span>&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;#F9B602&quot;</span>&gt;告警项目&lt;/td&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;#F9B602&quot;</span>&gt;&#123;TRIGGER.KEY1&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;<span class="built_in">tr</span> &gt;</span><br><span class="line">            &lt;td class=<span class="string">&#x27;guzhang2&#x27;</span> bgcolor=<span class="string">&quot;#FF3333&quot;</span>&gt;问题详情&lt;/td&gt;</span><br><span class="line">            &lt;td class=<span class="string">&#x27;guzhang3&#x27;</span> bgcolor=<span class="string">&quot;#FF3333&quot;</span>&gt;&#123;ITEM.NAME&#125;:&amp;nbsp;&#123;ITEM.VALUE&#125; &amp;<span class="comment">#128520; &amp;#128520; &amp;#128520;&lt;/td&gt;</span></span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;<span class="built_in">tr</span>&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;#F9B602&quot;</span>&gt;当前状态&lt;/td&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;#F9B602&quot;</span>&gt;&#123;TRIGGER.STATUS&#125;:&amp;nbsp;&#123;ITEM.VALUE1&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;<span class="built_in">tr</span>&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;#F9B602&quot;</span>&gt;事件ID&lt;/td&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;#F9B602&quot;</span>&gt;&#123;EVENT.ID&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复</span></span><br><span class="line">恢复：&#123;TRIGGER.STATUS&#125;，服务器：&#123;HOSTNAME1&#125;已经恢复！:&#123;TRIGGER.NAME&#125;</span><br><span class="line">&lt;<span class="built_in">head</span>&gt;</span><br><span class="line">    &lt;style <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">        table .guzhang &#123;</span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line">        body&#123;</span><br><span class="line">            background:url(<span class="string">&#x27;https://seopic.699pic.com/photo/40007/7490.jpg_wh1200.jpg&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;img src=<span class="string">&quot;https://blog.driverzeng.com/zenglaoshi/huifu.png&quot;</span> alt=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">    &lt;table border=<span class="string">&quot;1&quot;</span>  bordercolor=<span class="string">&quot;black&quot;</span> cellspacing=<span class="string">&quot;0px&quot;</span> cellpadding=<span class="string">&quot;4px&quot;</span> width=<span class="string">&quot;500px&quot;</span>&gt;</span><br><span class="line">        &lt;<span class="built_in">tr</span> bgcolor=<span class="string">&quot;#49c208&quot;</span>&gt;&lt;th colspan=2&gt;</span><br><span class="line">        &#123;TRIGGER.STATUS&#125; 哈哈哈哈哈哈,好了 </span><br><span class="line">        &lt;div&gt;&amp;<span class="comment">#128512; &amp;#128512; &amp;#128512;&lt;/div&gt;</span></span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">     </span><br><span class="line">        &lt;<span class="built_in">tr</span> &gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;lightgreen&quot;</span> width=<span class="string">&quot;20%&quot;</span>&gt;恢复主机&lt;/td&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;yellow&quot;</span>&gt;&#123;HOSTNAME1&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;<span class="built_in">tr</span>&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;lightgreen&quot;</span>&gt;恢复别名&lt;/td&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;yellow&quot;</span>&gt;&#123;HOST.NAME&#125; &lt;/td&gt;</span><br><span class="line">        &lt;<span class="built_in">tr</span> &gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;lightgreen&quot;</span>&gt;恢复地址&lt;/td&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;yellow&quot;</span>&gt;&#123;HOST.IP&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;<span class="built_in">tr</span>&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;lightgreen&quot;</span>&gt;恢复时间&lt;/td&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;yellow&quot;</span>&gt;&#123;EVENT.DATE&#125; &#123;EVENT.RECOVERY.TIME&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">     </span><br><span class="line">        &lt;<span class="built_in">tr</span>&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;lightgreen&quot;</span>&gt;恢复等级&lt;/td&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;yellow&quot;</span>&gt;&#123;TRIGGER.SEVERITY&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">     </span><br><span class="line">        &lt;<span class="built_in">tr</span>&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;lightgreen&quot;</span>&gt;恢复信息&lt;/td&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;yellow&quot;</span>&gt;&#123;TRIGGER.NAME&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">     </span><br><span class="line">        &lt;<span class="built_in">tr</span>&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;lightgreen&quot;</span>&gt;恢复项目&lt;/td&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;yellow&quot;</span>&gt;&#123;TRIGGER.KEY1&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;<span class="built_in">tr</span> &gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;#49c208&quot;</span>&gt;恢复详情&lt;/td&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;#49c208&quot;</span>&gt;&#123;ITEM.NAME&#125;:&amp;nbsp;&#123;ITEM.VALUE&#125; &amp;<span class="comment">#9889; &amp;#9889; &amp;#9889;&lt;/td&gt;</span></span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;<span class="built_in">tr</span>&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;lightgreen&quot;</span>&gt;当前状态&lt;/td&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;yellow&quot;</span>&gt;&#123;TRIGGER.STATUS&#125;:&amp;nbsp;&#123;ITEM.VALUE1&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;<span class="built_in">tr</span>&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;lightgreen&quot;</span>&gt;事件ID&lt;/td&gt;</span><br><span class="line">            &lt;td bgcolor=<span class="string">&quot;yellow&quot;</span>&gt;&#123;EVENT.ID&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h1 id="zabbix多条件触发器"><a href="#zabbix多条件触发器" class="headerlink" title="zabbix多条件触发器"></a>zabbix多条件触发器</h1><p>监控内存百分比（取出内存的可用大小 / 总内存大小 = 实际可用的百分比）</p><h2 id="自定义监控内存百分比"><a href="#自定义监控内存百分比" class="headerlink" title="自定义监控内存百分比"></a>自定义监控内存百分比</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在agent端编辑配置</span></span><br><span class="line">[root@web01 zabbix_agentd.d]<span class="comment"># vim /etc/zabbix/zabbix_agentd.d/mem_state.conf</span></span><br><span class="line">UserParameter=mem.state,free -m|awk <span class="string">&#x27;/^Mem/&#123;print $NF*100/$2&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#在server端获取数据</span></span><br><span class="line">[root@web02 ~]<span class="comment"># zabbix_get -s 10.0.0.7 -k mem.state</span></span><br><span class="line">69.9294</span><br></pre></td></tr></table></figure><h2 id="web页面添加监控"><a href="#web页面添加监控" class="headerlink" title="web页面添加监控"></a>web页面添加监控</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230323111352829.png" alt="image-20230323111352829"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230323111355376.png" alt="image-20230323111355376"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230323111358357.png" alt="image-20230323111358357"></p><h2 id="添加触发器"><a href="#添加触发器" class="headerlink" title="添加触发器"></a>添加触发器</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230323111408903.png" alt="image-20230323111408903"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230323111412310.png" alt="image-20230323111412310"></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 测试</span></span><br><span class="line"><span class="built_in">dd</span> &lt; /dev/zero &gt; /dev/null bs=1024M count=2048</span><br></pre></td></tr></table></figure><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230323111446526.png" alt="image-20230323111446526"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230323111449965.png" alt="image-20230323111449965"></p><p>目前属于单条件触发器，因为内存低于20%就报警了，在生产中，我们应该是当内存低于20%并且占用<br>了swap空间，然后再报警。</p><h1 id="创建swap监控配置"><a href="#创建swap监控配置" class="headerlink" title="创建swap监控配置"></a>创建swap监控配置</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑zabbix自定义监控配置文件</span></span><br><span class="line">vim mem_state.conf</span><br><span class="line">UserParameter=swap.state,free -m|awk <span class="string">&#x27;/^Swap/&#123;print $3*100/$2&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启zabbix</span></span><br><span class="line">systemctl restart zabbix-agent</span><br></pre></td></tr></table></figure><h2 id="多条件触发修改"><a href="#多条件触发修改" class="headerlink" title="多条件触发修改"></a>多条件触发修改</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230323111620676.png" alt="image-20230323111620676"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230323111623076.png" alt="image-20230323111623076"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230323111626552.png" alt="image-20230323111626552"></p><h1 id="常用触发器"><a href="#常用触发器" class="headerlink" title="常用触发器"></a>常用触发器</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">and <span class="comment">#并且</span></span><br><span class="line">or <span class="comment">#或者</span></span><br><span class="line">last() <span class="comment">#比对最新的值</span></span><br><span class="line">avg() <span class="comment">#平均值</span></span><br><span class="line">diff() <span class="comment">#比对上一次文件的内容</span></span><br><span class="line">nodata() <span class="comment">#收不不到数据进行报警nodata(5m)</span></span><br><span class="line">(5m) <span class="comment">#表示最近5分钟得到值</span></span><br><span class="line">(<span class="comment">#5) #表示最近5次得到的值</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;邮件告警&quot;&gt;&lt;a href=&quot;#邮件告警&quot; class=&quot;headerlink&quot; title=&quot;邮件告警&quot;&gt;&lt;/a&gt;邮件告警&lt;/h1&gt;&lt;h2 id=&quot;创建触发器条件&quot;&gt;&lt;a href=&quot;#创建触发器条件&quot; class=&quot;headerlin</summary>
      
    
    
    
    <category term="Zabbix" scheme="https://chenlinbb.github.io/categories/Zabbix/"/>
    
    
    <category term="自动化运维" scheme="https://chenlinbb.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/"/>
    
    <category term="应用监控" scheme="https://chenlinbb.github.io/tags/%E5%BA%94%E7%94%A8%E7%9B%91%E6%8E%A7/"/>
    
    <category term="数据分析" scheme="https://chenlinbb.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="Zabbix" scheme="https://chenlinbb.github.io/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>3.Zabbix自定义监控</title>
    <link href="https://chenlinbb.github.io/archives/c184cabb.html"/>
    <id>https://chenlinbb.github.io/archives/c184cabb.html</id>
    <published>2024-07-17T14:15:13.384Z</published>
    <updated>2024-07-18T12:43:52.720Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="零宽断言"><a href="#零宽断言" class="headerlink" title="零宽断言"></a>零宽断言</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(?=exp)  <span class="comment"># 匹配exp前面的位置</span></span><br><span class="line">(?&lt;=exp) <span class="comment"># 匹配exp后面的位置</span></span><br><span class="line">(?!exp)  <span class="comment"># 匹配后面跟的不是exp的位置</span></span><br><span class="line">(?&lt;!exp) <span class="comment"># 匹配前面不是exp的位置</span></span><br></pre></td></tr></table></figure><h1 id="添加自定义监控"><a href="#添加自定义监控" class="headerlink" title="添加自定义监控"></a>添加自定义监控</h1><h2 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UserParameter=监控项的key名称,获取监控项值的命令或者脚本</span><br><span class="line">UserParameter=&lt;key&gt;,&lt;shell,<span class="built_in">command</span>&gt;</span><br><span class="line">UserParameter=user.count,<span class="built_in">uptime</span> | grep -Po <span class="string">&quot;\d(?= users)&quot;</span></span><br></pre></td></tr></table></figure><h2 id="添加配置文件-客户端"><a href="#添加配置文件-客户端" class="headerlink" title="添加配置文件(客户端)"></a>添加配置文件(客户端)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">vim /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">UserParameter=user.count,<span class="built_in">uptime</span> | grep -Po <span class="string">&quot;\d(?= user)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启zabbix客户端</span></span><br><span class="line">systemctl restart zabbix-agent.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载zabbix5.0官方源</span></span><br><span class="line">rpm -Uvh https://repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装zabbix-get检测工具</span></span><br><span class="line">yum install -y zabbix-get</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试是否能够监控到数据</span></span><br><span class="line">zabbix_get -s 172.16.1.7 -k user.count</span><br></pre></td></tr></table></figure><h2 id="页面添加监控项"><a href="#页面添加监控项" class="headerlink" title="页面添加监控项"></a>页面添加监控项</h2><h3 id="创建监控模板"><a href="#创建监控模板" class="headerlink" title="创建监控模板"></a>创建监控模板</h3><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230322104437722.png" alt="image-20230322104437722"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230322104441075.png" alt="image-20230322104441075"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230322104531778.png" alt="image-20230322104531778"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230322104534964.png" alt="image-20230322104534964"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230322104538643.png" alt="image-20230322104538643"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230322104544864.png" alt="image-20230322104544864"></p><h2 id="给主机配置监控项"><a href="#给主机配置监控项" class="headerlink" title="给主机配置监控项"></a>给主机配置监控项</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230322104619908.png" alt="image-20230322104619908"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230322104619908.png"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230322104626686.png" alt="image-20230322104626686"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230322104629411.png" alt="image-20230322104629411"></p><h2 id="将监控内容图形化显示"><a href="#将监控内容图形化显示" class="headerlink" title="将监控内容图形化显示"></a>将监控内容图形化显示</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230322104713903.png" alt="image-20230322104713903"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230322104716673.png" alt="image-20230322104716673"></p><h2 id="添加监控项的触发器"><a href="#添加监控项的触发器" class="headerlink" title="添加监控项的触发器"></a>添加监控项的触发器</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230322104915331.png" alt="image-20230322104915331"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230322104918200.png" alt="image-20230322104918200"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230322104920667.png" alt="image-20230322104920667"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230322104923870.png" alt="image-20230322104923870"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230322104926649.png" alt="image-20230322104926649"></p><h2 id="常用触发器条件"><a href="#常用触发器条件" class="headerlink" title="常用触发器条件"></a>常用触发器条件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">and      <span class="comment"># 并且</span></span><br><span class="line">or       <span class="comment"># 或</span></span><br><span class="line">last()   <span class="comment"># 对比最后的值</span></span><br><span class="line">avg()    <span class="comment"># 平均值</span></span><br><span class="line">diff()   <span class="comment"># 对比上一次文件的内容</span></span><br><span class="line">nodata() <span class="comment"># 收不到数据进行报警</span></span><br><span class="line">(5m)     <span class="comment"># 表示最近五分种得到值</span></span><br><span class="line">(<span class="comment">#5)     # 表示最近五次得到的值</span></span><br></pre></td></tr></table></figure><h1 id="zabbix内置变量"><a href="#zabbix内置变量" class="headerlink" title="zabbix内置变量"></a>zabbix内置变量</h1><p>使用zabbix内置变量，来优化触发器的名称，此处使用的是<br>主机名变量：{HOST.NAME} IP地址变量：{HOST.IP}</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Monitor Login User Count Problem 主机名:&#123;HOST.NAME&#125; IP地址:&#123;HOST.IP&#125;</span><br></pre></td></tr></table></figure><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230322105111331.png" alt="image-20230322105111331"></p><h1 id="Zabbix系统所需磁盘空间"><a href="#Zabbix系统所需磁盘空间" class="headerlink" title="Zabbix系统所需磁盘空间"></a>Zabbix系统所需磁盘空间</h1><p>每个Zabbix事件需要大约170字节的磁盘空间。很难估计Zabbix每天生成的事件数量。最糟糕的情况下，我们可能需要假设Zabbix每秒会生成一个事件。</p><p>这意味着，如果我们需要保留3年的事件，需要3365243600 170 = 15GB的磁盘空间。</p><table><thead><tr><th><strong>zabbix公式计算范围</strong></th><th><strong>所需磁盘空间的计算公式 (单位：字节)</strong></th></tr></thead><tbody><tr><td><em>Zabbix配置文件</em></td><td>固定大小。一般10MB或更少。</td></tr><tr><td><em>历史（History）</em></td><td>days*(items/refresh rate)<em>24</em>3600*bytes items : 监控项数量 days : 保留历史数据的天数 refresh rate : 监控项平均轮询时间 bytes : 保留单个值所需要占用的字节数，依赖于数据库引擎，一般大约90字节。</td></tr><tr><td><em>趋势（Trends）</em></td><td>days*(items/3600)<em>24</em>3600*bytes items : 监控项数量 days : 保留趋势数据的天数 bytes : 保留单个趋势数据所需要占用的字节数，依赖于数据库引擎，一般大约90字节。</td></tr><tr><td><em>事件（Events）</em></td><td>days<em>events</em>24<em>3600</em>bytes events : 每秒事件数。最糟糕的情况下，每秒一（1）个事件。 days : 保留事件数据的天数 bytes : 保留单个事件所需要占用的字节数，依赖于数据库引擎，一般大约90字节。</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 历史数据保留90天</span></span><br><span class="line">python</span><br><span class="line">Python 2.7.5 (default, Apr 11 2018, 07:36:10)</span><br><span class="line">[GCC 4.8.5 20150623 (Red Hat 4.8.5-28)] on linux2</span><br><span class="line">Type <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> or <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line"> </span><br><span class="line">90天*(监控项的数量/取值时间)*24*3600*字节数/1024/1024（转换成MB）</span><br><span class="line">&gt;&gt;&gt; 90*(100/3)*24*3600*90/1024/1024</span><br><span class="line">22024</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 趋势365天</span></span><br><span class="line">365*(100/3600)*24*3600*90/1024/1024</span><br><span class="line">75.187683105469</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 事件</span></span><br><span class="line">&gt;&gt;&gt; 365*1*24*3600*90/1024/1024</span><br><span class="line">2706</span><br></pre></td></tr></table></figure><h1 id="添加值映射"><a href="#添加值映射" class="headerlink" title="添加值映射"></a>添加值映射</h1><p>当端口存活的时候，数据是1，当端口不存在的时候，数据是0，看起来好low而且一般谁会去记1和0，所以此时我们可以给值添加一个映射关系，可以理解为创建一个别名。</p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628222500844.png" alt="image-20230628222500844"></p><p>此处可以选择系统自带的，也可以自己创建。</p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628222518993.png" alt="image-20230628222518993"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628222559745.png" alt="image-20230628222559745"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628222711756.png" alt="image-20230628222711756"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628222805351.png" alt="image-20230628222805351"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628222824570.png" alt="image-20230628222824570"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628222847514.png" alt="image-20230628222847514"></p><h1 id="自定义监控项示例：TCP11种状态"><a href="#自定义监控项示例：TCP11种状态" class="headerlink" title="自定义监控项示例：TCP11种状态"></a>自定义监控项示例：TCP11种状态</h1><h2 id="了解11种状态"><a href="#了解11种状态" class="headerlink" title="了解11种状态"></a>了解11种状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">LISTEN - 侦听来自远方TCP端口的连接请求；</span><br><span class="line">SYN-SENT -在发送连接请求后等待匹配的连接请求；</span><br><span class="line">SYN-RECEIVED - 在收到和发送一个连接请求后等待对连接请求的确认；</span><br><span class="line">ESTABLISHED- 代表一个打开的连接，数据可以传送给用户；</span><br><span class="line">FIN-WAIT-1 - 等待远程TCP的连接中断请求，或先前的连接中断请求的确认；</span><br><span class="line">FIN-WAIT-2 - 从远程TCP等待连接中断请求；</span><br><span class="line">CLOSE-WAIT - 等待从本地用户发来的连接中断请求；</span><br><span class="line">CLOSING -等待远程TCP对连接中断的确认；</span><br><span class="line">LAST-ACK - 等待原来发向远程TCP的连接中断请求的确认；</span><br><span class="line">TIME-WAIT -等待足够的时间以确保远程TCP接收到连接中断请求的确认；</span><br><span class="line">CLOSED - 没有任何连接状态；</span><br><span class="line">客户端独有的：（1）SYN_SENT （2）FIN_WAIT1 （3）FIN_WAIT2 （4）CLOSING （5）TIME_WAIT 。</span><br><span class="line">服务端独有的：（1）LISTEN （2）SYN_RCVD （3）CLOSE_WAIT （4）LAST_ACK 。</span><br><span class="line">共有的：（1）CLOSED （2）ESTABLISHED 。</span><br></pre></td></tr></table></figure><h2 id="配置监控"><a href="#配置监控" class="headerlink" title="配置监控"></a>配置监控</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入zabbix客户端子配置文件目录</span></span><br><span class="line"><span class="built_in">cd</span> /etc/zabbix/zabbix_agentd.d/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑子配置文件</span></span><br><span class="line">vim tcp_state.conf</span><br><span class="line">UserParameter=tcp.state[*],netstat -ant|grep -c <span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启服务</span></span><br><span class="line">systemctl restart zabbix-agent</span><br><span class="line"></span><br><span class="line"><span class="comment"># zabbix-server测试</span></span><br><span class="line">zabbix_get -s 10.0.0.7 -k tcp.state[LISTEN]</span><br><span class="line">11</span><br></pre></td></tr></table></figure><h2 id="在web页面添加监控项"><a href="#在web页面添加监控项" class="headerlink" title="在web页面添加监控项"></a>在web页面添加监控项</h2><p>因为TCP状态有11种，所以我们需要添加11个监控项，我们可以把所有监控项放入一个模板中，这样我们所有机器在模板中关联即可。</p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628223638347.png" alt="image-20230628223638347"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628223654399.png" alt="image-20230628223654399"></p><h3 id="在模板中创建监控项"><a href="#在模板中创建监控项" class="headerlink" title="在模板中创建监控项"></a>在模板中创建监控项</h3><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628223816035.png" alt="image-20230628223816035"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628223831918.png" alt="image-20230628223831918"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628223903418.png" alt="image-20230628223903418"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628223917873.png" alt="image-20230628223917873"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628223945771.png" alt="image-20230628223945771"></p><h3 id="以此类推，使用克隆的方式，创建出来所有模板。"><a href="#以此类推，使用克隆的方式，创建出来所有模板。" class="headerlink" title="以此类推，使用克隆的方式，创建出来所有模板。"></a>以此类推，使用克隆的方式，创建出来所有模板。</h3><h2 id="给主机关联模板"><a href="#给主机关联模板" class="headerlink" title="给主机关联模板"></a>给主机关联模板</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628224022851.png" alt="image-20230628224022851"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628224034934.png" alt="image-20230628224034934"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628224049028.png" alt="image-20230628224049028"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">zabbix_get -s 10.0.0.7 -k tcp.state[LISTEN]</span><br><span class="line">11</span><br><span class="line"></span><br><span class="line">zabbix_get -s 10.0.0.7 -k tcp.state[ESTABLISHED]</span><br><span class="line">25</span><br></pre></td></tr></table></figure><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230628224156813.png" alt="image-20230628224156813"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;零宽断言&quot;&gt;&lt;a href=&quot;#零宽断言&quot; class=&quot;headerlink&quot; title=&quot;零宽断言&quot;&gt;&lt;/a&gt;零宽断言&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=</summary>
      
    
    
    
    <category term="Zabbix" scheme="https://chenlinbb.github.io/categories/Zabbix/"/>
    
    
    <category term="自动化运维" scheme="https://chenlinbb.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/"/>
    
    <category term="应用监控" scheme="https://chenlinbb.github.io/tags/%E5%BA%94%E7%94%A8%E7%9B%91%E6%8E%A7/"/>
    
    <category term="数据分析" scheme="https://chenlinbb.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="Zabbix" scheme="https://chenlinbb.github.io/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>2.Zabbix安装、汉化及监控</title>
    <link href="https://chenlinbb.github.io/archives/d8ae290c.html"/>
    <id>https://chenlinbb.github.io/archives/d8ae290c.html</id>
    <published>2024-07-17T14:15:13.382Z</published>
    <updated>2024-07-18T12:43:52.717Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="Zabbix监控快速安装"><a href="#Zabbix监控快速安装" class="headerlink" title="Zabbix监控快速安装"></a>Zabbix监控快速安装</h1><h2 id="配置zabbix官方仓库-zabbix"><a href="#配置zabbix官方仓库-zabbix" class="headerlink" title="配置zabbix官方仓库(zabbix)"></a>配置zabbix官方仓库(zabbix)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载zabbix5.0官方源</span></span><br><span class="line">rpm -Uvh https://repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启前端代码仓库</span></span><br><span class="line">vim /etc/yum.repos.d/zabbix.repo</span><br><span class="line">[zabbix-frontend]</span><br><span class="line">name=Zabbix Official Repository frontend - <span class="variable">$basearch</span></span><br><span class="line">baseurl=http://repo.zabbix.com/zabbix/5.0/rhel/7/<span class="variable">$basearch</span>/frontend</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX-A14FE591</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装zabbix 服务端，客户端，前端</span></span><br><span class="line">yum install -y zabbix-server-mysql zabbixagent -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装zabbix依赖的php和nginx的源</span></span><br><span class="line">yum install -y centos-release-scl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装zabbix前端包</span></span><br><span class="line">yum install zabbix-web-mysql-scl zabbix-nginx-conf-scl -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝SQl文件到数据库服务器上</span></span><br><span class="line">scp /usr/share/doc/zabbix-server-mysql*/create.sql.gz 172.....53:/opt/</span><br></pre></td></tr></table></figure><h2 id="配置zabbix数据库-db01"><a href="#配置zabbix数据库-db01" class="headerlink" title="配置zabbix数据库(db01)"></a>配置zabbix数据库(db01)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装数据库</span></span><br><span class="line">yum install -y mariadb-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务并加入开机自启</span></span><br><span class="line">systemctl start mariadb &amp;&amp; systemctl <span class="built_in">enable</span> mariadb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置数据库的管理用户root和密码</span></span><br><span class="line">mysqladmin -uroot password <span class="string">&#x27;123&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接数据库</span></span><br><span class="line">mysql -uroot -p123</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 创建zabbix库</span></span><br><span class="line">create database zabbix character <span class="built_in">set</span> utf8 collate utf8_bin;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建zabbix用户并授权</span></span><br><span class="line">grant all on zabbix.* to zabbix@<span class="string">&#x27;172.16.1.%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启自定义函数的信任（取决于开没开binlog）</span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> global log_bin_trust_function_creators = 1;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 永久开启自定义函数的信任</span></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">log_bin_trust_function_creators=1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启反向解析</span></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">skip_name_resolve</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启数据库</span></span><br><span class="line">systemctl restart mariadb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主库导入数据库</span></span><br><span class="line">zcat /opt/create.sql.gz | mysql -uzabbix -p123 -h172.16.1.51 zabbix</span><br></pre></td></tr></table></figure><h2 id="修改zabbix配置文件-zabbix"><a href="#修改zabbix配置文件-zabbix" class="headerlink" title="修改zabbix配置文件(zabbix)"></a>修改zabbix配置文件(zabbix)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改zabbix 服务端配置文件</span></span><br><span class="line">vim /etc/zabbix/zabbix_server.conf</span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=123</span><br><span class="line"><span class="comment"># DBSocket= 如果本机启动，要指定socket文件位置</span></span><br><span class="line">DBHost=172.16.1.53</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改nginx配置文件</span></span><br><span class="line">vim /etc/opt/rh/rh-nginx116/nginx/conf.d/zabbix.conf</span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name ding.zabbix.com;</span><br><span class="line">root /usr/share/zabbix;</span><br><span class="line">index index.php;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改PHP配置文件</span></span><br><span class="line">vim /etc/opt/rh/rh-php72/php-fpm.d/zabbix.conf</span><br><span class="line">[zabbix]</span><br><span class="line">user = nginx</span><br><span class="line">group = nginx</span><br><span class="line"></span><br><span class="line">listen = /var/opt/rh/rh-php72/run/php-fpm/zabbix.sock</span><br><span class="line">listen.acl_users = apache</span><br><span class="line">listen.allowed_clients = 127.0.0.1</span><br><span class="line"></span><br><span class="line">pm = dynamic</span><br><span class="line">pm.max_children = 50</span><br><span class="line">pm.start_servers = 5</span><br><span class="line">pm.min_spare_servers = 5</span><br><span class="line">pm.max_spare_servers = 35</span><br><span class="line">pm.max_requests = 200</span><br><span class="line"></span><br><span class="line">php_value[session.save_handler] = files</span><br><span class="line">php_value[session.save_path] = /var/opt/rh/rh-php72/lib/php/session/</span><br><span class="line"></span><br><span class="line">php_value[max_execution_time] = 300</span><br><span class="line">php_value[memory_limit] = 128M</span><br><span class="line">php_value[post_max_size] = 16M</span><br><span class="line">php_value[upload_max_filesize] = 2M</span><br><span class="line">php_value[max_input_time] = 300</span><br><span class="line">php_value[max_input_vars] = 10000</span><br><span class="line">php_value[date.timezone] = Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.修改session存放目录权限</span></span><br><span class="line"><span class="built_in">chown</span> nginx:nginx -R /var/opt/rh/rh-php72/lib/php/session/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.修改zabbix连接数据库的配置文件存放目录权限</span></span><br><span class="line"><span class="built_in">chown</span> -R nginx.nginx /etc/zabbix/web/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.启动服务</span></span><br><span class="line">systemctl restart zabbix-server zabbix-agent rh-nginx116-nginx rh-php72-php-fpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># netstat -lntup</span></span><br><span class="line">tcp 0 0 127.0.0.1:9000 0.0.0.0:* LISTEN</span><br><span class="line">3587/php-fpm: maste</span><br><span class="line">tcp 0 0 0.0.0.0:80 0.0.0.0:* LISTEN</span><br><span class="line">3632/nginx: master</span><br><span class="line">tcp 0 0 0.0.0.0:10050 0.0.0.0:* LISTEN</span><br><span class="line">3593/zabbix_agentd</span><br><span class="line">tcp 0 0 0.0.0.0:10051 0.0.0.0:* LISTEN</span><br><span class="line">3612/zabbix_server</span><br><span class="line">tcp6 0 0 :::10050 :::* LISTEN</span><br><span class="line">3593/zabbix_agentd</span><br><span class="line">tcp6 0 0 :::10051 :::* LISTEN</span><br><span class="line">3612/zabbix_server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.开机自启</span></span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-server zabbixagent rh-nginx116-ngrh-php72-php-fpm</span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/zabbixserver.</span><br><span class="line">service to /usr/lib/systemd/system/zabbix-server.service.</span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/zabbixagent.</span><br><span class="line">service to /usr/lib/systemd/system/zabbix-agent.service.</span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/rh-nginx116-</span><br><span class="line">nginx.service to /usr/lib/systemd/system/rh-nginx116-nginx.service.</span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/rh-php72-phpfpm.</span><br><span class="line">service to /usr/lib/systemd/system/rh-php72-php-fpm.service.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.host解析</span></span><br><span class="line">10.0.0.71 zabbix.xxx.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问浏览器</span></span><br><span class="line">zabbix.xxx.com</span><br></pre></td></tr></table></figure><h2 id="步骤流程指示图"><a href="#步骤流程指示图" class="headerlink" title="步骤流程指示图"></a>步骤流程指示图</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230320111539007.png" alt="image-20230320111539007"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230320111548155.png" alt="image-20230320111548155"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230320111553342.png" alt="image-20230320111553342"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230320111616086.png" alt="image-20230320111616086"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230320111621625.png" alt="image-20230320111621625"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230320111635666.png" alt="image-20230320111635666"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230320111642003.png" alt="image-20230320111642003"></p><h1 id="Zabbix汉化"><a href="#Zabbix汉化" class="headerlink" title="Zabbix汉化"></a>Zabbix汉化</h1><h2 id="步骤步骤流程指示图"><a href="#步骤步骤流程指示图" class="headerlink" title="步骤步骤流程指示图"></a>步骤步骤流程指示图</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230321093726761.png" alt="image-20230321093726761"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230321093730052.png" alt="image-20230321093730052"></p><h2 id="解决图形汉字无法显示"><a href="#解决图形汉字无法显示" class="headerlink" title="解决图形汉字无法显示"></a>解决图形汉字无法显示</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入zabbix字体路径</span></span><br><span class="line"><span class="built_in">cd</span> /usr/share/zabbix/assets/fonts/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认字体</span></span><br><span class="line">/etc/alternatives/zabbix-web-font</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传电脑字体</span></span><br><span class="line">rz 楷体_常规</span><br><span class="line">windows的字体(C:\Windows\Fonts)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改名原本字体名字</span></span><br><span class="line"><span class="built_in">mv</span> graphfont.ttf graphfont.ttf.bak</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改名电脑字体</span></span><br><span class="line"><span class="built_in">mv</span> SIMKAI.TTF graphfont.ttf</span><br></pre></td></tr></table></figure><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230321094037193.png" alt="image-20230321094037193"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230321093939168.png" alt="image-20230321093939168"></p><h1 id="监控主机"><a href="#监控主机" class="headerlink" title="监控主机"></a>监控主机</h1><h2 id="Zabbix客户端配置"><a href="#Zabbix客户端配置" class="headerlink" title="Zabbix客户端配置"></a>Zabbix客户端配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看服务端的版本</span></span><br><span class="line">zabbix_server -V</span><br><span class="line">zabbix_server (Zabbix) 5.0.32</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装对应版本的agent客户端</span></span><br><span class="line">rpm -ivh https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/zabbix-agent-5.0.32-1.el7.x86_64.rpm?spm=a2c6h.25603864.0.0.e71d2e2fm8xxGa</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">vim /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">Server=服务端IP</span><br><span class="line">ServerActive=服务端IP</span><br><span class="line">Hostname=本机主机名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">systemctl start zabbix-agent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 端口检查</span></span><br><span class="line">netstat -lntup |grep 10050</span><br><span class="line">tcp 0 0 0.0.0.0:10050 0.0.0.0:* LISTEN</span><br><span class="line">22546/zabbix_agentd</span><br><span class="line">tcp6 0 0 :::10050</span><br></pre></td></tr></table></figure><h2 id="步骤步骤流程指示图-1"><a href="#步骤步骤流程指示图-1" class="headerlink" title="步骤步骤流程指示图"></a>步骤步骤流程指示图</h2><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230321095316893.png" alt="image-20230321095316893"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230321095332169.png" alt="image-20230321095332169"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230321095347598.png"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230321095336173.png" alt="image-20230321095336173"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230321095428006.png" alt="image-20230321095428006"></p><p><img src="https://bkup-ast.oss-cn-shanghai.aliyuncs.com/img_sre/image-20230321095430954.png" alt="image-20230321095430954"></p><h1 id="Zabbix错误排查"><a href="#Zabbix错误排查" class="headerlink" title="Zabbix错误排查"></a>Zabbix错误排查</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查端口</span></span><br><span class="line">telnet 10.0.0.51 10050</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查服务是否能获取到客户端的监控数据</span></span><br><span class="line">zabbix_get</span><br><span class="line">-s 指定主机IP地址</span><br><span class="line">-k 指定监控项名称</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装zabbix检查软件</span></span><br><span class="line">yum install -y zabbix-get.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务端是否能够获取到客户端的监控数据</span></span><br><span class="line">zabbix_get -s 172.16.1.51 -k system.swap.size[,pfree]</span><br><span class="line">zabbix_get -s 172.16.1.51 -k system.swap.size[,free]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看nginx日志</span></span><br><span class="line"><span class="built_in">tail</span> -f /var/opt/rh/rh-nginx116/log/nginx/access.log</span><br><span class="line"><span class="built_in">tail</span> -f /var/opt/rh/rh-nginx116/log/nginx/error.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看zabbix-server的日志</span></span><br><span class="line"><span class="built_in">tail</span> -f /var/log/zabbix/zabbix_server.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看zabbix-agent的日志</span></span><br><span class="line"><span class="built_in">tail</span> -f /var/log/zabbix/zabbix_agentd.log</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;Zabbix监控快速安装&quot;&gt;&lt;a href=&quot;#Zabbix监控快速安装&quot; class=&quot;headerlink&quot; title=&quot;Zabbix监控快速安装&quot;&gt;&lt;/a&gt;Zabbix监控快速安装&lt;/h1&gt;&lt;h2 id=&quot;配置zabbix官方仓库</summary>
      
    
    
    
    <category term="Zabbix" scheme="https://chenlinbb.github.io/categories/Zabbix/"/>
    
    
    <category term="自动化运维" scheme="https://chenlinbb.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/"/>
    
    <category term="应用监控" scheme="https://chenlinbb.github.io/tags/%E5%BA%94%E7%94%A8%E7%9B%91%E6%8E%A7/"/>
    
    <category term="数据分析" scheme="https://chenlinbb.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="Zabbix" scheme="https://chenlinbb.github.io/tags/Zabbix/"/>
    
  </entry>
  
</feed>
